{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzeSentiment } from '../services/openaiService';\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\nimport Navigation from './Navigation';\nimport Header from './Header';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feedback-positive\", \"feedback-neutral\", \"feedback-negative\", \"feedback\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#A0AEC0\", \"#E53E3E\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Gray, Red, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  var _analyticsData$sentim, _analyticsData$sentim2, _analyticsData$sentim3, _aiInsights$personas, _aiInsights$sentiment, _aiInsights$sentiment2, _aiInsights$sentiment3, _aiInsights$sentiment4, _aiInsights$themes, _aiInsights$sentiment5, _aiInsights$sentiment6, _aiInsights$sentiment7, _aiInsights$sentiment8, _aiInsights$feedbackT;\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables back\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // MiniMap implementation - define this before any useEffects that use it\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current || !graphData.nodes || graphData.nodes.length === 0) return () => {};\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9).attr(\"stroke\", \"#3182CE\").attr(\"stroke-width\", 2).attr(\"rx\", 6);\n\n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create links array with proper source/target references\n    const miniMapLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return {\n        source: sourceId,\n        target: targetId\n      };\n    }).filter(link => {\n      // Filter out links with invalid source or target\n      return miniMapNodes.some(n => n.id === link.source) && miniMapNodes.some(n => n.id === link.target);\n    });\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5)).force(\"charge\", d3.forceManyBody().strength(-20)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(4));\n\n    // Add mini-map links\n    const miniLinks = miniMapContainer.selectAll(\".mini-link\").data(miniMapLinks).enter().append(\"line\").attr(\"class\", \"mini-link\").attr(\"stroke\", \"#ccc\").attr(\"stroke-width\", 0.5);\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3).attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 15).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"fill\", \"#2D3748\").text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniLinks.attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    }).attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    }).attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    }).attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click behavior\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData, colorScale]);\n\n  // Simulate loading data on initial render - without createMiniMap dependency\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Add a separate effect to create the mini-map after loading\n  useEffect(() => {\n    if (!loading && showMiniMap && svgRef.current) {\n      const timer = setTimeout(() => {\n        createMiniMap();\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [loading, showMiniMap, dimensions]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    // Only create minimap if the SVG ref exists, dimensions are valid, and showMiniMap is true\n    if (svgRef.current && dimensions.width > 0 && dimensions.height > 0 && showMiniMap) {\n      // Remove any existing mini-map first to prevent duplicates\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    } else {\n      // Clean up any existing mini-map if showMiniMap is false\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height, selectedNode]);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n\n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n\n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100).strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(30));\n    simulationRef.current = simulation;\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(validLinks).enter().append(\"line\").attr(\"stroke-width\", d => Math.max(2, d.strength * 6)).attr(\"stroke\", \"#ccc\").attr(\"opacity\", d => {\n      // Apply opacity to links based on highlight mode\n      if (highlightMode === 'none') return 0.8; // Default opacity\n\n      // Get source and target node objects\n      const sourceNode = typeof d.source === 'object' ? d.source : nodes.find(n => n.id === d.source);\n      const targetNode = typeof d.target === 'object' ? d.target : nodes.find(n => n.id === d.target);\n      if (!sourceNode || !targetNode) return 0.2; // Fade out if invalid link\n\n      // Highlight links between nodes of the highlighted type\n      if (highlightMode === 'themes' && (sourceNode.type === 'theme' || targetNode.type === 'theme')) {\n        return 1.0;\n      }\n      if (highlightMode === 'feedback' && (sourceNode.type === 'feedback' || targetNode.type === 'feedback')) {\n        return 1.0;\n      }\n      if (highlightMode === 'personas' && (sourceNode.type === 'persona' || targetNode.type === 'persona')) {\n        return 1.0;\n      }\n      return 0.2; // Fade out non-highlighted links\n    });\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n\n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 15;\n      return 10; // Smaller feedback nodes\n    }).attr(\"fill\", d => {\n      // Update this section to use sentiment-based coloring for feedback nodes\n      if (d.type === \"feedback\") {\n        if (d.sentiment === \"Positive\") return colorScale(\"feedback-positive\");\n        if (d.sentiment === \"Negative\") return colorScale(\"feedback-negative\");\n        return colorScale(\"feedback-neutral\"); // Default to neutral if sentiment is not set or is \"Neutral\"\n      }\n      return colorScale(d.type);\n    }).attr(\"stroke\", d => {\n      // Add a special stroke to highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') {\n          return \"#FFD700\"; // Gold stroke for highlighted theme nodes\n        }\n        if (highlightMode === 'feedback' && d.type === 'feedback') {\n          return \"#FFD700\"; // Gold stroke for highlighted feedback nodes\n        }\n        if (highlightMode === 'personas' && d.type === 'persona') {\n          return \"#FFD700\"; // Gold stroke for highlighted persona nodes\n        }\n      }\n      return \"#fff\"; // Default white stroke\n    }).attr(\"stroke-width\", d => {\n      // Thicker stroke for highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') return 3;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 3;\n        if (highlightMode === 'personas' && d.type === 'persona') return 3;\n      }\n      return 2; // Default stroke width\n    }).attr(\"opacity\", d => {\n      // Apply opacity to nodes based on highlight mode\n      if (highlightMode === 'none') return 1.0; // Full opacity if no highlighting\n\n      // Highlight specific node types\n      if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n      if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n      return 0.3; // Fade out non-highlighted nodes\n    });\n\n    // Add labels with better positioning\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 25;\n      return 22; // Position feedback labels\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n    .attr(\"fill\", d => {\n      // Make text more visible for highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') return \"#000\";\n        if (highlightMode === 'feedback' && d.type === 'feedback') return \"#000\";\n        if (highlightMode === 'personas' && d.type === 'persona') return \"#000\";\n        return \"#999\"; // Faded text for non-highlighted nodes\n      }\n      return \"#333\"; // Default text color\n    }).attr(\"opacity\", d => {\n      // Match opacity with the node circles\n      if (highlightMode === 'none') return 1.0;\n      if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n      if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n      return 0.3;\n    });\n\n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\").text(d => d.type === \"feedback\" ? d.title : d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, highlightMode, selectedNode]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Starting import from file:\", file.name);\n\n    // Use our async utility function\n    importFeedbackData(file).then(async importedData => {\n      console.log(\"Processed import data:\", importedData);\n\n      // Process feedback nodes for sentiment analysis\n      const feedbackNodes = importedData.nodes.filter(node => node.type === 'feedback' && !node.sentiment);\n\n      // If we have feedback nodes without sentiment, analyze them\n      if (feedbackNodes.length > 0) {\n        setIsAIProcessing(true);\n\n        // Process in batches to avoid overwhelming the API\n        const batchSize = 5;\n        for (let i = 0; i < feedbackNodes.length; i += batchSize) {\n          const batch = feedbackNodes.slice(i, i + batchSize);\n\n          // Process each node in the batch\n          await Promise.all(batch.map(async node => {\n            try {\n              const feedbackText = node.text || node.fullText || node.name || \"\";\n              const result = await analyzeSentiment(feedbackText);\n              node.sentiment = result.sentiment;\n            } catch (error) {\n              console.warn(`Error analyzing sentiment for node ${node.id}:`, error);\n              node.sentiment = \"Neutral\"; // Fallback\n            }\n          }));\n        }\n        setIsAIProcessing(false);\n      }\n\n      // Ensure node structure is compatible with visualization\n      const processedNodes = importedData.nodes.map(node => {\n        // Make sure each node has the essential properties\n        return {\n          ...node,\n          // Ensure these critical properties exist\n          id: node.id,\n          name: node.name || node.label || \"Unnamed\",\n          type: node.type || \"theme\",\n          // Add appropriate properties based on type\n          ...(node.type === 'theme' ? {\n            feedbackCount: node.feedbackCount || 5\n          } : {}),\n          ...(node.type === 'feature' ? {\n            priority: node.priority || 'Medium'\n          } : {})\n        };\n      });\n\n      // Update analytics data with sentiment distribution\n      const sentimentCounts = processedNodes.filter(node => node.type === 'feedback' && node.sentiment).reduce((counts, node) => {\n        counts[node.sentiment] = (counts[node.sentiment] || 0) + 1;\n        return counts;\n      }, {});\n      const updatedAnalytics = {\n        ...importedData.analytics,\n        sentimentDistribution: sentimentCounts\n      };\n      setGraphData({\n        nodes: processedNodes,\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n      setAnalyticsData(updatedAnalytics);\n      setLoading(false);\n\n      // Reset any selections and force a re-center\n      setSelectedNode(null);\n      setTimeout(() => {\n        if (zoomRef.current) {\n          const svg = d3.select(svgRef.current);\n          const svgWidth = svg.node().getBoundingClientRect().width;\n          const svgHeight = svg.node().getBoundingClientRect().height;\n          svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity.translate(svgWidth / 2, svgHeight / 2).scale(0.8));\n        }\n      }, 300);\n    }).catch(error => {\n      console.error(\"Error importing feedback data:\", error);\n      setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n      setLoading(false);\n    });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = text => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return {\n        theme: 'Stability Issues'\n      };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return {\n        theme: 'Performance'\n      };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return {\n        theme: 'Mobile Experience'\n      };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || lowerText.includes('layout') || lowerText.includes('look')) {\n      return {\n        theme: 'User Interface'\n      };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return {\n        theme: 'Reporting & Analytics'\n      };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return {\n        theme: 'Data Export & Import'\n      };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return {\n        theme: 'Search & Navigation'\n      };\n    }\n    return {\n      theme: 'General Feedback'\n    };\n  };\n\n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = theme => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{\n        name: 'Crash Prevention & Recovery',\n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{\n        name: 'Performance Optimization',\n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{\n        name: 'Responsive Design Overhaul',\n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{\n        name: 'UI Modernization',\n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{\n        name: 'Custom Report Builder',\n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{\n        name: 'Enhanced Export Options',\n        priority: 'High'\n      }];\n    } else {\n      return [{\n        name: 'User Experience Improvements',\n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback(feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n\n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n\n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n\n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n\n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n\n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n\n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i + 1} of ${chunks.length}...`);\n\n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n\n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({\n            ...newGraph\n          });\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n\n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5); // Top 5 themes\n\n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n\n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n\n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n\n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                if (sourceId === theme.id || targetId === theme.id) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => l.source === personaId && l.target === featureId || l.source === featureId && l.target === personaId);\n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n\n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n\n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n\n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n\n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      setGraphData(newGraph);\n\n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n\n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes).force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          tempSimulation.stop();\n        }\n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n\n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Update the handleNodeClick function to properly handle all node types\n  const handleNodeClick = useCallback(node => {\n    if (!node) return;\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights\n    let insights = {\n      results: [],\n      nodeType: node.type,\n      nodeId: node.id,\n      nodeName: node.name\n    };\n    if (node.type === \"theme\") {\n      // Theme node view\n      insights.isThemeView = true;\n      insights.theme = node.name;\n\n      // Find all feedback connected to this theme\n      const connectedFeedback = connectedNodes.filter(n => n.type === \"feedback\");\n      insights.feedbackCount = connectedFeedback.length;\n\n      // Get sentiment distribution for this theme\n      const sentimentCount = {\n        Positive: connectedFeedback.filter(n => n.sentiment === \"Positive\").length,\n        Negative: connectedFeedback.filter(n => n.sentiment === \"Negative\").length,\n        Neutral: connectedFeedback.filter(n => n.sentiment === \"Neutral\").length\n      };\n      insights.sentimentDistribution = sentimentCount;\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      insights.personas = connectedPersonas.map(p => p.name);\n\n      // Example feedback for this theme\n      insights.exampleFeedback = connectedFeedback.slice(0, 3).map(f => ({\n        text: f.text || f.fullText || f.name || \"\",\n        sentiment: f.sentiment || \"Neutral\"\n      }));\n      setAIInsights(insights);\n      setShowAIInsightsPanel(true);\n    } else if (node.type === \"persona\") {\n      // Persona node view\n      insights.isPersonaView = true;\n      insights.persona = node.name;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      insights.themes = connectedThemes.map(t => t.name);\n\n      // Find all feedback indirectly connected to this persona through themes\n      let relatedFeedback = [];\n      for (const theme of connectedThemes) {\n        const themeLinks = graphData.links.filter(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          return sourceId === theme.id || targetId === theme.id;\n        });\n        const themeFeedbackIds = themeLinks.map(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          const connectedId = sourceId === theme.id ? targetId : sourceId;\n          return connectedId;\n        });\n        const themeFeedback = graphData.nodes.filter(n => themeFeedbackIds.includes(n.id) && n.type === \"feedback\" && !relatedFeedback.some(f => f.id === n.id));\n        relatedFeedback = [...relatedFeedback, ...themeFeedback];\n      }\n\n      // Get sentiment distribution for this persona's feedback\n      const sentimentCount = {\n        Positive: relatedFeedback.filter(n => n.sentiment === \"Positive\").length,\n        Negative: relatedFeedback.filter(n => n.sentiment === \"Negative\").length,\n        Neutral: relatedFeedback.filter(n => n.sentiment === \"Neutral\").length\n      };\n      insights.sentimentDistribution = sentimentCount;\n      insights.feedbackCount = relatedFeedback.length;\n\n      // Example feedback for this persona\n      insights.exampleFeedback = relatedFeedback.slice(0, 3).map(f => ({\n        text: f.text || f.fullText || f.name || \"\",\n        sentiment: f.sentiment || \"Neutral\"\n      }));\n      setAIInsights(insights);\n      setShowAIInsightsPanel(true);\n    } else if (node.type === \"feedback\") {\n      // Feedback node view - with restored full text extraction\n      insights.isFeedbackView = true;\n\n      // Get the full text - check all possible properties where text might be stored\n      insights.feedbackText = node.fullText || node.originalText || node.completeText || node.text || node.content || node.feedback || node.description || node.title || node.name || \"\";\n      console.log(\"Initial feedback text:\", insights.feedbackText);\n\n      // If we have access to feedbackItems array, try to find a matching item with full text\n      if (feedbackItems && feedbackItems.length > 0) {\n        // Try to find a matching feedback item by id or text\n        const matchingItem = feedbackItems.find(item => item.id === node.id || item.text && node.text && item.text.includes(node.text) || item.text && node.name && item.text.includes(node.name) ||\n        // Also try matching in reverse - node text might be a substring of item text\n        node.text && item.text && node.text.includes(item.text) || node.name && item.text && node.name.includes(item.text));\n        if (matchingItem && matchingItem.text) {\n          // Use the full text from the matching item if it's longer\n          if (matchingItem.text.length > insights.feedbackText.length) {\n            console.log(\"Found longer matching text in feedbackItems\");\n            insights.feedbackText = matchingItem.text;\n          }\n\n          // Also update user role and timestamp if available\n          if (matchingItem.user_role) {\n            insights.user_role = matchingItem.user_role;\n          }\n          if (matchingItem.timestamp) {\n            insights.timestamp = matchingItem.timestamp;\n          }\n        }\n      }\n      console.log(\"Final feedback text length:\", insights.feedbackText.length);\n\n      // Always prefer the node's user_role if available\n      insights.user_role = node.user_role || node.persona || node.role || insights.user_role || \"Unknown User\";\n      insights.timestamp = node.timestamp || node.date || node.created_at || new Date().toISOString();\n\n      // Get related themes if available\n      if (node.themes) {\n        insights.relatedThemes = node.themes;\n      } else {\n        // Try to find related themes from connections\n        const relatedThemes = connectedNodes.filter(n => n.type === \"theme\").map(n => n.name);\n        if (relatedThemes.length > 0) {\n          insights.relatedThemes = relatedThemes;\n        }\n      }\n\n      // Check if node already has sentiment\n      if (node.sentiment) {\n        insights.sentiment = node.sentiment;\n        setAIInsights(insights);\n        setShowAIInsightsPanel(true);\n      } else {\n        // If no sentiment, analyze it with OpenAI\n        setIsAIProcessing(true);\n\n        // Get the text to analyze\n        const textToAnalyze = insights.feedbackText;\n        if (textToAnalyze && textToAnalyze.length > 0) {\n          // Call OpenAI service to analyze sentiment\n          analyzeSentiment(textToAnalyze).then(result => {\n            console.log(\"Sentiment analysis result:\", result);\n\n            // Update insights with sentiment\n            insights.sentiment = result.sentiment;\n\n            // Update the node with sentiment for future reference\n            setGraphData(prevData => ({\n              ...prevData,\n              nodes: prevData.nodes.map(n => n.id === node.id ? {\n                ...n,\n                sentiment: result.sentiment\n              } : n)\n            }));\n\n            // Update analytics data\n            if (analyticsData) {\n              const updatedCounts = {\n                ...(analyticsData.sentimentDistribution || {}),\n                [result.sentiment]: ((analyticsData.sentimentDistribution || {})[result.sentiment] || 0) + 1\n              };\n              setAnalyticsData({\n                ...analyticsData,\n                sentimentDistribution: updatedCounts\n              });\n            }\n\n            // Show insights panel\n            setAIInsights(insights);\n            setShowAIInsightsPanel(true);\n            setIsAIProcessing(false);\n          }).catch(error => {\n            console.error(\"Error analyzing sentiment:\", error);\n            insights.sentiment = \"Neutral\"; // Fallback\n            setAIInsights(insights);\n            setShowAIInsightsPanel(true);\n            setIsAIProcessing(false);\n          });\n        } else {\n          // No text to analyze\n          console.warn(\"No feedback text to analyze for sentiment\");\n          insights.sentiment = \"Neutral\";\n          setAIInsights(insights);\n          setShowAIInsightsPanel(true);\n          setIsAIProcessing(false);\n        }\n      }\n      return; // Exit early since we're handling async operations\n    }\n\n    // Ensure mini-map is recreated if it should be visible\n    if (showMiniMap) {\n      setTimeout(() => {\n        if (svgRef.current) {\n          d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n          createMiniMap();\n        }\n      }, 0);\n    }\n  }, [graphData, feedbackItems, showMiniMap, createMiniMap, analyticsData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n  const handleDataImported = importedData => {\n    if (importedData) {\n      setGraphData({\n        nodes: importedData.nodes || [],\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add these functions back\n  const exportData = useCallback(() => {\n    // Prepare complete export with all AI data\n    const completeExportData = {\n      // Include the graph structure\n      nodes: graphData.nodes.map(node => ({\n        ...node,\n        // If there are any D3-specific properties that shouldn't be exported, filter them out here\n        fx: undefined,\n        fy: undefined,\n        index: undefined,\n        vx: undefined,\n        vy: undefined,\n        x: undefined,\n        y: undefined\n      })),\n      links: graphData.links.map(link => {\n        // Ensure links use id strings rather than object references\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return {\n          source: sourceId,\n          target: targetId,\n          strength: link.strength || 0.5\n        };\n      }),\n      // Include all AI-generated insights\n      insights: insights || [],\n      // Include analytics data with sentiment distribution\n      analytics: {\n        ...analyticsData,\n        // Ensure sentiment distribution is included\n        sentimentDistribution: (analyticsData === null || analyticsData === void 0 ? void 0 : analyticsData.sentimentDistribution) || {\n          Positive: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Positive').length,\n          Negative: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Negative').length,\n          Neutral: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Neutral').length\n        },\n        exportDate: new Date().toISOString(),\n        exportVersion: \"1.0\"\n      },\n      // Include raw feedback data if available\n      feedbackItems: feedbackItems || []\n    };\n\n    // Convert to JSON string with nice formatting\n    const dataStr = JSON.stringify(completeExportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    console.log(\"Exported data with AI insights and sentiment analysis\");\n  }, [graphData, insights, analyticsData, feedbackItems]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1618,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1628,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-blue-800\",\n              children: \"Feedback Force\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"Transform user feedback into actionable insights. AI-powered theme detection and relationship mapping.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search\",\n              value: searchTerm,\n              onChange: e => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              },\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1656,\n              columnNumber: 15\n            }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n              children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n                onClick: () => {\n                  setSelectedNode(result);\n                  handleNodeClick(result);\n                  setShowSearchResults(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-3 h-3 rounded-full mr-2\",\n                    style: {\n                      backgroundColor: colorScale(result.type)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1688,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: result.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1692,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-xs text-gray-500\",\n                    children: [\"(\", result.type, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1693,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1687,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1678,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1676,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1655,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n              onClick: exportData,\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n              children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".json\",\n                className: \"hidden\",\n                onChange: importData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1714,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n              onClick: resetVisualization,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"View:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n              onClick: centerView,\n              children: \"Center View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n              onClick: toggleMiniMap,\n              children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1737,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n              onClick: fitToScreen,\n              title: \"Fit all nodes to screen\",\n              children: \"Fit to Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1729,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Highlight:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1755,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('none'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1757,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('themes'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1765,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('feedback'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1773,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('personas'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"User Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1781,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1756,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1754,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: containerRef,\n          className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n          style: {\n            marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n            minHeight: '500px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: svgRef,\n            width: \"100%\",\n            height: \"100%\",\n            className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n            style: {\n              minHeight: '500px'\n            },\n            onClick: () => setSelectedNode(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            colorScale: colorScale,\n            showSentiment: true,\n            sentimentColors: {\n              positive: colorScale(\"feedback-positive\"),\n              neutral: colorScale(\"feedback-neutral\"),\n              negative: colorScale(\"feedback-negative\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: zoomIn,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1832,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: zoomOut,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1838,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1834,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: fitToScreen,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"\\u22A1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1844,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1840,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1827,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1798,\n          columnNumber: 11\n        }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`,\n          style: {\n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50 shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n              className: \"text-gray-500 hover:text-gray-700\",\n              children: isPanelCollapsed ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M13 5l7 7-7 7M5 5l7 7-7 7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1866,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1865,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M11 19l-7-7 7-7m8 14l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1870,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1869,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 15\n          }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex flex-col overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-white z-30 shrink-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold text-gray-800\",\n                children: \"AI Feedback Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1881,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowAIInsightsPanel(false),\n                className: \"text-gray-500 hover:text-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  className: \"h-5 w-5\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    fillRule: \"evenodd\",\n                    d: \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\",\n                    clipRule: \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1889,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1888,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1884,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1880,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 overflow-y-auto p-4 pb-20\",\n              children: [isAIProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center items-center h-full\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1899,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1898,\n                columnNumber: 23\n              }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-red-50 p-4 rounded-lg border border-red-200 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-red-800 mb-2\",\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1906,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-red-700\",\n                  children: aiError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1907,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1905,\n                columnNumber: 23\n              }, this), !isAIProcessing && !aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [analyticsData && analyticsData.sentimentDistribution && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-6 pb-6 border-b border-gray-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-semibold text-gray-700 mb-4\",\n                    children: \"Sentiment Overview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1917,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center justify-around mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-green-500 text-2xl font-bold\",\n                          children: ((_analyticsData$sentim = analyticsData.sentimentDistribution) === null || _analyticsData$sentim === void 0 ? void 0 : _analyticsData$sentim.Positive) || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1921,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xs text-gray-500\",\n                          children: \"Positive\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1924,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1920,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-red-500 text-2xl font-bold\",\n                          children: ((_analyticsData$sentim2 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim2 === void 0 ? void 0 : _analyticsData$sentim2.Negative) || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1927,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xs text-gray-500\",\n                          children: \"Negative\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1930,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1926,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-gray-500 text-2xl font-bold\",\n                          children: ((_analyticsData$sentim3 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim3 === void 0 ? void 0 : _analyticsData$sentim3.Neutral) || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1933,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xs text-gray-500\",\n                          children: \"Neutral\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1936,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1932,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1919,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1918,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1916,\n                  columnNumber: 27\n                }, this), aiInsights.isThemeView && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-4 h-4 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('theme')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1947,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-gray-700\",\n                      children: [\"Theme: \", aiInsights.theme]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1948,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1946,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-3 gap-2 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-blue-600\",\n                          children: aiInsights.feedbackCount || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1954,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1955,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1953,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-purple-600\",\n                          children: ((_aiInsights$personas = aiInsights.personas) === null || _aiInsights$personas === void 0 ? void 0 : _aiInsights$personas.length) || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1959,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Users\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1960,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1958,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-teal-600\",\n                          children: [Math.round((((_aiInsights$sentiment = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment === void 0 ? void 0 : _aiInsights$sentiment.Positive) || 0) / Math.max(1, (((_aiInsights$sentiment2 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment2 === void 0 ? void 0 : _aiInsights$sentiment2.Positive) || 0) + (((_aiInsights$sentiment3 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment3 === void 0 ? void 0 : _aiInsights$sentiment3.Negative) || 0) + (((_aiInsights$sentiment4 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment4 === void 0 ? void 0 : _aiInsights$sentiment4.Neutral) || 0)) * 100) || 0, \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1964,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Positive\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1970,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1963,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1952,\n                      columnNumber: 31\n                    }, this), aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Sentiment Distribution\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1977,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex h-6 rounded-full overflow-hidden\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-green-500\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1979,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-red-500\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1985,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-gray-400\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1991,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1978,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Positive, \" Positive\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1999,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Negative, \" Negative\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2000,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Neutral, \" Neutral\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2001,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1998,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1976,\n                      columnNumber: 33\n                    }, this), aiInsights.personas && aiInsights.personas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Associated User Roles\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2009,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex flex-wrap gap-2\",\n                        children: aiInsights.personas.map((persona, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm\",\n                          children: persona\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2012,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2010,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2008,\n                      columnNumber: 33\n                    }, this), aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Example Feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2023,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: aiInsights.exampleFeedback.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-white p-3 rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-700 italic mb-2\",\n                            children: [\"\\\"\", item.text, \"\\\"\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2027,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `text-xs px-2 py-1 rounded-full inline-block ${item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-700'}`,\n                            children: item.sentiment\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2028,\n                            columnNumber: 41\n                          }, this)]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2026,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2024,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2022,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1951,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1945,\n                  columnNumber: 27\n                }, this), aiInsights.isPersonaView && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-4 h-4 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('persona')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2048,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-gray-700\",\n                      children: [\"User Role: \", aiInsights.persona]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2049,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2047,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-3 gap-2 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-blue-600\",\n                          children: ((_aiInsights$themes = aiInsights.themes) === null || _aiInsights$themes === void 0 ? void 0 : _aiInsights$themes.length) || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2055,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Themes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2056,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2054,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-green-600\",\n                          children: aiInsights.feedbackCount || 0\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2060,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2061,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2059,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-xl font-bold text-teal-600\",\n                          children: [Math.round((((_aiInsights$sentiment5 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment5 === void 0 ? void 0 : _aiInsights$sentiment5.Positive) || 0) / Math.max(1, (((_aiInsights$sentiment6 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment6 === void 0 ? void 0 : _aiInsights$sentiment6.Positive) || 0) + (((_aiInsights$sentiment7 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment7 === void 0 ? void 0 : _aiInsights$sentiment7.Negative) || 0) + (((_aiInsights$sentiment8 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment8 === void 0 ? void 0 : _aiInsights$sentiment8.Neutral) || 0)) * 100) || 0, \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2065,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                          children: \"Positive\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2071,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2064,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2053,\n                      columnNumber: 31\n                    }, this), aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Feedback Sentiment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2078,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex h-6 rounded-full overflow-hidden\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-green-500\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2080,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-red-500\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2086,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-gray-400\",\n                          style: {\n                            width: `${aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2092,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2079,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Positive, \" Positive\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2100,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Negative, \" Negative\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2101,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [aiInsights.sentimentDistribution.Neutral, \" Neutral\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2102,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2099,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2077,\n                      columnNumber: 33\n                    }, this), aiInsights.themes && aiInsights.themes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Associated Themes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2110,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex flex-wrap gap-2\",\n                        children: aiInsights.themes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\",\n                          children: theme\n                        }, idx, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2113,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2111,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2109,\n                      columnNumber: 33\n                    }, this), aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Example Feedback\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2124,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-3\",\n                        children: aiInsights.exampleFeedback.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-white p-3 rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-sm text-gray-700 italic mb-2\",\n                            children: [\"\\\"\", item.text, \"\\\"\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2128,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: `text-xs px-2 py-1 rounded-full inline-block ${item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-700'}`,\n                            children: item.sentiment\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2129,\n                            columnNumber: 41\n                          }, this)]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2127,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2125,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2123,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2052,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2046,\n                  columnNumber: 27\n                }, this), aiInsights.isFeedbackView && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-4 h-4 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('feedback')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2149,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-gray-700\",\n                      children: \"Feedback Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2150,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2148,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-800 mb-4 bg-white p-3 rounded border border-gray-200 max-h-80 overflow-y-auto\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"whitespace-pre-wrap text-base leading-relaxed\",\n                        children: [\"\\\"\", aiInsights.feedbackText, \"\\\"\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2156,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mt-3 pt-3 border-t border-gray-200 text-xs text-gray-500\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [\"Content length: \", ((_aiInsights$feedbackT = aiInsights.feedbackText) === null || _aiInsights$feedbackT === void 0 ? void 0 : _aiInsights$feedbackT.length) || 0, \" characters\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2160,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2159,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2155,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                          xmlns: \"http://www.w3.org/2000/svg\",\n                          className: \"h-4 w-4 text-gray-500 mr-1\",\n                          fill: \"none\",\n                          viewBox: \"0 0 24 24\",\n                          stroke: \"currentColor\",\n                          children: /*#__PURE__*/_jsxDEV(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeWidth: 2,\n                            d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2167,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2166,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm text-gray-600 font-medium\",\n                          children: aiInsights.user_role || 'Unknown User'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2169,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2165,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-xs text-gray-500\",\n                        children: aiInsights.timestamp ? new Date(aiInsights.timestamp).toLocaleString() : 'No timestamp available'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2172,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2164,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2153,\n                    columnNumber: 29\n                  }, this), aiInsights.sentiment && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4 mb-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-500 mb-2\",\n                      children: \"Sentiment Analysis\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2181,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `px-3 py-2 rounded-full inline-block font-medium text-sm ${aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: aiInsights.sentiment\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2182,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2180,\n                    columnNumber: 31\n                  }, this), aiInsights.relatedThemes && aiInsights.relatedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-4 mb-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-500 mb-2\",\n                      children: \"Related Themes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2195,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap gap-2\",\n                      children: aiInsights.relatedThemes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-blue-50 px-3 py-1 rounded-full text-sm\",\n                        children: theme\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2198,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2196,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2194,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2147,\n                  columnNumber: 27\n                }, this), aiInsights.insights && aiInsights.insights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-8\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-semibold text-gray-700 mb-3\",\n                    children: \"Key Insights\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2211,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: aiInsights.insights.map(insight => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-medium text-gray-800 mb-1\",\n                        children: insight.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2215,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-gray-700 text-sm\",\n                        children: insight.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2216,\n                        columnNumber: 35\n                      }, this)]\n                    }, insight.id || Math.random(), true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2214,\n                      columnNumber: 33\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2212,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2210,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1913,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1895,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1878,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1851,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1797,\n        columnNumber: 9\n      }, this), insights.length > 0 && !showAIInsightsPanel && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setAIInsights({\n            results: [],\n            insights: insights\n          });\n          setShowAIInsightsPanel(true);\n        },\n        className: \"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\",\n        children: [\"View AI Insights (\", insights.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1645,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1642,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"EjxO+MaAT8NTVxLxwT/k+7+laq4=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","classifyFeedback","generateFeatureIdeas","analyzeSentiment","FeedbackImporter","processFeedbackData","importFeedbackData","Legend","Navigation","Header","jsxDEV","_jsxDEV","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","UserResearchNetwork","_s","_analyticsData$sentim","_analyticsData$sentim2","_analyticsData$sentim3","_aiInsights$personas","_aiInsights$sentiment","_aiInsights$sentiment2","_aiInsights$sentiment3","_aiInsights$sentiment4","_aiInsights$themes","_aiInsights$sentiment5","_aiInsights$sentiment6","_aiInsights$sentiment7","_aiInsights$sentiment8","_aiInsights$feedbackT","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","graphData","setGraphData","selectedNode","setSelectedNode","highlightMode","setHighlightMode","loading","setLoading","error","setError","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","insights","setInsights","analyticsData","setAnalyticsData","showMiniMap","setShowMiniMap","createMiniMap","current","length","svg","select","selectAll","remove","miniMapSize","Math","min","miniMapMargin","miniMapContainer","append","attr","miniMapNodes","map","node","miniX","random","miniY","miniMapLinks","link","sourceId","targetId","filter","some","n","miniMapSimulation","forceSimulation","force","forceLink","d","distance","forceManyBody","forceCenter","forceCollide","radius","miniLinks","data","enter","miniNodes","baseColor","color","brighter","text","viewportRect","stop","i","tick","find","style","on","event","x","y","pointer","centerX","centerY","transform","zoomIdentity","translate","scale","transition","duration","call","timer","setTimeout","clearTimeout","cleanupMiniMap","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","recalculateFeedbackCounts","console","log","g","zoom","scaleExtent","Array","isArray","normalizedLinks","validLinks","sourceExists","targetExists","warn","simulation","max","sourceNode","targetNode","drag","dragstarted","dragged","dragended","stopPropagation","fx","fy","handleNodeClick","sentiment","title","active","alphaTarget","restart","feedbackCounts","themes","personas","features","forEach","updatedNodes","prevData","importData","file","files","then","importedData","feedbackNodes","batchSize","batch","slice","Promise","all","feedbackText","fullText","result","processedNodes","label","sentimentCounts","reduce","counts","updatedAnalytics","analytics","sentimentDistribution","svgWidth","svgHeight","catch","message","mockClassifyFeedback","lowerText","toLowerCase","includes","theme","mockGenerateFeatureIdeas","processImportedFeedback","newGraph","nodeMap","item","user_role","personaId","Date","now","Object","keys","personaNode","push","processChunks","chunkSize","chunks","chunk","substring","themeId","themeNode","linkExists","err","resolve","significantThemes","values","sort","a","b","relatedFeedback","featureIdeas","idea","featureId","featureNode","description","existingLink","l","toString","fallback","tempSimulation","connectedLinks","connectedNodeIds","connectedNodes","results","nodeType","nodeId","nodeName","isThemeView","connectedFeedback","sentimentCount","Positive","Negative","Neutral","connectedPersonas","p","exampleFeedback","f","isPersonaView","persona","connectedThemes","t","themeLinks","themeFeedbackIds","connectedId","themeFeedback","isFeedbackView","originalText","completeText","content","feedback","matchingItem","timestamp","role","date","created_at","toISOString","relatedThemes","textToAnalyze","updatedCounts","zoomIn","currentTransform","zoomTransform","k","zoomOut","fitToScreen","minX","Infinity","minY","maxX","maxY","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","handleDataImported","exportData","completeExportData","undefined","index","vx","vy","exportDate","exportVersion","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","resetVisualization","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","e","backgroundColor","accept","ref","marginRight","minHeight","showSentiment","sentimentColors","positive","neutral","negative","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fillRule","clipRule","round","idx","toLocaleString","insight","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzeSentiment } from '../services/openaiService';\n\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\nimport Navigation from './Navigation';\nimport Header from './Header';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n  .domain([\"theme\", \"feedback-positive\", \"feedback-neutral\", \"feedback-negative\", \"feedback\", \"persona\"])\n  .range([\"#3182CE\", \"#38A169\", \"#A0AEC0\", \"#E53E3E\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Gray, Red, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [\n    { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n    { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n    { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n    { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n    { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n    { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n  ],\n  links: [\n    { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n    { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n    { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n    { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n  ]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n  \n  // State\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  \n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  \n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables back\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // MiniMap implementation - define this before any useEffects that use it\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current || !graphData.nodes || graphData.nodes.length === 0) return () => {};\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9)\n      .attr(\"stroke\", \"#3182CE\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"rx\", 6);\n    \n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create links array with proper source/target references\n    const miniMapLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      return {\n        source: sourceId,\n        target: targetId\n      };\n    }).filter(link => {\n      // Filter out links with invalid source or target\n      return miniMapNodes.some(n => n.id === link.source) && \n             miniMapNodes.some(n => n.id === link.target);\n    });\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5))\n      .force(\"charge\", d3.forceManyBody().strength(-20))\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(4));\n    \n    // Add mini-map links\n    const miniLinks = miniMapContainer.selectAll(\".mini-link\")\n      .data(miniMapLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"mini-link\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3);\n      })\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1);\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 15)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"fill\", \"#2D3748\")\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniLinks\n      .attr(\"x1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniX : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniY : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniX : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniY : 0;\n      });\n    \n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add click behavior\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData, colorScale]);\n\n  // Simulate loading data on initial render - without createMiniMap dependency\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Add a separate effect to create the mini-map after loading\n  useEffect(() => {\n    if (!loading && showMiniMap && svgRef.current) {\n      const timer = setTimeout(() => {\n        createMiniMap();\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [loading, showMiniMap, dimensions]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    // Only create minimap if the SVG ref exists, dimensions are valid, and showMiniMap is true\n    if (svgRef.current && dimensions.width > 0 && dimensions.height > 0 && showMiniMap) {\n      // Remove any existing mini-map first to prevent duplicates\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      \n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    } else {\n      // Clean up any existing mini-map if showMiniMap is false\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height, selectedNode]);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    \n    console.log(\"Rendering with data:\", graphData);\n    \n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n    \n    // Set up zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    svg.call(zoom);\n    zoomRef.current = zoom;\n    \n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || \n        !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n        graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n    \n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    \n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    \n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n    \n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(validLinks)\n        .id(d => d.id)\n        .distance(100)\n        .strength(1)) // Stronger link force for better connections\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide(30));\n    \n    simulationRef.current = simulation;\n    \n    // Create the links\n    const link = g.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(validLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", d => Math.max(2, d.strength * 6))\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"opacity\", d => {\n        // Apply opacity to links based on highlight mode\n        if (highlightMode === 'none') return 0.8;  // Default opacity\n        \n        // Get source and target node objects\n        const sourceNode = typeof d.source === 'object' ? d.source : nodes.find(n => n.id === d.source);\n        const targetNode = typeof d.target === 'object' ? d.target : nodes.find(n => n.id === d.target);\n        \n        if (!sourceNode || !targetNode) return 0.2;  // Fade out if invalid link\n        \n        // Highlight links between nodes of the highlighted type\n        if (highlightMode === 'themes' && \n            (sourceNode.type === 'theme' || targetNode.type === 'theme')) {\n          return 1.0;\n        }\n        \n        if (highlightMode === 'feedback' && \n            (sourceNode.type === 'feedback' || targetNode.type === 'feedback')) {\n          return 1.0;\n        }\n        \n        if (highlightMode === 'personas' && \n            (sourceNode.type === 'persona' || targetNode.type === 'persona')) {\n          return 1.0;\n        }\n        \n        return 0.2;  // Fade out non-highlighted links\n      });\n    \n    // Create the nodes\n    const node = g.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        \n        if (selectedNode && selectedNode.id === d.id) {\n          // If clicking the same node again, release it\n          d.fx = null;\n          d.fy = null;\n          setSelectedNode(null);\n        } else {\n          // If clicking a new node, fix its position\n          d.fx = d.x;\n          d.fy = d.y;\n          setSelectedNode(d);\n          handleNodeClick(d);\n        }\n      });\n    \n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 15;\n        return 10; // Smaller feedback nodes\n      })\n      .attr(\"fill\", d => {\n        // Update this section to use sentiment-based coloring for feedback nodes\n        if (d.type === \"feedback\") {\n          if (d.sentiment === \"Positive\") return colorScale(\"feedback-positive\");\n          if (d.sentiment === \"Negative\") return colorScale(\"feedback-negative\");\n          return colorScale(\"feedback-neutral\"); // Default to neutral if sentiment is not set or is \"Neutral\"\n        }\n        return colorScale(d.type);\n      })\n      .attr(\"stroke\", d => {\n        // Add a special stroke to highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') {\n            return \"#FFD700\"; // Gold stroke for highlighted theme nodes\n          }\n          if (highlightMode === 'feedback' && d.type === 'feedback') {\n            return \"#FFD700\"; // Gold stroke for highlighted feedback nodes\n          }\n          if (highlightMode === 'personas' && d.type === 'persona') {\n            return \"#FFD700\"; // Gold stroke for highlighted persona nodes\n          }\n        }\n        return \"#fff\"; // Default white stroke\n      })\n      .attr(\"stroke-width\", d => {\n        // Thicker stroke for highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') return 3;\n          if (highlightMode === 'feedback' && d.type === 'feedback') return 3;\n          if (highlightMode === 'personas' && d.type === 'persona') return 3;\n        }\n        return 2; // Default stroke width\n      })\n      .attr(\"opacity\", d => {\n        // Apply opacity to nodes based on highlight mode\n        if (highlightMode === 'none') return 1.0;  // Full opacity if no highlighting\n        \n        // Highlight specific node types\n        if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n        \n        return 0.3;  // Fade out non-highlighted nodes\n      });\n    \n    // Add labels with better positioning\n    node.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return 30 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 25;\n        return 22; // Position feedback labels\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n      .attr(\"fill\", d => {\n        // Make text more visible for highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') return \"#000\";\n          if (highlightMode === 'feedback' && d.type === 'feedback') return \"#000\";\n          if (highlightMode === 'personas' && d.type === 'persona') return \"#000\";\n          return \"#999\"; // Faded text for non-highlighted nodes\n        }\n        return \"#333\"; // Default text color\n      })\n      .attr(\"opacity\", d => {\n        // Match opacity with the node circles\n        if (highlightMode === 'none') return 1.0;\n        \n        if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n        \n        return 0.3;\n      });\n    \n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\")\n      .text(d => d.type === \"feedback\" ? d.title : d.name);\n    \n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n    \n    // Update link positions immediately with node positions from simulation ticks\n    link\n      .attr(\"x1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.y : 0;\n      });\n    \n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => {\n          // Handle both ID and object references\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.y : 0;\n        });\n      \n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      \n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n    \n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(\n      dimensions.width / 2 - dimensions.width * 0.5,\n      dimensions.height / 2 - dimensions.height * 0.5\n    ).scale(0.8));\n    \n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, highlightMode, selectedNode]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    console.log(\"Starting import from file:\", file.name);\n    \n    // Use our async utility function\n    importFeedbackData(file)\n      .then(async (importedData) => {\n        console.log(\"Processed import data:\", importedData);\n        \n        // Process feedback nodes for sentiment analysis\n        const feedbackNodes = importedData.nodes.filter(node => \n          node.type === 'feedback' && !node.sentiment\n        );\n        \n        // If we have feedback nodes without sentiment, analyze them\n        if (feedbackNodes.length > 0) {\n          setIsAIProcessing(true);\n          \n          // Process in batches to avoid overwhelming the API\n          const batchSize = 5;\n          for (let i = 0; i < feedbackNodes.length; i += batchSize) {\n            const batch = feedbackNodes.slice(i, i + batchSize);\n            \n            // Process each node in the batch\n            await Promise.all(batch.map(async (node) => {\n              try {\n                const feedbackText = node.text || node.fullText || node.name || \"\";\n                const result = await analyzeSentiment(feedbackText);\n                node.sentiment = result.sentiment;\n              } catch (error) {\n                console.warn(`Error analyzing sentiment for node ${node.id}:`, error);\n                node.sentiment = \"Neutral\"; // Fallback\n              }\n            }));\n          }\n          \n          setIsAIProcessing(false);\n        }\n        \n        // Ensure node structure is compatible with visualization\n        const processedNodes = importedData.nodes.map(node => {\n          // Make sure each node has the essential properties\n          return {\n            ...node,\n            // Ensure these critical properties exist\n            id: node.id,\n            name: node.name || node.label || \"Unnamed\",\n            type: node.type || \"theme\",\n            // Add appropriate properties based on type\n            ...(node.type === 'theme' ? { feedbackCount: node.feedbackCount || 5 } : {}),\n            ...(node.type === 'feature' ? { priority: node.priority || 'Medium' } : {})\n          };\n        });\n        \n        // Update analytics data with sentiment distribution\n        const sentimentCounts = processedNodes\n          .filter(node => node.type === 'feedback' && node.sentiment)\n          .reduce((counts, node) => {\n            counts[node.sentiment] = (counts[node.sentiment] || 0) + 1;\n            return counts;\n          }, {});\n        \n        const updatedAnalytics = {\n          ...importedData.analytics,\n          sentimentDistribution: sentimentCounts\n        };\n        \n        setGraphData({ \n          nodes: processedNodes, \n          links: importedData.links || []\n        });\n        setInsights(importedData.insights || []);\n        setAnalyticsData(updatedAnalytics);\n        setLoading(false);\n        \n        // Reset any selections and force a re-center\n        setSelectedNode(null);\n        setTimeout(() => {\n          if (zoomRef.current) {\n            const svg = d3.select(svgRef.current);\n            const svgWidth = svg.node().getBoundingClientRect().width;\n            const svgHeight = svg.node().getBoundingClientRect().height;\n            \n            svg.transition()\n              .duration(750)\n              .call(zoomRef.current.transform, \n                d3.zoomIdentity\n                  .translate(svgWidth / 2, svgHeight / 2)\n                  .scale(0.8)\n              );\n          }\n        }, 300);\n      })\n      .catch(error => {\n        console.error(\"Error importing feedback data:\", error);\n        setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n        setLoading(false);\n      });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = (text) => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return { theme: 'Stability Issues' };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return { theme: 'Performance' };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return { theme: 'Mobile Experience' };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || \n              lowerText.includes('layout') || lowerText.includes('look')) {\n      return { theme: 'User Interface' };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return { theme: 'Reporting & Analytics' };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return { theme: 'Data Export & Import' };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return { theme: 'Search & Navigation' };\n    }\n    \n    return { theme: 'General Feedback' };\n  };\n  \n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = (theme) => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{ \n        name: 'Crash Prevention & Recovery', \n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{ \n        name: 'Performance Optimization', \n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{ \n        name: 'Responsive Design Overhaul', \n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{ \n        name: 'UI Modernization', \n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{ \n        name: 'Custom Report Builder', \n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{ \n        name: 'Enhanced Export Options', \n        priority: 'High'\n      }];\n    } else {\n      return [{ \n        name: 'User Experience Improvements', \n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback((feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    \n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n    \n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n    \n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n    \n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      \n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n    \n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n      \n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n      \n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i+1} of ${chunks.length}...`);\n        \n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          \n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            \n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                \n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => \n                  (link.source === personaNode.id && link.target === themeNode.id) ||\n                  (link.source === themeNode.id && link.target === personaNode.id)\n                );\n                \n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n        \n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({...newGraph});\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n      \n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes)\n        .filter(theme => theme.feedbackCount >= 2)\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 5); // Top 5 themes\n      \n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      \n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n          \n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          \n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          \n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              \n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n              \n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n              \n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                \n                if ((sourceId === theme.id || targetId === theme.id)) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  \n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => \n                      (l.source === personaId && l.target === featureId) ||\n                      (l.source === featureId && l.target === personaId)\n                    );\n                    \n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n      \n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n        \n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          \n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n          \n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n      \n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      \n      setGraphData(newGraph);\n      \n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          \n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes)\n            .force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100))\n            .force(\"charge\", d3.forceManyBody().strength(-300))\n            .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n            .force(\"collide\", d3.forceCollide(40));\n          \n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          \n          tempSimulation.stop();\n        }\n        \n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n    \n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Update the handleNodeClick function to properly handle all node types\n  const handleNodeClick = useCallback((node) => {\n    if (!node) return;\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights\n    let insights = {\n      results: [],\n      nodeType: node.type,\n      nodeId: node.id,\n      nodeName: node.name\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme node view\n      insights.isThemeView = true;\n      insights.theme = node.name;\n      \n      // Find all feedback connected to this theme\n      const connectedFeedback = connectedNodes.filter(n => n.type === \"feedback\");\n      insights.feedbackCount = connectedFeedback.length;\n      \n      // Get sentiment distribution for this theme\n      const sentimentCount = {\n        Positive: connectedFeedback.filter(n => n.sentiment === \"Positive\").length,\n        Negative: connectedFeedback.filter(n => n.sentiment === \"Negative\").length,\n        Neutral: connectedFeedback.filter(n => n.sentiment === \"Neutral\").length\n      };\n      insights.sentimentDistribution = sentimentCount;\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      insights.personas = connectedPersonas.map(p => p.name);\n      \n      // Example feedback for this theme\n      insights.exampleFeedback = connectedFeedback.slice(0, 3).map(f => ({\n        text: f.text || f.fullText || f.name || \"\",\n        sentiment: f.sentiment || \"Neutral\"\n      }));\n      \n      setAIInsights(insights);\n      setShowAIInsightsPanel(true);\n    } \n    else if (node.type === \"persona\") {\n      // Persona node view\n      insights.isPersonaView = true;\n      insights.persona = node.name;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      insights.themes = connectedThemes.map(t => t.name);\n      \n      // Find all feedback indirectly connected to this persona through themes\n      let relatedFeedback = [];\n      for (const theme of connectedThemes) {\n        const themeLinks = graphData.links.filter(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          return (sourceId === theme.id || targetId === theme.id);\n        });\n        \n        const themeFeedbackIds = themeLinks.map(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          const connectedId = sourceId === theme.id ? targetId : sourceId;\n          return connectedId;\n        });\n        \n        const themeFeedback = graphData.nodes.filter(n => \n          themeFeedbackIds.includes(n.id) && \n          n.type === \"feedback\" && \n          !relatedFeedback.some(f => f.id === n.id)\n        );\n        \n        relatedFeedback = [...relatedFeedback, ...themeFeedback];\n      }\n      \n      // Get sentiment distribution for this persona's feedback\n      const sentimentCount = {\n        Positive: relatedFeedback.filter(n => n.sentiment === \"Positive\").length,\n        Negative: relatedFeedback.filter(n => n.sentiment === \"Negative\").length,\n        Neutral: relatedFeedback.filter(n => n.sentiment === \"Neutral\").length\n      };\n      insights.sentimentDistribution = sentimentCount;\n      insights.feedbackCount = relatedFeedback.length;\n      \n      // Example feedback for this persona\n      insights.exampleFeedback = relatedFeedback.slice(0, 3).map(f => ({\n        text: f.text || f.fullText || f.name || \"\",\n        sentiment: f.sentiment || \"Neutral\"\n      }));\n      \n      setAIInsights(insights);\n      setShowAIInsightsPanel(true);\n    }\n    else if (node.type === \"feedback\") {\n      // Feedback node view - with restored full text extraction\n      insights.isFeedbackView = true;\n      \n      // Get the full text - check all possible properties where text might be stored\n      insights.feedbackText = node.fullText || node.originalText || node.completeText || \n                             node.text || node.content || node.feedback || node.description || \n                             node.title || node.name || \"\";\n      \n      console.log(\"Initial feedback text:\", insights.feedbackText);\n      \n      // If we have access to feedbackItems array, try to find a matching item with full text\n      if (feedbackItems && feedbackItems.length > 0) {\n        // Try to find a matching feedback item by id or text\n        const matchingItem = feedbackItems.find(item => \n          (item.id === node.id) || \n          (item.text && node.text && item.text.includes(node.text)) ||\n          (item.text && node.name && item.text.includes(node.name)) ||\n          // Also try matching in reverse - node text might be a substring of item text\n          (node.text && item.text && node.text.includes(item.text)) ||\n          (node.name && item.text && node.name.includes(item.text))\n        );\n        \n        if (matchingItem && matchingItem.text) {\n          // Use the full text from the matching item if it's longer\n          if (matchingItem.text.length > insights.feedbackText.length) {\n            console.log(\"Found longer matching text in feedbackItems\");\n            insights.feedbackText = matchingItem.text;\n          }\n          \n          // Also update user role and timestamp if available\n          if (matchingItem.user_role) {\n            insights.user_role = matchingItem.user_role;\n          }\n          if (matchingItem.timestamp) {\n            insights.timestamp = matchingItem.timestamp;\n          }\n        }\n      }\n      \n      console.log(\"Final feedback text length:\", insights.feedbackText.length);\n      \n      // Always prefer the node's user_role if available\n      insights.user_role = node.user_role || node.persona || node.role || insights.user_role || \"Unknown User\";\n      insights.timestamp = node.timestamp || node.date || node.created_at || new Date().toISOString();\n      \n      // Get related themes if available\n      if (node.themes) {\n        insights.relatedThemes = node.themes;\n      } else {\n        // Try to find related themes from connections\n        const relatedThemes = connectedNodes\n          .filter(n => n.type === \"theme\")\n          .map(n => n.name);\n        \n        if (relatedThemes.length > 0) {\n          insights.relatedThemes = relatedThemes;\n        }\n      }\n      \n      // Check if node already has sentiment\n      if (node.sentiment) {\n        insights.sentiment = node.sentiment;\n        setAIInsights(insights);\n        setShowAIInsightsPanel(true);\n      } else {\n        // If no sentiment, analyze it with OpenAI\n        setIsAIProcessing(true);\n        \n        // Get the text to analyze\n        const textToAnalyze = insights.feedbackText;\n        \n        if (textToAnalyze && textToAnalyze.length > 0) {\n          // Call OpenAI service to analyze sentiment\n          analyzeSentiment(textToAnalyze)\n            .then(result => {\n              console.log(\"Sentiment analysis result:\", result);\n              \n              // Update insights with sentiment\n              insights.sentiment = result.sentiment;\n              \n              // Update the node with sentiment for future reference\n              setGraphData(prevData => ({\n                ...prevData,\n                nodes: prevData.nodes.map(n => \n                  n.id === node.id ? { ...n, sentiment: result.sentiment } : n\n                )\n              }));\n              \n              // Update analytics data\n              if (analyticsData) {\n                const updatedCounts = { \n                  ...(analyticsData.sentimentDistribution || {}),\n                  [result.sentiment]: ((analyticsData.sentimentDistribution || {})[result.sentiment] || 0) + 1\n                };\n                \n                setAnalyticsData({\n                  ...analyticsData,\n                  sentimentDistribution: updatedCounts\n                });\n              }\n              \n              // Show insights panel\n              setAIInsights(insights);\n              setShowAIInsightsPanel(true);\n              setIsAIProcessing(false);\n            })\n            .catch(error => {\n              console.error(\"Error analyzing sentiment:\", error);\n              insights.sentiment = \"Neutral\"; // Fallback\n              setAIInsights(insights);\n              setShowAIInsightsPanel(true);\n              setIsAIProcessing(false);\n            });\n        } else {\n          // No text to analyze\n          console.warn(\"No feedback text to analyze for sentiment\");\n          insights.sentiment = \"Neutral\";\n          setAIInsights(insights);\n          setShowAIInsightsPanel(true);\n          setIsAIProcessing(false);\n        }\n      }\n      \n      return; // Exit early since we're handling async operations\n    }\n    \n    // Ensure mini-map is recreated if it should be visible\n    if (showMiniMap) {\n      setTimeout(() => {\n        if (svgRef.current) {\n          d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n          createMiniMap();\n        }\n      }, 0);\n    }\n  }, [graphData, feedbackItems, showMiniMap, createMiniMap, analyticsData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  }, []);\n\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      \n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  const handleDataImported = (importedData) => {\n    if (importedData) {\n      setGraphData({ \n        nodes: importedData.nodes || [], \n        links: importedData.links || [] \n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add these functions back\n  const exportData = useCallback(() => {\n    // Prepare complete export with all AI data\n    const completeExportData = {\n      // Include the graph structure\n      nodes: graphData.nodes.map(node => ({\n        ...node,\n        // If there are any D3-specific properties that shouldn't be exported, filter them out here\n        fx: undefined,\n        fy: undefined,\n        index: undefined,\n        vx: undefined,\n        vy: undefined,\n        x: undefined,\n        y: undefined\n      })),\n      links: graphData.links.map(link => {\n        // Ensure links use id strings rather than object references\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        \n        return {\n          source: sourceId,\n          target: targetId,\n          strength: link.strength || 0.5\n        };\n      }),\n      \n      // Include all AI-generated insights\n      insights: insights || [],\n      \n      // Include analytics data with sentiment distribution\n      analytics: {\n        ...analyticsData,\n        // Ensure sentiment distribution is included\n        sentimentDistribution: analyticsData?.sentimentDistribution || {\n          Positive: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Positive').length,\n          Negative: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Negative').length,\n          Neutral: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Neutral').length\n        },\n        exportDate: new Date().toISOString(),\n        exportVersion: \"1.0\"\n      },\n      \n      // Include raw feedback data if available\n      feedbackItems: feedbackItems || []\n    };\n\n    // Convert to JSON string with nice formatting\n    const dataStr = JSON.stringify(completeExportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    \n    console.log(\"Exported data with AI insights and sentiment analysis\");\n  }, [graphData, insights, analyticsData, feedbackItems]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Error screen\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      {/* Existing UserResearchNetwork content */}\n      <div className=\"flex flex-col h-full\">\n        {/* Header and controls */}\n        <div className=\"bg-white p-4 shadow-md\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-blue-800\">Feedback Force</h1>\n              <p className=\"text-gray-600\">Transform user feedback into actionable insights. AI-powered theme detection and relationship mapping.</p>\n            </div>\n            \n            {/* Search bar */}\n            <div className=\"relative w-64\">\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                value={searchTerm}\n                onChange={(e) => {\n                  setSearchTerm(e.target.value);\n                  if (e.target.value.length >= 2) {\n                    const results = graphData.nodes.filter(node => \n                      node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                    );\n                    setSearchResults(results);\n                    setShowSearchResults(true);\n                  } else {\n                    setShowSearchResults(false);\n                    setSearchResults([]);\n                  }\n                }}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n              {showSearchResults && searchResults.length > 0 && (\n                <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                  {searchResults.map((result, index) => (\n                    <div \n                      key={index}\n                      className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                      onClick={() => {\n                        setSelectedNode(result);\n                        handleNodeClick(result);\n                        setShowSearchResults(false);\n                      }}\n                    >\n                      <div className=\"flex items-center\">\n                        <div \n                          className=\"w-3 h-3 rounded-full mr-2\"\n                          style={{ backgroundColor: colorScale(result.type) }}\n                        ></div>\n                        <span>{result.name}</span>\n                        <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Controls - Simplified */}\n          <div className=\"flex flex-wrap gap-2 mb-4\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">Data:</span>\n              <button \n                className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n                onClick={exportData}\n              >\n                Export\n              </button>\n              <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n                Import\n                <input \n                  type=\"file\" \n                  accept=\".json\" \n                  className=\"hidden\" \n                  onChange={importData}\n                />\n              </label>\n              <button \n                className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n                onClick={resetVisualization}\n              >\n                Reset\n              </button>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">View:</span>\n              <button \n                className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n                onClick={centerView}\n              >\n                Center View\n              </button>\n              <button \n                className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n                onClick={toggleMiniMap}\n              >\n                {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n              </button>\n              <button \n                className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n                onClick={fitToScreen}\n                title=\"Fit all nodes to screen\"\n              >\n                Fit to Screen\n              </button>\n            </div>\n            \n            {/* Removed the \"Add\" section with buttons for Theme, Feature, and Feedback */}\n            \n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">Highlight:</span>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setHighlightMode('none')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  None\n                </button>\n                <button\n                  onClick={() => setHighlightMode('themes')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  Themes\n                </button>\n                <button\n                  onClick={() => setHighlightMode('feedback')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  Feedback\n                </button>\n                <button\n                  onClick={() => setHighlightMode('personas')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  User Role\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Removed the second row with Connect Nodes and Feedback Weight controls */}\n        </div>\n        \n        {/* Main visualization container */}\n        <div className=\"flex flex-1 relative\">\n          <div \n            ref={containerRef} \n            className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n            style={{\n              marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n              minHeight: '500px'\n            }}\n          >\n            <svg \n              ref={svgRef} \n              width=\"100%\" \n              height=\"100%\"\n              className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n              style={{ minHeight: '500px' }}\n              onClick={() => setSelectedNode(null)}\n            />\n            \n            {/* Add Legend */}\n            <Legend \n              colorScale={colorScale} \n              showSentiment={true} \n              sentimentColors={{\n                positive: colorScale(\"feedback-positive\"),\n                neutral: colorScale(\"feedback-neutral\"),\n                negative: colorScale(\"feedback-negative\")\n              }}\n            />\n            \n            {/* Zoom controls */}\n            <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={zoomIn}\n              >\n                <span className=\"text-xl\">+</span>\n              </button>\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={zoomOut}\n              >\n                <span className=\"text-xl\">-</span>\n              </button>\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={fitToScreen}\n              >\n                <span className=\"text-xl\">⊡</span>\n              </button>\n            </div>\n          </div>\n          \n          {/* AI Insights Panel */}\n          {showAIInsightsPanel && aiInsights && (\n            <div \n              className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`}\n              style={{ \n                width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n                maxWidth: '40%'\n              }}\n            >\n              {/* Collapse/Expand Button */}\n              <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50 shrink-0\">\n                <button \n                  onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n                  className=\"text-gray-500 hover:text-gray-700\"\n                >\n                  {isPanelCollapsed ? (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n                    </svg>\n                  ) : (\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              \n              {/* Panel Content with improved scrolling */}\n              {!isPanelCollapsed && (\n                <div className=\"flex-1 flex flex-col overflow-hidden\">\n                  {/* Fixed header section */}\n                  <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-white z-30 shrink-0\">\n                    <h2 className=\"text-xl font-semibold text-gray-800\">\n                      AI Feedback Analysis\n                    </h2>\n                    <button \n                      onClick={() => setShowAIInsightsPanel(false)}\n                      className=\"text-gray-500 hover:text-gray-700\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </button>\n                  </div>\n                  \n                  {/* Scrollable content section */}\n                  <div className=\"flex-1 overflow-y-auto p-4 pb-20\">\n                    {/* Loading indicator */}\n                    {isAIProcessing && (\n                      <div className=\"flex justify-center items-center h-full\">\n                        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n                      </div>\n                    )}\n                    \n                    {/* Error message */}\n                    {aiError && (\n                      <div className=\"bg-red-50 p-4 rounded-lg border border-red-200 mb-4\">\n                        <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error</h3>\n                        <p className=\"text-red-700\">{aiError}</p>\n                      </div>\n                    )}\n                    \n                    {/* AI Insights Content */}\n                    {!isAIProcessing && !aiError && (\n                      <div className=\"space-y-6\">\n                        {/* Sentiment Overview Section with proper spacing */}\n                        {analyticsData && analyticsData.sentimentDistribution && (\n                          <div className=\"mb-6 pb-6 border-b border-gray-200\">\n                            <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Sentiment Overview</h3>\n                            <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                              <div className=\"flex items-center justify-around mb-2\">\n                                <div className=\"text-center\">\n                                  <div className=\"text-green-500 text-2xl font-bold\">\n                                    {analyticsData.sentimentDistribution?.Positive || 0}\n                                  </div>\n                                  <div className=\"text-xs text-gray-500\">Positive</div>\n                                </div>\n                                <div className=\"text-center\">\n                                  <div className=\"text-red-500 text-2xl font-bold\">\n                                    {analyticsData.sentimentDistribution?.Negative || 0}\n                                  </div>\n                                  <div className=\"text-xs text-gray-500\">Negative</div>\n                                </div>\n                                <div className=\"text-center\">\n                                  <div className=\"text-gray-500 text-2xl font-bold\">\n                                    {analyticsData.sentimentDistribution?.Neutral || 0}\n                                  </div>\n                                  <div className=\"text-xs text-gray-500\">Neutral</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Theme Node Details */}\n                        {aiInsights.isThemeView && (\n                          <div className=\"mb-6\">\n                            <div className=\"flex items-center mb-4\">\n                              <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('theme') }}></div>\n                              <h3 className=\"text-lg font-semibold text-gray-700\">Theme: {aiInsights.theme}</h3>\n                            </div>\n                            \n                            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                              <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-blue-600\">{aiInsights.feedbackCount || 0}</div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Feedback</div>\n                                </div>\n                                \n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-purple-600\">{aiInsights.personas?.length || 0}</div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Users</div>\n                                </div>\n                                \n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-teal-600\">\n                                    {Math.round(((aiInsights.sentimentDistribution?.Positive || 0) / \n                                      Math.max(1, ((aiInsights.sentimentDistribution?.Positive || 0) + \n                                       (aiInsights.sentimentDistribution?.Negative || 0) + \n                                       (aiInsights.sentimentDistribution?.Neutral || 0)))) * 100) || 0}%\n                                  </div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Positive</div>\n                                </div>\n                              </div>\n                              \n                              {/* Sentiment mini-chart */}\n                              {aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && (\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Sentiment Distribution</div>\n                                  <div className=\"flex h-6 rounded-full overflow-hidden\">\n                                    <div \n                                      className=\"bg-green-500\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                    <div \n                                      className=\"bg-red-500\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                    <div \n                                      className=\"bg-gray-400\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                                    <div>{aiInsights.sentimentDistribution.Positive} Positive</div>\n                                    <div>{aiInsights.sentimentDistribution.Negative} Negative</div>\n                                    <div>{aiInsights.sentimentDistribution.Neutral} Neutral</div>\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Associated User Roles */}\n                              {aiInsights.personas && aiInsights.personas.length > 0 && (\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Associated User Roles</div>\n                                  <div className=\"flex flex-wrap gap-2\">\n                                    {aiInsights.personas.map((persona, idx) => (\n                                      <div key={idx} className=\"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm\">\n                                        {persona}\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Example Feedback */}\n                              {aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && (\n                                <div>\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Example Feedback</div>\n                                  <div className=\"space-y-3\">\n                                    {aiInsights.exampleFeedback.map((item, idx) => (\n                                      <div key={idx} className=\"bg-white p-3 rounded border border-gray-200\">\n                                        <p className=\"text-sm text-gray-700 italic mb-2\">\"{item.text}\"</p>\n                                        <div className={`text-xs px-2 py-1 rounded-full inline-block ${\n                                          item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                          item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                          'bg-gray-100 text-gray-700'\n                                        }`}>\n                                          {item.sentiment}\n                                        </div>\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n\n                        {/* Persona Node Details */}\n                        {aiInsights.isPersonaView && (\n                          <div className=\"mb-6\">\n                            <div className=\"flex items-center mb-4\">\n                              <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('persona') }}></div>\n                              <h3 className=\"text-lg font-semibold text-gray-700\">User Role: {aiInsights.persona}</h3>\n                            </div>\n                            \n                            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                              <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-blue-600\">{aiInsights.themes?.length || 0}</div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Themes</div>\n                                </div>\n                                \n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-green-600\">{aiInsights.feedbackCount || 0}</div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Feedback</div>\n                                </div>\n                                \n                                <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                  <div className=\"text-xl font-bold text-teal-600\">\n                                    {Math.round(((aiInsights.sentimentDistribution?.Positive || 0) / \n                                      Math.max(1, ((aiInsights.sentimentDistribution?.Positive || 0) + \n                                       (aiInsights.sentimentDistribution?.Negative || 0) + \n                                       (aiInsights.sentimentDistribution?.Neutral || 0)))) * 100) || 0}%\n                                  </div>\n                                  <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Positive</div>\n                                </div>\n                              </div>\n                              \n                              {/* Sentiment Distribution */}\n                              {aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && (\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Feedback Sentiment</div>\n                                  <div className=\"flex h-6 rounded-full overflow-hidden\">\n                                    <div \n                                      className=\"bg-green-500\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                    <div \n                                      className=\"bg-red-500\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                    <div \n                                      className=\"bg-gray-400\" \n                                      style={{ \n                                        width: `${(aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                      }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                                    <div>{aiInsights.sentimentDistribution.Positive} Positive</div>\n                                    <div>{aiInsights.sentimentDistribution.Negative} Negative</div>\n                                    <div>{aiInsights.sentimentDistribution.Neutral} Neutral</div>\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Associated Themes */}\n                              {aiInsights.themes && aiInsights.themes.length > 0 && (\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Associated Themes</div>\n                                  <div className=\"flex flex-wrap gap-2\">\n                                    {aiInsights.themes.map((theme, idx) => (\n                                      <div key={idx} className=\"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\">\n                                        {theme}\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                              \n                              {/* Example Feedback */}\n                              {aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && (\n                                <div>\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Example Feedback</div>\n                                  <div className=\"space-y-3\">\n                                    {aiInsights.exampleFeedback.map((item, idx) => (\n                                      <div key={idx} className=\"bg-white p-3 rounded border border-gray-200\">\n                                        <p className=\"text-sm text-gray-700 italic mb-2\">\"{item.text}\"</p>\n                                        <div className={`text-xs px-2 py-1 rounded-full inline-block ${\n                                          item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                          item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                          'bg-gray-100 text-gray-700'\n                                        }`}>\n                                          {item.sentiment}\n                                        </div>\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Feedback Node Details with proper spacing */}\n                        {aiInsights.isFeedbackView && (\n                          <div className=\"mb-6\">\n                            <div className=\"flex items-center mb-4\">\n                              <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('feedback') }}></div>\n                              <h3 className=\"text-lg font-semibold text-gray-700\">Feedback Details</h3>\n                            </div>\n                            \n                            <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                              {/* Complete feedback text with better formatting */}\n                              <div className=\"text-gray-800 mb-4 bg-white p-3 rounded border border-gray-200 max-h-80 overflow-y-auto\">\n                                <p className=\"whitespace-pre-wrap text-base leading-relaxed\">\"{aiInsights.feedbackText}\"</p>\n                                \n                                {/* Debug info for development */}\n                                <div className=\"mt-3 pt-3 border-t border-gray-200 text-xs text-gray-500\">\n                                  <div>Content length: {aiInsights.feedbackText?.length || 0} characters</div>\n                                </div>\n                              </div>\n                              \n                              <div className=\"flex justify-between items-center\">\n                                <div className=\"flex items-center\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-500 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                                  </svg>\n                                  <span className=\"text-sm text-gray-600 font-medium\">{aiInsights.user_role || 'Unknown User'}</span>\n                                </div>\n                                \n                                <div className=\"text-xs text-gray-500\">\n                                  {aiInsights.timestamp ? new Date(aiInsights.timestamp).toLocaleString() : 'No timestamp available'}\n                                </div>\n                              </div>\n                            </div>\n                            \n                            {/* Sentiment Analysis - If available */}\n                            {aiInsights.sentiment && (\n                              <div className=\"mt-4 mb-6\">\n                                <div className=\"text-sm text-gray-500 mb-2\">Sentiment Analysis</div>\n                                <div className={`px-3 py-2 rounded-full inline-block font-medium text-sm ${\n                                  aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                  aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                  'bg-gray-100 text-gray-800'\n                                }`}>\n                                  {aiInsights.sentiment}\n                                </div>\n                              </div>\n                            )}\n                            \n                            {/* Related Themes - If any */}\n                            {aiInsights.relatedThemes && aiInsights.relatedThemes.length > 0 && (\n                              <div className=\"mt-4 mb-6\">\n                                <div className=\"text-sm text-gray-500 mb-2\">Related Themes</div>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {aiInsights.relatedThemes.map((theme, idx) => (\n                                    <div key={idx} className=\"bg-blue-50 px-3 py-1 rounded-full text-sm\">\n                                      {theme}\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                        \n                        {/* Key Insights Section */}\n                        {aiInsights.insights && aiInsights.insights.length > 0 && (\n                          <div className=\"mb-8\">\n                            <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Key Insights</h3>\n                            <div className=\"space-y-4\">\n                              {aiInsights.insights.map(insight => (\n                                <div key={insight.id || Math.random()} className=\"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\">\n                                  <h4 className=\"font-medium text-gray-800 mb-1\">{insight.title}</h4>\n                                  <p className=\"text-gray-700 text-sm\">{insight.description}</p>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n        \n        {/* Keep the AI Insights button */}\n        {insights.length > 0 && !showAIInsightsPanel && (\n          <button\n            onClick={() => {\n              setAIInsights({ results: [], insights: insights });\n              setShowAIInsightsPanel(true);\n            }}\n            className=\"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\"\n          >\n            View AI Insights ({insights.length})\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}