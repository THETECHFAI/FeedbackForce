{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feedback\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  var _analyticsData$sentim, _analyticsData$sentim2, _analyticsData$sentim3;\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n\n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n\n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n\n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // New theme selection state\n  const [selectedThemeForFeedback, setSelectedThemeForFeedback] = useState('');\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (!svgRef.current || !showMiniMap) return;\n\n    // Remove any existing mini-map first\n    d3.select('.mini-map-container').remove();\n    const containerWidth = dimensions.width;\n    const containerHeight = dimensions.height;\n\n    // Smaller mini-map dimensions\n    const miniMapWidth = Math.min(180, containerWidth * 0.2);\n    const miniMapHeight = Math.min(120, containerHeight * 0.2);\n\n    // Scale for mini-map (adjust to show all nodes properly)\n    const miniScale = Math.min(miniMapWidth / containerWidth, miniMapHeight / containerHeight) * 0.8; // 80% to give more padding\n\n    // Create mini-map container\n    const miniMapContainer = d3.select(containerRef.current).append('div').attr('class', 'mini-map-container').style('position', 'absolute').style('top', '10px').style('left', '10px').style('width', `${miniMapWidth}px`).style('height', `${miniMapHeight}px`).style('background-color', 'rgba(255, 255, 255, 0.9)').style('border', '1px solid #ccc').style('border-radius', '4px').style('box-shadow', '0 1px 3px rgba(0,0,0,0.2)').style('overflow', 'hidden').style('z-index', '100');\n\n    // Create mini-map SVG\n    const miniMap = miniMapContainer.append('svg').attr('width', miniMapWidth).attr('height', miniMapHeight);\n\n    // First create a group for transformations  \n    const miniMapGroup = miniMap.append('g').attr('transform', `translate(${miniMapWidth / 2}, ${miniMapHeight / 2})`);\n\n    // Calculate bounds for centering\n    let minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x) {\n        minX = Math.min(minX, node.x);\n        maxX = Math.max(maxX, node.x);\n        minY = Math.min(minY, node.y);\n        maxY = Math.max(maxY, node.y);\n      }\n    });\n\n    // Default if no positions yet\n    if (minX === Infinity) {\n      minX = 0;\n      maxX = containerWidth;\n      minY = 0;\n      maxY = containerHeight;\n    }\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    const width = maxX - minX || containerWidth;\n    const height = maxY - minY || containerHeight;\n\n    // Adjusted scale to fit all nodes\n    const adjustedScale = Math.min(miniMapWidth * 0.8 / width, miniMapHeight * 0.8 / height);\n\n    // Create mini-map links first (so nodes render on top)\n    const miniLinks = miniMapGroup.append('g').selectAll('line').data(graphData.links).enter().append('line').attr('stroke', '#ddd').attr('stroke-width', 0.8).attr('stroke-opacity', 0.6).attr('x1', d => {\n      const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n      return source && source.x ? (source.x - centerX) * adjustedScale : 0;\n    }).attr('y1', d => {\n      const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n      return source && source.y ? (source.y - centerY) * adjustedScale : 0;\n    }).attr('x2', d => {\n      const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n      return target && target.x ? (target.x - centerX) * adjustedScale : 0;\n    }).attr('y2', d => {\n      const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n      return target && target.y ? (target.y - centerY) * adjustedScale : 0;\n    });\n\n    // Create mini-map nodes on top of links\n    const miniNodes = miniMapGroup.append('g').selectAll('circle').data(graphData.nodes).enter().append('circle').attr('r', d => d.type === 'theme' ? 2.5 : 2).attr('fill', d => colorScale(d.type)).attr('stroke', '#fff').attr('stroke-width', 0.5).attr('cx', d => d.x ? (d.x - centerX) * adjustedScale : 0).attr('cy', d => d.y ? (d.y - centerY) * adjustedScale : 0);\n\n    // Add viewport indicator rectangle\n    const viewportIndicator = miniMapGroup.append('rect').attr('class', 'viewport-indicator').attr('stroke', '#3182CE').attr('stroke-width', 1.5).attr('fill', 'none').attr('fill-opacity', 0.1).attr('rx', 2).attr('ry', 2);\n\n    // Update the viewport indicator when zoom changes\n    if (zoomRef.current) {\n      const updateViewportIndicator = () => {\n        const transform = zoomRef.current.transformMatrix;\n        if (!transform) return;\n        const scale = transform.k;\n        const translateX = transform.x;\n        const translateY = transform.y;\n\n        // Calculate visible portion of the view\n        const visibleWidth = containerWidth / scale;\n        const visibleHeight = containerHeight / scale;\n\n        // Center point of the visible area\n        const centerX = -translateX / scale + containerWidth / (2 * scale);\n        const centerY = -translateY / scale + containerHeight / (2 * scale);\n\n        // Calculate position and size in mini-map coordinates\n        const rectWidth = visibleWidth * adjustedScale;\n        const rectHeight = visibleHeight * adjustedScale;\n        const rectX = (centerX - visibleWidth / 2 - centerX) * adjustedScale;\n        const rectY = (centerY - visibleHeight / 2 - centerY) * adjustedScale;\n\n        // Update indicator position and size\n        viewportIndicator.attr('x', rectX).attr('y', rectY).attr('width', rectWidth).attr('height', rectHeight);\n      };\n\n      // Initial update\n      updateViewportIndicator();\n\n      // Subscribe to zoom events\n      zoomRef.current.on('zoom.minimap', updateViewportIndicator);\n    }\n\n    // Store original tick function in outer scope so it's accessible in cleanup\n    let originalTick = null;\n\n    // Update mini-map when simulation ticks\n    if (simulationRef.current) {\n      originalTick = simulationRef.current.tick;\n      simulationRef.current.tick = function () {\n        const result = originalTick.apply(this, arguments);\n\n        // Recalculate center and bounds\n        let minX = Infinity,\n          maxX = -Infinity,\n          minY = Infinity,\n          maxY = -Infinity;\n        graphData.nodes.forEach(node => {\n          if (node.x) {\n            minX = Math.min(minX, node.x);\n            maxX = Math.max(maxX, node.x);\n            minY = Math.min(minY, node.y);\n            maxY = Math.max(maxY, node.y);\n          }\n        });\n        if (minX === Infinity) {\n          minX = 0;\n          maxX = containerWidth;\n          minY = 0;\n          maxY = containerHeight;\n        }\n        const centerX = (minX + maxX) / 2;\n        const centerY = (minY + maxY) / 2;\n        const width = maxX - minX || containerWidth;\n        const height = maxY - minY || containerHeight;\n        const adjustedScale = Math.min(miniMapWidth * 0.8 / width, miniMapHeight * 0.8 / height);\n\n        // Update mini-map nodes\n        miniNodes.attr('cx', d => d.x ? (d.x - centerX) * adjustedScale : 0).attr('cy', d => d.y ? (d.y - centerY) * adjustedScale : 0);\n\n        // Update mini-map links\n        miniLinks.attr('x1', d => {\n          const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n          return source && source.x ? (source.x - centerX) * adjustedScale : 0;\n        }).attr('y1', d => {\n          const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n          return source && source.y ? (source.y - centerY) * adjustedScale : 0;\n        }).attr('x2', d => {\n          const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n          return target && target.x ? (target.x - centerX) * adjustedScale : 0;\n        }).attr('y2', d => {\n          const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n          return target && target.y ? (target.y - centerY) * adjustedScale : 0;\n        });\n        return result;\n      };\n    }\n\n    // Cleanup on component unmount\n    return () => {\n      if (simulationRef.current && originalTick) {\n        // Restore original tick function to avoid memory leaks\n        simulationRef.current.tick = originalTick;\n      }\n      if (zoomRef.current) {\n        zoomRef.current.on('zoom.minimap', null);\n      }\n    };\n  }, [dimensions, graphData, showMiniMap, colorScale]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n\n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n\n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100).strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(30));\n    simulationRef.current = simulation;\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(validLinks).enter().append(\"line\").attr(\"stroke\", d => {\n      // Get the source and target nodes\n      const source = nodes.find(n => n.id === d.source);\n      const target = nodes.find(n => n.id === d.target);\n      if (!source || !target) return \"#999\";\n      const sourceType = source.type;\n      const targetType = target.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n\n      return \"#999\"; // Default gray\n    }).attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n\n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 15;\n      return 10; // Smaller feedback nodes\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2);\n\n    // Add labels with better positioning\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 25;\n      return 22; // Position feedback labels\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n    .attr(\"fill\", \"#333\");\n\n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\").text(d => d.type === \"feedback\" ? d.title : d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Starting import from file:\", file.name);\n\n    // Use our async utility function\n    importFeedbackData(file).then(importedData => {\n      console.log(\"Processed import data:\", importedData);\n\n      // Ensure node structure is compatible with visualization\n      const processedNodes = importedData.nodes.map(node => {\n        // Make sure each node has the essential properties\n        return {\n          ...node,\n          // Ensure these critical properties exist\n          id: node.id,\n          name: node.name || node.label || \"Unnamed\",\n          type: node.type || \"theme\",\n          // Add appropriate properties based on type\n          ...(node.type === 'theme' ? {\n            feedbackCount: node.feedbackCount || 5\n          } : {}),\n          ...(node.type === 'feature' ? {\n            priority: node.priority || 'Medium'\n          } : {})\n        };\n      });\n      setGraphData({\n        nodes: processedNodes,\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n      setAnalyticsData(importedData.analytics || null);\n      setLoading(false);\n\n      // Reset any selections and force a re-center\n      setSelectedNode(null);\n      // Use a timeout without directly referencing fitToScreen\n      setTimeout(() => {\n        if (zoomRef.current) {\n          const svg = d3.select(svgRef.current);\n          const svgWidth = svg.node().getBoundingClientRect().width;\n          const svgHeight = svg.node().getBoundingClientRect().height;\n          svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity.translate(svgWidth / 2, svgHeight / 2).scale(0.8));\n        }\n      }, 300);\n    }).catch(error => {\n      console.error(\"Error importing feedback data:\", error);\n      setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n      setLoading(false);\n    });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = text => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return {\n        theme: 'Stability Issues'\n      };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return {\n        theme: 'Performance'\n      };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return {\n        theme: 'Mobile Experience'\n      };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || lowerText.includes('layout') || lowerText.includes('look')) {\n      return {\n        theme: 'User Interface'\n      };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return {\n        theme: 'Reporting & Analytics'\n      };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return {\n        theme: 'Data Export & Import'\n      };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return {\n        theme: 'Search & Navigation'\n      };\n    }\n    return {\n      theme: 'General Feedback'\n    };\n  };\n\n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = theme => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{\n        name: 'Crash Prevention & Recovery',\n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{\n        name: 'Performance Optimization',\n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{\n        name: 'Responsive Design Overhaul',\n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{\n        name: 'UI Modernization',\n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{\n        name: 'Custom Report Builder',\n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{\n        name: 'Enhanced Export Options',\n        priority: 'High'\n      }];\n    } else {\n      return [{\n        name: 'User Experience Improvements',\n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback(feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n\n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n\n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n\n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n\n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n\n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n\n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i + 1} of ${chunks.length}...`);\n\n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n\n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({\n            ...newGraph\n          });\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n\n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5); // Top 5 themes\n\n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n\n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n\n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n\n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                if (sourceId === theme.id || targetId === theme.id) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => l.source === personaId && l.target === featureId || l.source === featureId && l.target === personaId);\n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n\n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n\n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n\n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n\n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      setGraphData(newGraph);\n\n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n\n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes).force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          tempSimulation.stop();\n        }\n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n\n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    let newNode;\n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = useCallback(node => {\n    if (!node) return;\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights\n    let insights = {\n      results: [],\n      nodeType: node.type,\n      nodeId: node.id\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Find feedback related to this theme\n      if (feedbackItems.length > 0) {\n        // For themes, we need to find feedback that might be related\n        // This is a simple string matching approach, but could be enhanced\n        const relatedFeedback = feedbackItems.filter(item => item.text.toLowerCase().includes(node.name.toLowerCase()));\n        if (relatedFeedback.length > 0) {\n          insights.relatedFeedback = relatedFeedback.map(item => ({\n            text: item.text,\n            user_role: item.user_role,\n            timestamp: item.timestamp\n          }));\n        }\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.description = node.description || \"\";\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map(item => ({\n            text: item.text,\n            user_role: item.user_role,\n            timestamp: item.timestamp || new Date().toISOString()\n          }));\n        }\n      }\n    } else if (node.type === \"feedback\") {\n      // Feedback node view - ensure we get the complete feedback text\n      insights.isFeedbackView = true;\n\n      // Debug: Print the node object to console\n      console.log('Feedback node clicked:', node);\n\n      // Get the full text - prioritizing full versions and checking all possible properties\n      // Note: The order here is important - put the most likely to contain full text first\n      insights.feedbackText = node.fullText || node.originalText || node.completeText || node.text || node.content || node.feedback || node.description || node.title || node.name || \"\";\n\n      // If we have access to feedbackItems array, try to find a matching item with full text\n      if (feedbackItems && feedbackItems.length > 0) {\n        // Try to find a matching feedback item by id or text\n        const matchingItem = feedbackItems.find(item => item.id === node.id || item.text && node.text && item.text.includes(node.text) || item.text && node.name && item.text.includes(node.name));\n        if (matchingItem && matchingItem.text) {\n          // Use the full text from the matching item\n          insights.feedbackText = matchingItem.text;\n\n          // Also update user role and timestamp if available\n          if (matchingItem.user_role) {\n            insights.user_role = matchingItem.user_role;\n          }\n          if (matchingItem.timestamp) {\n            insights.timestamp = matchingItem.timestamp;\n          }\n        }\n      }\n\n      // Always prefer the node's user_role if available\n      insights.user_role = node.user_role || node.persona || node.role || insights.user_role || \"Unknown User\";\n      insights.timestamp = node.timestamp || node.date || node.created_at || new Date().toISOString();\n\n      // Get related themes if available\n      if (node.themes) {\n        insights.relatedThemes = node.themes;\n      } else {\n        // Try to find related themes from connections\n        const relatedThemes = connectedNodes.filter(n => n.type === \"theme\").map(n => n.name);\n        if (relatedThemes.length > 0) {\n          insights.relatedThemes = relatedThemes;\n        }\n      }\n\n      // Get sentiment if available\n      if (node.sentiment) {\n        insights.sentiment = node.sentiment;\n      }\n    }\n\n    // Update insights and show panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n\n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === connectionSource.id && targetId === connectionTarget || sourceId === connectionTarget && targetId === connectionSource.id;\n    });\n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n\n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle adding new feedback with better visualization\n  const handleAddFeedback = useCallback(() => {\n    if (!newFeedback) {\n      alert(\"Please enter feedback text\");\n      return;\n    }\n    setIsAIProcessing(true);\n    setAIError(null);\n\n    // Generate a unique ID for the new feedback\n    const feedbackId = `feedback-${Date.now()}`;\n\n    // Create a new feedback object\n    const feedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole || \"User\",\n      timestamp: new Date().toISOString(),\n      type: \"feedback\"\n    };\n\n    // Add to feedbackItems array\n    setFeedbackItems(prev => [...prev, feedbackItem]);\n\n    // First pass: Add feedback node to visualization\n    const newNode = {\n      id: feedbackId,\n      name: newFeedback.length > 30 ? newFeedback.substring(0, 30) + \"...\" : newFeedback,\n      text: newFeedback,\n      // Store full text\n      fullText: newFeedback,\n      // Store full text for panel view\n      type: \"feedback\",\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Update graph with new node\n    setGraphData(prevData => ({\n      nodes: [...prevData.nodes, newNode],\n      links: [...prevData.links]\n    }));\n\n    // If the user selected a specific theme, connect to it directly\n    if (selectedThemeForFeedback) {\n      const selectedTheme = graphData.nodes.find(node => node.id === selectedThemeForFeedback);\n      if (selectedTheme) {\n        // Connect to the selected theme\n        connectFeedbackToThemeById(feedbackId, selectedThemeForFeedback);\n        setIsAIProcessing(false);\n      }\n    } else {\n      // No theme selected - use AI or fallback as before\n      try {\n        // First try to use the AI service if available\n        classifyFeedback(newFeedback).then(classification => {\n          // Successfully classified with AI\n          connectFeedbackToTheme(feedbackId, classification.theme);\n          setIsAIProcessing(false);\n        }).catch(error => {\n          console.warn(\"AI classification failed, using fallback:\", error);\n          // Use fallback classification\n          const fallbackClassification = mockClassifyFeedback(newFeedback);\n          connectFeedbackToTheme(feedbackId, fallbackClassification.theme);\n          setIsAIProcessing(false);\n        });\n      } catch (error) {\n        console.error(\"Error in feedback processing:\", error);\n        // Still use fallback even if there's an error\n        const fallbackClassification = mockClassifyFeedback(newFeedback);\n        connectFeedbackToTheme(feedbackId, fallbackClassification.theme);\n        setIsAIProcessing(false);\n        setAIError(\"Error processing feedback, but added with basic classification\");\n      }\n    }\n\n    // Reset form fields\n    setShowFeedbackModal(false);\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setSelectedThemeForFeedback('');\n  }, [newFeedback, newFeedbackRole, graphData.nodes, selectedThemeForFeedback]);\n\n  // Helper function to connect feedback to a theme\n  const connectFeedbackToTheme = useCallback((feedbackId, themeName) => {\n    // Check if theme exists\n    let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name.toLowerCase() === themeName.toLowerCase());\n\n    // If theme doesn't exist, create it\n    if (!themeNode) {\n      themeNode = {\n        id: `theme-${themeName.replace(/\\s+/g, '-').toLowerCase()}`,\n        name: themeName,\n        type: \"theme\",\n        feedbackCount: 1\n      };\n\n      // Add the new theme node\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, themeNode],\n        links: [...prevData.links]\n      }));\n    } else {\n      // Update theme's feedback count\n      setGraphData(prevData => ({\n        ...prevData,\n        nodes: prevData.nodes.map(node => node.id === themeNode.id ? {\n          ...node,\n          feedbackCount: (node.feedbackCount || 0) + 1\n        } : node)\n      }));\n    }\n\n    // Add connection between feedback and theme\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: themeNode.id,\n        strength: 0.7\n      };\n\n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return sourceId === feedbackId && targetId === themeNode.id || sourceId === themeNode.id && targetId === feedbackId;\n      });\n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n\n    // If the user role is provided, try to connect to a persona\n    const feedbackNode = graphData.nodes.find(n => n.id === feedbackId);\n    if (feedbackNode && feedbackNode.user_role) {\n      connectFeedbackToPersona(feedbackId, feedbackNode.user_role);\n    }\n\n    // Restart the simulation to reposition nodes\n    if (simulationRef.current) {\n      simulationRef.current.alpha(0.3).restart();\n    }\n\n    // Highlight the new feedback momentarily\n    setTimeout(() => {\n      const svgNode = d3.select(svgRef.current);\n      const feedbackCircle = svgNode.selectAll(\".nodes circle\").filter(d => d.id === feedbackId);\n      if (!feedbackCircle.empty()) {\n        feedbackCircle.transition().duration(500).attr(\"r\", 15).transition().duration(500).attr(\"r\", 10);\n      }\n    }, 500);\n  }, [graphData]);\n\n  // Helper function to connect feedback to a persona\n  const connectFeedbackToPersona = useCallback((feedbackId, roleName) => {\n    // Skip if no role name\n    if (!roleName) return;\n\n    // Check if persona exists\n    let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name.toLowerCase() === roleName.toLowerCase());\n\n    // If persona doesn't exist, create it\n    if (!personaNode) {\n      personaNode = {\n        id: `persona-${roleName.replace(/\\s+/g, '-').toLowerCase()}`,\n        name: roleName,\n        type: \"persona\"\n      };\n\n      // Add the new persona node\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, personaNode],\n        links: [...prevData.links]\n      }));\n    }\n\n    // Add connection between feedback and persona\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: personaNode.id,\n        strength: 0.5\n      };\n\n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return sourceId === feedbackId && targetId === personaNode.id || sourceId === personaNode.id && targetId === feedbackId;\n      });\n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n  }, [graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Add a toggle function for mini-map\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n  const handleDataImported = importedData => {\n    if (importedData) {\n      setGraphData({\n        nodes: importedData.nodes || [],\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add a helper function to connect feedback to theme by ID\n  const connectFeedbackToThemeById = useCallback((feedbackId, themeId) => {\n    // Find the theme node\n    const themeNode = graphData.nodes.find(node => node.id === themeId);\n    if (!themeNode) return;\n\n    // Update theme's feedback count\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: prevData.nodes.map(node => node.id === themeId ? {\n        ...node,\n        feedbackCount: (node.feedbackCount || 0) + 1\n      } : node)\n    }));\n\n    // Add connection between feedback and theme\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: themeId,\n        strength: 0.7\n      };\n\n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return sourceId === feedbackId && targetId === themeId || sourceId === themeId && targetId === feedbackId;\n      });\n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n\n    // If the user role is provided, try to connect to a persona\n    const feedbackNode = graphData.nodes.find(n => n.id === feedbackId);\n    if (feedbackNode && feedbackNode.user_role) {\n      connectFeedbackToPersona(feedbackId, feedbackNode.user_role);\n    }\n\n    // Restart the simulation to reposition nodes\n    if (simulationRef.current) {\n      simulationRef.current.alpha(0.3).restart();\n    }\n\n    // Highlight the new feedback momentarily\n    setTimeout(() => {\n      const svgNode = d3.select(svgRef.current);\n      const feedbackCircle = svgNode.selectAll(\".nodes circle\").filter(d => d.id === feedbackId);\n      if (!feedbackCircle.empty()) {\n        feedbackCircle.transition().duration(500).attr(\"r\", 15).transition().duration(500).attr(\"r\", 10);\n      }\n    }, 500);\n  }, [graphData, connectFeedbackToPersona]);\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1840,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1853,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1850,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1869,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1870,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1868,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1875,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1907,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1911,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1912,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1906,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1897,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1895,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1867,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1924,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1925,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1933,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1931,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: resetVisualization,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1923,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1949,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1950,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1956,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? \"Hide Mini-Map\" : \"Show Mini-Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1962,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1968,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1948,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1979,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1999,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1977,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1922,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2010,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: connectNodes,\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2011,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2009,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2023,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2032,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2022,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2036,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2037,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2043,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('feedback'),\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2049,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2055,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2035,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2008,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1866,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n        style: {\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n          minHeight: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n          style: {\n            minHeight: '500px'\n          },\n          onClick: () => setSelectedNode(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          colorScale: colorScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2085,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomIn,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2093,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2089,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomOut,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2099,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2095,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: fitToScreen,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"\\u22A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2088,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2067,\n        columnNumber: 9\n      }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`,\n        style: {\n          width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n          maxWidth: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50 shrink-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n            title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2121,\n            columnNumber: 15\n          }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAIInsightsPanel(false),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n            title: \"Close panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2120,\n          columnNumber: 13\n        }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-6 w-full\",\n          style: {\n            maxHeight: '100vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-800 mb-6 sticky top-0 bg-white pt-2 pb-3 z-10\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Details` : aiInsights.theme ? `${aiInsights.theme} Details` : aiInsights.isFeedbackView ? 'Feedback Details' : 'AI Feedback Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8 bg-white p-4 rounded-lg border border-gray-200 shadow-sm overflow-hidden\",\n            children: [aiInsights.persona && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-4 h-4 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale('persona')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2170,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-700\",\n                  children: [\"Persona: \", aiInsights.persona]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2171,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: \"Feedback Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2175,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-semibold\",\n                  children: aiInsights.feedbackCount || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2176,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2174,\n                columnNumber: 23\n              }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Common Themes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2181,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: aiInsights.connectedThemes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center bg-blue-50 px-3 py-2 rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-3 h-3 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('theme')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2185,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm\",\n                      children: theme.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2186,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2184,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2182,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2180,\n                columnNumber: 25\n              }, this), aiInsights.results && aiInsights.results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Feedback from this Persona\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2195,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-3 max-h-60 overflow-y-auto\",\n                  children: aiInsights.results.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-gray-50 p-3 rounded border border-gray-200 text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-2\",\n                      children: [\"\\\"\", item.text, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2199,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500 italic\",\n                      children: item.timestamp ? new Date(item.timestamp).toLocaleString() : 'No timestamp'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2200,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2198,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2196,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2194,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2168,\n              columnNumber: 21\n            }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-4 h-4 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale('theme')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2215,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-700\",\n                  children: [\"Theme: \", aiInsights.theme]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2216,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2214,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: \"Related Feedback Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2220,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-semibold\",\n                  children: aiInsights.feedbackCount || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2221,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2219,\n                columnNumber: 23\n              }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Connected Personas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2226,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: aiInsights.connectedPersonas.map((persona, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center bg-orange-50 px-3 py-2 rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-3 h-3 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('persona')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2230,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm\",\n                      children: persona.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2231,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2229,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2227,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2225,\n                columnNumber: 25\n              }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Related Features\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2240,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-2\",\n                  children: aiInsights.connectedFeatures.map((feature, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-green-50 px-3 py-2 rounded border-l-4 border-green-400\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"font-medium\",\n                      children: feature.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2244,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs mt-1\",\n                      children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `font-medium ${feature.priority === 'High' ? 'text-red-600' : feature.priority === 'Medium' ? 'text-yellow-600' : 'text-blue-600'}`,\n                        children: feature.priority || 'Medium'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2246,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2245,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2243,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2241,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2239,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2213,\n              columnNumber: 21\n            }, this), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-4 h-4 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale('feature')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2263,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-700\",\n                  children: [\"Feature: \", aiInsights.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2264,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2262,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-block bg-gray-100 px-3 py-1 rounded-full text-sm font-medium\",\n                  children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `${aiInsights.priority === 'High' ? 'text-red-600' : aiInsights.priority === 'Medium' ? 'text-yellow-600' : 'text-blue-600'}`,\n                    children: aiInsights.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2269,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2268,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2267,\n                columnNumber: 23\n              }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Related Themes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2278,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: aiInsights.connectedThemes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center bg-blue-50 px-3 py-2 rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-3 h-3 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('theme')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2282,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm\",\n                      children: theme.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2283,\n                      columnNumber: 33\n                    }, this), theme.feedbackCount && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-xs text-gray-500\",\n                      children: [\"(\", theme.feedbackCount, \" feedback)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2285,\n                      columnNumber: 35\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2281,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2279,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2277,\n                columnNumber: 25\n              }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Related Personas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2295,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: aiInsights.connectedPersonas.map((persona, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center bg-orange-50 px-3 py-2 rounded\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-3 h-3 rounded-full mr-2\",\n                      style: {\n                        backgroundColor: colorScale('persona')\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2299,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm\",\n                      children: persona.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2300,\n                      columnNumber: 33\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2298,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2296,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2294,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2261,\n              columnNumber: 21\n            }, this), aiInsights.isFeedbackView && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-4 h-4 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale('feedback')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2313,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold text-gray-700\",\n                  children: \"Feedback Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2314,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2312,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-800 mb-4 bg-white p-3 rounded border border-gray-200 max-h-80 overflow-y-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"whitespace-pre-wrap text-base leading-relaxed\",\n                    children: [\"\\\"\", aiInsights.feedbackText, \"\\\"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2320,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2319,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-4 w-4 text-gray-500 mr-1\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2331,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2330,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-600 font-medium\",\n                      children: aiInsights.user_role || 'Unknown User'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2333,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2329,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: aiInsights.timestamp ? new Date(aiInsights.timestamp).toLocaleString() : 'No timestamp available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2336,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2328,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2317,\n                columnNumber: 23\n              }, this), aiInsights.sentiment && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Sentiment Analysis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2345,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `px-3 py-2 rounded-full inline-block font-medium text-sm ${aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n                  children: aiInsights.sentiment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2346,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2344,\n                columnNumber: 25\n              }, this), aiInsights.relatedThemes && aiInsights.relatedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-2\",\n                  children: \"Related Themes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2359,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-2\",\n                  children: aiInsights.relatedThemes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-50 px-3 py-1 rounded-full text-sm\",\n                    children: theme\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2362,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2360,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2358,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2311,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2165,\n            columnNumber: 17\n          }, this), analyticsData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6 mb-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-700 mb-3 sticky top-14 bg-white z-10 pb-2\",\n                children: \"Sentiment Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2378,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-around mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-green-500 text-2xl font-bold\",\n                      children: ((_analyticsData$sentim = analyticsData.sentimentDistribution) === null || _analyticsData$sentim === void 0 ? void 0 : _analyticsData$sentim.Positive) || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2382,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Positive\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2385,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2381,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-red-500 text-2xl font-bold\",\n                      children: ((_analyticsData$sentim2 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim2 === void 0 ? void 0 : _analyticsData$sentim2.Negative) || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2388,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Negative\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2391,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2387,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-gray-500 text-2xl font-bold\",\n                      children: ((_analyticsData$sentim3 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim3 === void 0 ? void 0 : _analyticsData$sentim3.Neutral) || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2394,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Neutral\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2397,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2393,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2380,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2379,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2377,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2375,\n            columnNumber: 19\n          }, this), aiInsights.insights && aiInsights.insights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Key Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2410,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: aiInsights.insights.map(insight => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-800 mb-1\",\n                  children: insight.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2414,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 text-sm\",\n                  children: insight.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2415,\n                  columnNumber: 27\n                }, this)]\n              }, insight.id || Math.random(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 2413,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2411,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2409,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2066,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2435,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2453,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2449,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2465,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2473,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2474,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2475,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2468,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2464,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddNode,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2492,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2430,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2429,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2511,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2529,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2531,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2524,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2538,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleConnectionSubmit,\n            disabled: !connectionTarget,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2553,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2506,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2505,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2585,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Connect to Theme (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedThemeForFeedback || \"\",\n            onChange: e => setSelectedThemeForFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Auto-detect theme (using AI)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2621,\n              columnNumber: 17\n            }, this), graphData.nodes.filter(node => node.type === \"theme\").map(theme => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: theme.id,\n              children: theme.name\n            }, theme.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2625,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2616,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"Leave empty to use AI for theme detection or select an existing theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2631,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n              setSelectedThemeForFeedback('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2637,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2655,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2654,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2648,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2636,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2663,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2580,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2579,\n      columnNumber: 9\n    }, this), insights.length > 0 && !showAIInsightsPanel && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setAIInsights({\n          results: [],\n          insights: insights\n        });\n        setShowAIInsightsPanel(true);\n      },\n      className: \"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\",\n      children: [\"View AI Insights (\", insights.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2673,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1864,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"b1cfVhHUADiintR0AOiNcsngiro=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","classifyFeedback","generateFeatureIdeas","FeedbackImporter","processFeedbackData","importFeedbackData","Legend","jsxDEV","_jsxDEV","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","UserResearchNetwork","_s","_analyticsData$sentim","_analyticsData$sentim2","_analyticsData$sentim3","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","graphData","setGraphData","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","showConnectionModal","setShowConnectionModal","showFeedbackModal","setShowFeedbackModal","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","insights","setInsights","analyticsData","setAnalyticsData","selectedThemeForFeedback","setSelectedThemeForFeedback","timer","setTimeout","clearTimeout","current","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","length","recalculateFeedbackCounts","select","remove","miniMapWidth","Math","min","miniMapHeight","miniScale","miniMapContainer","append","attr","style","miniMap","miniMapGroup","minX","Infinity","maxX","minY","maxY","forEach","node","x","max","y","centerX","centerY","adjustedScale","miniLinks","selectAll","data","enter","d","find","n","miniNodes","viewportIndicator","updateViewportIndicator","transform","transformMatrix","scale","k","translateX","translateY","visibleWidth","visibleHeight","rectWidth","rectHeight","rectX","rectY","on","originalTick","tick","result","apply","arguments","console","log","svg","g","zoom","scaleExtent","event","call","Array","isArray","map","normalizedLinks","link","sourceId","targetId","validLinks","filter","sourceExists","some","targetExists","warn","simulation","forceSimulation","force","forceLink","distance","forceManyBody","forceCenter","forceCollide","stop","sourceType","targetType","drag","dragstarted","dragged","dragended","stopPropagation","fx","fy","handleNodeClick","text","title","i","active","alphaTarget","restart","zoomIdentity","translate","feedbackCounts","themes","personas","features","sourceNode","targetNode","updatedNodes","prevData","importData","file","files","then","importedData","processedNodes","label","analytics","svgWidth","svgHeight","transition","duration","catch","message","mockClassifyFeedback","lowerText","toLowerCase","includes","theme","mockGenerateFeatureIdeas","processImportedFeedback","newGraph","nodeMap","item","user_role","personaId","Date","now","Object","keys","personaNode","push","processChunks","chunkSize","chunks","slice","chunk","substring","themeId","themeNode","linkExists","err","Promise","resolve","significantThemes","values","sort","a","b","relatedFeedback","featureIdeas","idea","featureId","featureNode","description","existingLink","l","random","toString","fallback","tempSimulation","handleAddNode","trim","alert","newNode","connectedLinks","connectedNodeIds","connectedNodes","results","nodeType","nodeId","connectedFeatures","connectedPersonas","timestamp","isFeatureView","connectedThemes","persona","personaFeedback","toISOString","isFeedbackView","feedbackText","fullText","originalText","completeText","content","feedback","matchingItem","role","date","created_at","relatedThemes","sentiment","handleConnectionSubmit","existingConnection","newLink","connectNodes","targets","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","resetVisualization","confirm","handleAddFeedback","feedbackId","feedbackItem","prev","selectedTheme","connectFeedbackToThemeById","classification","connectFeedbackToTheme","fallbackClassification","themeName","replace","feedbackNode","connectFeedbackToPersona","alpha","svgNode","feedbackCircle","empty","roleName","zoomIn","currentTransform","zoomTransform","zoomOut","fitToScreen","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","handleDataImported","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","e","index","backgroundColor","accept","disabled","parseInt","ref","marginRight","minHeight","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","maxHeight","idx","toLocaleString","feature","sentimentDistribution","Positive","Negative","Neutral","insight","toFixed","step","parseFloat","rows","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n  .domain([\"theme\", \"feedback\", \"persona\"])\n  .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [\n    { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n    { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n    { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n    { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n    { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n    { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n  ],\n  links: [\n    { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n    { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n    { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n    { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n  ]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n  \n  // State\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  \n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  \n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  \n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  \n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // New theme selection state\n  const [selectedThemeForFeedback, setSelectedThemeForFeedback] = useState('');\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (!svgRef.current || !showMiniMap) return;\n    \n    // Remove any existing mini-map first\n    d3.select('.mini-map-container').remove();\n    \n    const containerWidth = dimensions.width;\n    const containerHeight = dimensions.height;\n    \n    // Smaller mini-map dimensions\n    const miniMapWidth = Math.min(180, containerWidth * 0.2);\n    const miniMapHeight = Math.min(120, containerHeight * 0.2);\n    \n    // Scale for mini-map (adjust to show all nodes properly)\n    const miniScale = Math.min(\n      miniMapWidth / containerWidth,\n      miniMapHeight / containerHeight\n    ) * 0.8; // 80% to give more padding\n    \n    // Create mini-map container\n    const miniMapContainer = d3.select(containerRef.current)\n      .append('div')\n      .attr('class', 'mini-map-container')\n      .style('position', 'absolute')\n      .style('top', '10px')\n      .style('left', '10px')\n      .style('width', `${miniMapWidth}px`)\n      .style('height', `${miniMapHeight}px`)\n      .style('background-color', 'rgba(255, 255, 255, 0.9)')\n      .style('border', '1px solid #ccc')\n      .style('border-radius', '4px')\n      .style('box-shadow', '0 1px 3px rgba(0,0,0,0.2)')\n      .style('overflow', 'hidden')\n      .style('z-index', '100');\n      \n    // Create mini-map SVG\n    const miniMap = miniMapContainer\n      .append('svg')\n      .attr('width', miniMapWidth)\n      .attr('height', miniMapHeight);\n      \n    // First create a group for transformations  \n    const miniMapGroup = miniMap.append('g')\n      .attr('transform', `translate(${miniMapWidth/2}, ${miniMapHeight/2})`);\n    \n    // Calculate bounds for centering\n    let minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x) {\n        minX = Math.min(minX, node.x);\n        maxX = Math.max(maxX, node.x);\n        minY = Math.min(minY, node.y);\n        maxY = Math.max(maxY, node.y);\n      }\n    });\n    \n    // Default if no positions yet\n    if (minX === Infinity) {\n      minX = 0;\n      maxX = containerWidth;\n      minY = 0;\n      maxY = containerHeight;\n    }\n    \n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    const width = maxX - minX || containerWidth;\n    const height = maxY - minY || containerHeight;\n    \n    // Adjusted scale to fit all nodes\n    const adjustedScale = Math.min(\n      (miniMapWidth * 0.8) / width,\n      (miniMapHeight * 0.8) / height\n    );\n      \n    // Create mini-map links first (so nodes render on top)\n    const miniLinks = miniMapGroup\n      .append('g')\n      .selectAll('line')\n      .data(graphData.links)\n      .enter()\n      .append('line')\n      .attr('stroke', '#ddd')\n      .attr('stroke-width', 0.8)\n      .attr('stroke-opacity', 0.6)\n      .attr('x1', d => {\n        const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n        return source && source.x ? (source.x - centerX) * adjustedScale : 0;\n      })\n      .attr('y1', d => {\n        const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n        return source && source.y ? (source.y - centerY) * adjustedScale : 0;\n      })\n      .attr('x2', d => {\n        const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n        return target && target.x ? (target.x - centerX) * adjustedScale : 0;\n      })\n      .attr('y2', d => {\n        const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n        return target && target.y ? (target.y - centerY) * adjustedScale : 0;\n      });\n      \n    // Create mini-map nodes on top of links\n    const miniNodes = miniMapGroup\n      .append('g')\n      .selectAll('circle')\n      .data(graphData.nodes)\n      .enter()\n      .append('circle')\n      .attr('r', d => d.type === 'theme' ? 2.5 : 2)\n      .attr('fill', d => colorScale(d.type))\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 0.5)\n      .attr('cx', d => d.x ? (d.x - centerX) * adjustedScale : 0)\n      .attr('cy', d => d.y ? (d.y - centerY) * adjustedScale : 0);\n      \n    // Add viewport indicator rectangle\n    const viewportIndicator = miniMapGroup\n      .append('rect')\n      .attr('class', 'viewport-indicator')\n      .attr('stroke', '#3182CE')\n      .attr('stroke-width', 1.5)\n      .attr('fill', 'none')\n      .attr('fill-opacity', 0.1)\n      .attr('rx', 2)\n      .attr('ry', 2);\n      \n    // Update the viewport indicator when zoom changes\n    if (zoomRef.current) {\n      const updateViewportIndicator = () => {\n        const transform = zoomRef.current.transformMatrix;\n        if (!transform) return;\n        \n        const scale = transform.k;\n        const translateX = transform.x;\n        const translateY = transform.y;\n        \n        // Calculate visible portion of the view\n        const visibleWidth = containerWidth / scale;\n        const visibleHeight = containerHeight / scale;\n        \n        // Center point of the visible area\n        const centerX = -translateX / scale + containerWidth / (2 * scale);\n        const centerY = -translateY / scale + containerHeight / (2 * scale);\n        \n        // Calculate position and size in mini-map coordinates\n        const rectWidth = visibleWidth * adjustedScale;\n        const rectHeight = visibleHeight * adjustedScale;\n        const rectX = (centerX - visibleWidth/2 - centerX) * adjustedScale;\n        const rectY = (centerY - visibleHeight/2 - centerY) * adjustedScale;\n        \n        // Update indicator position and size\n        viewportIndicator\n          .attr('x', rectX)\n          .attr('y', rectY)\n          .attr('width', rectWidth)\n          .attr('height', rectHeight);\n      };\n      \n      // Initial update\n      updateViewportIndicator();\n      \n      // Subscribe to zoom events\n      zoomRef.current.on('zoom.minimap', updateViewportIndicator);\n    }\n    \n    // Store original tick function in outer scope so it's accessible in cleanup\n    let originalTick = null;\n    \n    // Update mini-map when simulation ticks\n    if (simulationRef.current) {\n      originalTick = simulationRef.current.tick;\n      simulationRef.current.tick = function() {\n        const result = originalTick.apply(this, arguments);\n        \n        // Recalculate center and bounds\n        let minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity;\n        graphData.nodes.forEach(node => {\n          if (node.x) {\n            minX = Math.min(minX, node.x);\n            maxX = Math.max(maxX, node.x);\n            minY = Math.min(minY, node.y);\n            maxY = Math.max(maxY, node.y);\n          }\n        });\n        \n        if (minX === Infinity) {\n          minX = 0;\n          maxX = containerWidth;\n          minY = 0;\n          maxY = containerHeight;\n        }\n        \n        const centerX = (minX + maxX) / 2;\n        const centerY = (minY + maxY) / 2;\n        const width = maxX - minX || containerWidth;\n        const height = maxY - minY || containerHeight;\n        \n        const adjustedScale = Math.min(\n          (miniMapWidth * 0.8) / width,\n          (miniMapHeight * 0.8) / height\n        );\n        \n        // Update mini-map nodes\n        miniNodes\n          .attr('cx', d => d.x ? (d.x - centerX) * adjustedScale : 0)\n          .attr('cy', d => d.y ? (d.y - centerY) * adjustedScale : 0);\n          \n        // Update mini-map links\n        miniLinks\n          .attr('x1', d => {\n            const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n            return source && source.x ? (source.x - centerX) * adjustedScale : 0;\n          })\n          .attr('y1', d => {\n            const source = typeof d.source === 'object' ? d.source : graphData.nodes.find(n => n.id === d.source);\n            return source && source.y ? (source.y - centerY) * adjustedScale : 0;\n          })\n          .attr('x2', d => {\n            const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n            return target && target.x ? (target.x - centerX) * adjustedScale : 0;\n          })\n          .attr('y2', d => {\n            const target = typeof d.target === 'object' ? d.target : graphData.nodes.find(n => n.id === d.target);\n            return target && target.y ? (target.y - centerY) * adjustedScale : 0;\n          });\n        \n        return result;\n      };\n    }\n    \n    // Cleanup on component unmount\n    return () => {\n      if (simulationRef.current && originalTick) {\n        // Restore original tick function to avoid memory leaks\n        simulationRef.current.tick = originalTick;\n      }\n      \n      if (zoomRef.current) {\n        zoomRef.current.on('zoom.minimap', null);\n      }\n    };\n  }, [dimensions, graphData, showMiniMap, colorScale]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    \n    console.log(\"Rendering with data:\", graphData);\n    \n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n    \n    // Set up zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    svg.call(zoom);\n    zoomRef.current = zoom;\n    \n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || \n        !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n        graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n    \n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    \n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    \n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n    \n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(validLinks)\n        .id(d => d.id)\n        .distance(100)\n        .strength(1)) // Stronger link force for better connections\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide(30));\n    \n    simulationRef.current = simulation;\n    \n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create the links\n    const link = g.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(validLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", d => {\n        // Get the source and target nodes\n        const source = nodes.find(n => n.id === d.source);\n        const target = nodes.find(n => n.id === d.target);\n        \n        if (!source || !target) return \"#999\";\n        \n        const sourceType = source.type;\n        const targetType = target.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        \n        return \"#999\"; // Default gray\n      })\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n    \n    // Create the nodes\n    const node = g.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        \n        if (selectedNode && selectedNode.id === d.id) {\n          // If clicking the same node again, release it\n          d.fx = null;\n          d.fy = null;\n          setSelectedNode(null);\n        } else {\n          // If clicking a new node, fix its position\n          d.fx = d.x;\n          d.fy = d.y;\n          setSelectedNode(d);\n          handleNodeClick(d);\n        }\n      });\n    \n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 15;\n        return 10; // Smaller feedback nodes\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2);\n    \n    // Add labels with better positioning\n    node.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return 30 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 25;\n        return 22; // Position feedback labels\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n      .attr(\"fill\", \"#333\");\n    \n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\")\n      .text(d => d.type === \"feedback\" ? d.title : d.name);\n    \n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n    \n    // Update link positions immediately with node positions from simulation ticks\n    link\n      .attr(\"x1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.y : 0;\n      });\n    \n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => {\n          // Handle both ID and object references\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.y : 0;\n        });\n      \n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      \n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n    \n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(\n      dimensions.width / 2 - dimensions.width * 0.5,\n      dimensions.height / 2 - dimensions.height * 0.5\n    ).scale(0.8));\n    \n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    console.log(\"Starting import from file:\", file.name);\n    \n    // Use our async utility function\n    importFeedbackData(file)\n      .then(importedData => {\n        console.log(\"Processed import data:\", importedData);\n        \n        // Ensure node structure is compatible with visualization\n        const processedNodes = importedData.nodes.map(node => {\n          // Make sure each node has the essential properties\n          return {\n            ...node,\n            // Ensure these critical properties exist\n            id: node.id,\n            name: node.name || node.label || \"Unnamed\",\n            type: node.type || \"theme\",\n            // Add appropriate properties based on type\n            ...(node.type === 'theme' ? { feedbackCount: node.feedbackCount || 5 } : {}),\n            ...(node.type === 'feature' ? { priority: node.priority || 'Medium' } : {})\n          };\n        });\n        \n        setGraphData({ \n          nodes: processedNodes, \n          links: importedData.links || []\n        });\n        setInsights(importedData.insights || []);\n        setAnalyticsData(importedData.analytics || null);\n        setLoading(false);\n        \n        // Reset any selections and force a re-center\n        setSelectedNode(null);\n        // Use a timeout without directly referencing fitToScreen\n        setTimeout(() => {\n          if (zoomRef.current) {\n            const svg = d3.select(svgRef.current);\n            const svgWidth = svg.node().getBoundingClientRect().width;\n            const svgHeight = svg.node().getBoundingClientRect().height;\n            \n            svg.transition()\n              .duration(750)\n              .call(zoomRef.current.transform, \n                d3.zoomIdentity\n                  .translate(svgWidth / 2, svgHeight / 2)\n                  .scale(0.8)\n              );\n          }\n        }, 300);\n      })\n      .catch(error => {\n        console.error(\"Error importing feedback data:\", error);\n        setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n        setLoading(false);\n      });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = (text) => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return { theme: 'Stability Issues' };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return { theme: 'Performance' };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return { theme: 'Mobile Experience' };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || \n              lowerText.includes('layout') || lowerText.includes('look')) {\n      return { theme: 'User Interface' };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return { theme: 'Reporting & Analytics' };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return { theme: 'Data Export & Import' };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return { theme: 'Search & Navigation' };\n    }\n    \n    return { theme: 'General Feedback' };\n  };\n  \n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = (theme) => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{ \n        name: 'Crash Prevention & Recovery', \n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{ \n        name: 'Performance Optimization', \n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{ \n        name: 'Responsive Design Overhaul', \n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{ \n        name: 'UI Modernization', \n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{ \n        name: 'Custom Report Builder', \n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{ \n        name: 'Enhanced Export Options', \n        priority: 'High'\n      }];\n    } else {\n      return [{ \n        name: 'User Experience Improvements', \n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback((feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    \n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n    \n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n    \n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n    \n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      \n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n    \n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n      \n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n      \n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i+1} of ${chunks.length}...`);\n        \n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          \n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            \n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                \n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => \n                  (link.source === personaNode.id && link.target === themeNode.id) ||\n                  (link.source === themeNode.id && link.target === personaNode.id)\n                );\n                \n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n        \n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({...newGraph});\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n      \n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes)\n        .filter(theme => theme.feedbackCount >= 2)\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 5); // Top 5 themes\n      \n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      \n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n          \n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          \n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          \n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              \n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n              \n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n              \n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                \n                if ((sourceId === theme.id || targetId === theme.id)) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  \n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => \n                      (l.source === personaId && l.target === featureId) ||\n                      (l.source === featureId && l.target === personaId)\n                    );\n                    \n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n      \n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n        \n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          \n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n          \n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n      \n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      \n      setGraphData(newGraph);\n      \n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          \n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes)\n            .force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100))\n            .force(\"charge\", d3.forceManyBody().strength(-300))\n            .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n            .force(\"collide\", d3.forceCollide(40));\n          \n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          \n          tempSimulation.stop();\n        }\n        \n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n    \n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    \n    let newNode;\n    \n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    \n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      \n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = useCallback((node) => {\n    if (!node) return;\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights\n    let insights = {\n      results: [],\n      nodeType: node.type,\n      nodeId: node.id\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Find feedback related to this theme\n      if (feedbackItems.length > 0) {\n        // For themes, we need to find feedback that might be related\n        // This is a simple string matching approach, but could be enhanced\n        const relatedFeedback = feedbackItems.filter(item => \n          item.text.toLowerCase().includes(node.name.toLowerCase())\n        );\n        \n        if (relatedFeedback.length > 0) {\n          insights.relatedFeedback = relatedFeedback.map((item) => ({\n            text: item.text,\n            user_role: item.user_role,\n            timestamp: item.timestamp\n          }));\n        }\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.description = node.description || \"\";\n      \n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find feedback from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => \n          item.user_role === node.name\n        );\n        \n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item) => ({\n            text: item.text,\n            user_role: item.user_role,\n            timestamp: item.timestamp || new Date().toISOString()\n          }));\n        }\n      }\n    } else if (node.type === \"feedback\") {\n      // Feedback node view - ensure we get the complete feedback text\n      insights.isFeedbackView = true;\n      \n      // Debug: Print the node object to console\n      console.log('Feedback node clicked:', node);\n      \n      // Get the full text - prioritizing full versions and checking all possible properties\n      // Note: The order here is important - put the most likely to contain full text first\n      insights.feedbackText = node.fullText || node.originalText || node.completeText || \n                             node.text || node.content || node.feedback || node.description || \n                             node.title || node.name || \"\";\n      \n      // If we have access to feedbackItems array, try to find a matching item with full text\n      if (feedbackItems && feedbackItems.length > 0) {\n        // Try to find a matching feedback item by id or text\n        const matchingItem = feedbackItems.find(item => \n          (item.id === node.id) || \n          (item.text && node.text && item.text.includes(node.text)) ||\n          (item.text && node.name && item.text.includes(node.name))\n        );\n        \n        if (matchingItem && matchingItem.text) {\n          // Use the full text from the matching item\n          insights.feedbackText = matchingItem.text;\n          \n          // Also update user role and timestamp if available\n          if (matchingItem.user_role) {\n            insights.user_role = matchingItem.user_role;\n          }\n          if (matchingItem.timestamp) {\n            insights.timestamp = matchingItem.timestamp;\n          }\n        }\n      }\n      \n      // Always prefer the node's user_role if available\n      insights.user_role = node.user_role || node.persona || node.role || insights.user_role || \"Unknown User\";\n      insights.timestamp = node.timestamp || node.date || node.created_at || new Date().toISOString();\n      \n      // Get related themes if available\n      if (node.themes) {\n        insights.relatedThemes = node.themes;\n      } else {\n        // Try to find related themes from connections\n        const relatedThemes = connectedNodes\n          .filter(n => n.type === \"theme\")\n          .map(n => n.name);\n        \n        if (relatedThemes.length > 0) {\n          insights.relatedThemes = relatedThemes;\n        }\n      }\n      \n      // Get sentiment if available\n      if (node.sentiment) {\n        insights.sentiment = node.sentiment;\n      }\n    }\n    \n    // Update insights and show panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n    \n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      return (sourceId === connectionSource.id && targetId === connectionTarget) || \n             (sourceId === connectionTarget && targetId === connectionSource.id);\n    });\n    \n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      \n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    \n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n    \n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle adding new feedback with better visualization\n  const handleAddFeedback = useCallback(() => {\n    if (!newFeedback) {\n      alert(\"Please enter feedback text\");\n      return;\n    }\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    // Generate a unique ID for the new feedback\n    const feedbackId = `feedback-${Date.now()}`;\n    \n    // Create a new feedback object\n    const feedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole || \"User\",\n      timestamp: new Date().toISOString(),\n      type: \"feedback\"\n    };\n    \n    // Add to feedbackItems array\n    setFeedbackItems(prev => [...prev, feedbackItem]);\n    \n    // First pass: Add feedback node to visualization\n    const newNode = {\n      id: feedbackId,\n      name: newFeedback.length > 30 ? newFeedback.substring(0, 30) + \"...\" : newFeedback,\n      text: newFeedback, // Store full text\n      fullText: newFeedback, // Store full text for panel view\n      type: \"feedback\",\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Update graph with new node\n    setGraphData(prevData => ({\n      nodes: [...prevData.nodes, newNode],\n      links: [...prevData.links]\n    }));\n    \n    // If the user selected a specific theme, connect to it directly\n    if (selectedThemeForFeedback) {\n      const selectedTheme = graphData.nodes.find(node => node.id === selectedThemeForFeedback);\n      if (selectedTheme) {\n        // Connect to the selected theme\n        connectFeedbackToThemeById(feedbackId, selectedThemeForFeedback);\n        setIsAIProcessing(false);\n      }\n    } else {\n      // No theme selected - use AI or fallback as before\n      try {\n        // First try to use the AI service if available\n        classifyFeedback(newFeedback)\n          .then(classification => {\n            // Successfully classified with AI\n            connectFeedbackToTheme(feedbackId, classification.theme);\n            setIsAIProcessing(false);\n          })\n          .catch(error => {\n            console.warn(\"AI classification failed, using fallback:\", error);\n            // Use fallback classification\n            const fallbackClassification = mockClassifyFeedback(newFeedback);\n            connectFeedbackToTheme(feedbackId, fallbackClassification.theme);\n            setIsAIProcessing(false);\n          });\n      } catch (error) {\n        console.error(\"Error in feedback processing:\", error);\n        // Still use fallback even if there's an error\n        const fallbackClassification = mockClassifyFeedback(newFeedback);\n        connectFeedbackToTheme(feedbackId, fallbackClassification.theme);\n        setIsAIProcessing(false);\n        setAIError(\"Error processing feedback, but added with basic classification\");\n      }\n    }\n    \n    // Reset form fields\n    setShowFeedbackModal(false);\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setSelectedThemeForFeedback('');\n  }, [newFeedback, newFeedbackRole, graphData.nodes, selectedThemeForFeedback]);\n\n  // Helper function to connect feedback to a theme\n  const connectFeedbackToTheme = useCallback((feedbackId, themeName) => {\n    // Check if theme exists\n    let themeNode = graphData.nodes.find(node => \n      node.type === \"theme\" && node.name.toLowerCase() === themeName.toLowerCase()\n    );\n    \n    // If theme doesn't exist, create it\n    if (!themeNode) {\n      themeNode = {\n        id: `theme-${themeName.replace(/\\s+/g, '-').toLowerCase()}`,\n        name: themeName,\n        type: \"theme\",\n        feedbackCount: 1\n      };\n      \n      // Add the new theme node\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, themeNode],\n        links: [...prevData.links]\n      }));\n    } else {\n      // Update theme's feedback count\n      setGraphData(prevData => ({\n        ...prevData,\n        nodes: prevData.nodes.map(node => \n          node.id === themeNode.id \n            ? { ...node, feedbackCount: (node.feedbackCount || 0) + 1 }\n            : node\n        )\n      }));\n    }\n    \n    // Add connection between feedback and theme\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: themeNode.id,\n        strength: 0.7\n      };\n      \n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return (sourceId === feedbackId && targetId === themeNode.id) || \n               (sourceId === themeNode.id && targetId === feedbackId);\n      });\n      \n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n    \n    // If the user role is provided, try to connect to a persona\n    const feedbackNode = graphData.nodes.find(n => n.id === feedbackId);\n    if (feedbackNode && feedbackNode.user_role) {\n      connectFeedbackToPersona(feedbackId, feedbackNode.user_role);\n    }\n    \n    // Restart the simulation to reposition nodes\n    if (simulationRef.current) {\n      simulationRef.current.alpha(0.3).restart();\n    }\n    \n    // Highlight the new feedback momentarily\n    setTimeout(() => {\n      const svgNode = d3.select(svgRef.current);\n      const feedbackCircle = svgNode.selectAll(\".nodes circle\").filter(d => d.id === feedbackId);\n      \n      if (!feedbackCircle.empty()) {\n        feedbackCircle\n          .transition()\n          .duration(500)\n          .attr(\"r\", 15)\n          .transition()\n          .duration(500)\n          .attr(\"r\", 10);\n      }\n    }, 500);\n  }, [graphData]);\n\n  // Helper function to connect feedback to a persona\n  const connectFeedbackToPersona = useCallback((feedbackId, roleName) => {\n    // Skip if no role name\n    if (!roleName) return;\n    \n    // Check if persona exists\n    let personaNode = graphData.nodes.find(node => \n      node.type === \"persona\" && node.name.toLowerCase() === roleName.toLowerCase()\n    );\n    \n    // If persona doesn't exist, create it\n    if (!personaNode) {\n      personaNode = {\n        id: `persona-${roleName.replace(/\\s+/g, '-').toLowerCase()}`,\n        name: roleName,\n        type: \"persona\"\n      };\n      \n      // Add the new persona node\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, personaNode],\n        links: [...prevData.links]\n      }));\n    }\n    \n    // Add connection between feedback and persona\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: personaNode.id,\n        strength: 0.5\n      };\n      \n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return (sourceId === feedbackId && targetId === personaNode.id) || \n               (sourceId === personaNode.id && targetId === feedbackId);\n      });\n      \n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n  }, [graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  }, []);\n\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      \n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Add a toggle function for mini-map\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  const handleDataImported = (importedData) => {\n    if (importedData) {\n      setGraphData({ \n        nodes: importedData.nodes || [], \n        links: importedData.links || [] \n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add a helper function to connect feedback to theme by ID\n  const connectFeedbackToThemeById = useCallback((feedbackId, themeId) => {\n    // Find the theme node\n    const themeNode = graphData.nodes.find(node => node.id === themeId);\n    if (!themeNode) return;\n    \n    // Update theme's feedback count\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: prevData.nodes.map(node => \n        node.id === themeId \n          ? { ...node, feedbackCount: (node.feedbackCount || 0) + 1 }\n          : node\n      )\n    }));\n    \n    // Add connection between feedback and theme\n    setGraphData(prevData => {\n      // Create the new link\n      const newLink = {\n        source: feedbackId,\n        target: themeId,\n        strength: 0.7\n      };\n      \n      // Add link only if it doesn't already exist\n      const linkExists = prevData.links.some(link => {\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return (sourceId === feedbackId && targetId === themeId) || \n               (sourceId === themeId && targetId === feedbackId);\n      });\n      \n      return {\n        nodes: prevData.nodes,\n        links: linkExists ? prevData.links : [...prevData.links, newLink]\n      };\n    });\n    \n    // If the user role is provided, try to connect to a persona\n    const feedbackNode = graphData.nodes.find(n => n.id === feedbackId);\n    if (feedbackNode && feedbackNode.user_role) {\n      connectFeedbackToPersona(feedbackId, feedbackNode.user_role);\n    }\n    \n    // Restart the simulation to reposition nodes\n    if (simulationRef.current) {\n      simulationRef.current.alpha(0.3).restart();\n    }\n    \n    // Highlight the new feedback momentarily\n    setTimeout(() => {\n      const svgNode = d3.select(svgRef.current);\n      const feedbackCircle = svgNode.selectAll(\".nodes circle\").filter(d => d.id === feedbackId);\n      \n      if (!feedbackCircle.empty()) {\n        feedbackCircle\n          .transition()\n          .duration(500)\n          .attr(\"r\", 15)\n          .transition()\n          .duration(500)\n          .attr(\"r\", 10);\n      }\n    }, 500);\n  }, [graphData, connectFeedbackToPersona]);\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Error screen\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Header and controls */}\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search bar */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={resetVisualization}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? \"Hide Mini-Map\" : \"Show Mini-Map\"}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={connectNodes}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('feedback')}\n            >\n              Feedback\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main visualization container */}\n      <div className=\"flex flex-1 relative\">\n        <div \n          ref={containerRef} \n          className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n          style={{\n            marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n            minHeight: '500px'\n          }}\n        >\n          <svg \n            ref={svgRef} \n            width=\"100%\" \n            height=\"100%\"\n            className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n            style={{ minHeight: '500px' }}\n            onClick={() => setSelectedNode(null)}\n          />\n          \n          {/* Add Legend */}\n          <Legend colorScale={colorScale} />\n          \n          {/* Zoom controls */}\n          <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomIn}\n            >\n              <span className=\"text-xl\">+</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomOut}\n            >\n              <span className=\"text-xl\">-</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={fitToScreen}\n            >\n              <span className=\"text-xl\">⊡</span>\n            </button>\n          </div>\n        </div>\n        \n        {/* AI Insights Panel */}\n        {showAIInsightsPanel && aiInsights && (\n          <div \n            className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`}\n            style={{ \n              width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n              maxWidth: '40%'\n            }}\n          >\n            {/* Collapse/Expand Button */}\n            <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50 shrink-0\">\n              <button \n                onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n                title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                    isPanelCollapsed \n                      ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                      : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                  } />\n                </svg>\n              </button>\n              \n              {isPanelCollapsed && (\n                <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona}` : \n                   aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n                </div>\n              )}\n              \n              <button \n                onClick={() => setShowAIInsightsPanel(false)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n                title=\"Close panel\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Panel Content - Only shown when expanded */}\n            {!isPanelCollapsed && (\n              <div className=\"flex-1 overflow-y-auto p-6 w-full\" style={{ maxHeight: '100vh' }}>\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-6 sticky top-0 bg-white pt-2 pb-3 z-10\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Details` : \n                   aiInsights.theme ? `${aiInsights.theme} Details` : \n                   aiInsights.isFeedbackView ? 'Feedback Details' : 'AI Feedback Insights'}\n                </h2>\n                \n                {/* Node Details Section - New section for showing node-specific info */}\n                <div className=\"mb-8 bg-white p-4 rounded-lg border border-gray-200 shadow-sm overflow-hidden\">\n                  {/* Persona Node Details */}\n                  {aiInsights.persona && (\n                    <div>\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('persona') }}></div>\n                        <h3 className=\"text-lg font-semibold text-gray-700\">Persona: {aiInsights.persona}</h3>\n                      </div>\n                      \n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-500 mb-1\">Feedback Count</div>\n                        <div className=\"text-2xl font-semibold\">{aiInsights.feedbackCount || 0}</div>\n                      </div>\n                      \n                      {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                        <div className=\"mb-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Common Themes</div>\n                          <div className=\"space-y-1\">\n                            {aiInsights.connectedThemes.map((theme, idx) => (\n                              <div key={idx} className=\"flex items-center bg-blue-50 px-3 py-2 rounded\">\n                                <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: colorScale('theme') }}></div>\n                                <span className=\"text-sm\">{theme.name}</span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {aiInsights.results && aiInsights.results.length > 0 && (\n                        <div>\n                          <div className=\"text-sm text-gray-500 mb-2\">Feedback from this Persona</div>\n                          <div className=\"space-y-3 max-h-60 overflow-y-auto\">\n                            {aiInsights.results.map((item, idx) => (\n                              <div key={idx} className=\"bg-gray-50 p-3 rounded border border-gray-200 text-sm\">\n                                <p className=\"mb-2\">\"{item.text}\"</p>\n                                <div className=\"text-xs text-gray-500 italic\">\n                                  {item.timestamp ? new Date(item.timestamp).toLocaleString() : 'No timestamp'}\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  {/* Theme Node Details */}\n                  {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                    <div>\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('theme') }}></div>\n                        <h3 className=\"text-lg font-semibold text-gray-700\">Theme: {aiInsights.theme}</h3>\n                      </div>\n                      \n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-500 mb-1\">Related Feedback Count</div>\n                        <div className=\"text-2xl font-semibold\">{aiInsights.feedbackCount || 0}</div>\n                      </div>\n                      \n                      {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                        <div className=\"mb-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Connected Personas</div>\n                          <div className=\"space-y-1\">\n                            {aiInsights.connectedPersonas.map((persona, idx) => (\n                              <div key={idx} className=\"flex items-center bg-orange-50 px-3 py-2 rounded\">\n                                <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: colorScale('persona') }}></div>\n                                <span className=\"text-sm\">{persona.name}</span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                        <div className=\"mb-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Related Features</div>\n                          <div className=\"space-y-2\">\n                            {aiInsights.connectedFeatures.map((feature, idx) => (\n                              <div key={idx} className=\"bg-green-50 px-3 py-2 rounded border-l-4 border-green-400\">\n                                <div className=\"font-medium\">{feature.name}</div>\n                                <div className=\"text-xs mt-1\">\n                                  Priority: <span className={`font-medium ${\n                                    feature.priority === 'High' ? 'text-red-600' : \n                                    feature.priority === 'Medium' ? 'text-yellow-600' : 'text-blue-600'\n                                  }`}>{feature.priority || 'Medium'}</span>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  {/* Feature Node Details */}\n                  {aiInsights.isFeatureView && (\n                    <div>\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('feature') }}></div>\n                        <h3 className=\"text-lg font-semibold text-gray-700\">Feature: {aiInsights.name}</h3>\n                      </div>\n                      \n                      <div className=\"mb-4\">\n                        <div className=\"inline-block bg-gray-100 px-3 py-1 rounded-full text-sm font-medium\">\n                          Priority: <span className={`${\n                            aiInsights.priority === 'High' ? 'text-red-600' : \n                            aiInsights.priority === 'Medium' ? 'text-yellow-600' : 'text-blue-600'\n                          }`}>{aiInsights.priority}</span>\n                        </div>\n                      </div>\n                      \n                      {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                        <div className=\"mb-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Related Themes</div>\n                          <div className=\"space-y-1\">\n                            {aiInsights.connectedThemes.map((theme, idx) => (\n                              <div key={idx} className=\"flex items-center bg-blue-50 px-3 py-2 rounded\">\n                                <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: colorScale('theme') }}></div>\n                                <span className=\"text-sm\">{theme.name}</span>\n                                {theme.feedbackCount && (\n                                  <span className=\"ml-2 text-xs text-gray-500\">({theme.feedbackCount} feedback)</span>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                        <div>\n                          <div className=\"text-sm text-gray-500 mb-2\">Related Personas</div>\n                          <div className=\"space-y-1\">\n                            {aiInsights.connectedPersonas.map((persona, idx) => (\n                              <div key={idx} className=\"flex items-center bg-orange-50 px-3 py-2 rounded\">\n                                <div className=\"w-3 h-3 rounded-full mr-2\" style={{ backgroundColor: colorScale('persona') }}></div>\n                                <span className=\"text-sm\">{persona.name}</span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  \n                  {/* Feedback Node Details - Enhanced for complete text */}\n                  {aiInsights.isFeedbackView && (\n                    <div>\n                      <div className=\"flex items-center mb-4\">\n                        <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('feedback') }}></div>\n                        <h3 className=\"text-lg font-semibold text-gray-700\">Feedback Details</h3>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                        {/* Complete feedback text with better formatting */}\n                        <div className=\"text-gray-800 mb-4 bg-white p-3 rounded border border-gray-200 max-h-80 overflow-y-auto\">\n                          <p className=\"whitespace-pre-wrap text-base leading-relaxed\">\"{aiInsights.feedbackText}\"</p>\n                          \n                          {/* Debug info for development - comment out in production */}\n                          {/* <div className=\"mt-3 pt-3 border-t border-gray-200 text-xs text-gray-500\">\n                            <div>Content length: {aiInsights.feedbackText?.length || 0} characters</div>\n                          </div> */}\n                        </div>\n                        \n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 text-gray-500 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                            </svg>\n                            <span className=\"text-sm text-gray-600 font-medium\">{aiInsights.user_role || 'Unknown User'}</span>\n                          </div>\n                          \n                          <div className=\"text-xs text-gray-500\">\n                            {aiInsights.timestamp ? new Date(aiInsights.timestamp).toLocaleString() : 'No timestamp available'}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Sentiment Analysis - If available */}\n                      {aiInsights.sentiment && (\n                        <div className=\"mt-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Sentiment Analysis</div>\n                          <div className={`px-3 py-2 rounded-full inline-block font-medium text-sm ${\n                            aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                            aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {aiInsights.sentiment}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {/* Related Themes - If any */}\n                      {aiInsights.relatedThemes && aiInsights.relatedThemes.length > 0 && (\n                        <div className=\"mt-4\">\n                          <div className=\"text-sm text-gray-500 mb-2\">Related Themes</div>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {aiInsights.relatedThemes.map((theme, idx) => (\n                              <div key={idx} className=\"bg-blue-50 px-3 py-1 rounded-full text-sm\">\n                                {theme}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n                \n                {/* Existing analytics sections */}\n                {analyticsData && (\n                  <div className=\"space-y-6 mb-8\">\n                    {/* Sentiment Overview Section */}\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-700 mb-3 sticky top-14 bg-white z-10 pb-2\">Sentiment Overview</h3>\n                      <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                        <div className=\"flex items-center justify-around mb-2\">\n                          <div className=\"text-center\">\n                            <div className=\"text-green-500 text-2xl font-bold\">\n                              {analyticsData.sentimentDistribution?.Positive || 0}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">Positive</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-red-500 text-2xl font-bold\">\n                              {analyticsData.sentimentDistribution?.Negative || 0}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">Negative</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-gray-500 text-2xl font-bold\">\n                              {analyticsData.sentimentDistribution?.Neutral || 0}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">Neutral</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Theme Analysis Section can go here */}\n                  </div>\n                )}\n                \n                {/* Rest of the panel content */}\n                {aiInsights.insights && aiInsights.insights.length > 0 && (\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Key Insights</h3>\n                    <div className=\"space-y-4\">\n                      {aiInsights.insights.map(insight => (\n                        <div key={insight.id || Math.random()} className=\"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\">\n                          <h4 className=\"font-medium text-gray-800 mb-1\">{insight.title}</h4>\n                          <p className=\"text-gray-700 text-sm\">{insight.description}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddNode}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleConnectionSubmit}\n                disabled={!connectionTarget}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            {/* New Theme Selection Dropdown */}\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connect to Theme (Optional)\n              </label>\n              <select\n                value={selectedThemeForFeedback || \"\"}\n                onChange={(e) => setSelectedThemeForFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Auto-detect theme (using AI)</option>\n                {graphData.nodes\n                  .filter(node => node.type === \"theme\")\n                  .map(theme => (\n                    <option key={theme.id} value={theme.id}>\n                      {theme.name}\n                    </option>\n                  ))\n                }\n              </select>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Leave empty to use AI for theme detection or select an existing theme\n              </p>\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                  setSelectedThemeForFeedback('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Display AI Insights in sidebar when available */}\n      {insights.length > 0 && !showAIInsightsPanel && (\n        <button\n          onClick={() => {\n            setAIInsights({ results: [], insights: insights });\n            setShowAIInsightsPanel(true);\n          }}\n          className=\"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\"\n        >\n          View AI Insights ({insights.length})\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}