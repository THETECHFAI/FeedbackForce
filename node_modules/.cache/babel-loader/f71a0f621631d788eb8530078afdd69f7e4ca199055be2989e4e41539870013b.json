{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState(initialData);\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n\n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n\n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n\n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width > 0) {\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n    console.log(\"Nodes count:\", graphData.nodes.length, \"Links count:\", graphData.links.length);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Deep copy nodes to avoid mutation issues\n    const nodes = JSON.parse(JSON.stringify(graphData.nodes));\n\n    // Create a proper link objects array with correct references\n    const links = graphData.links.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a normalized link object\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    console.log(`Working with ${nodes.length} nodes and ${links.length} links`);\n\n    // Create the force simulation with proper link handling\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink().id(d => d.id).links(links).distance(100).strength(d => d.strength || 0.5)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => d.type === \"theme\" ? 20 + d.feedbackCount / feedbackWeight : 20));\n    simulationRef.current = simulation;\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(links).enter().append(\"line\").attr(\"stroke\", d => {\n      // Get the source and target nodes\n      const source = nodes.find(n => n.id === d.source);\n      const target = nodes.find(n => n.id === d.target);\n      if (!source || !target) return \"#999\";\n      const sourceType = source.type;\n      const targetType = target.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n\n      return \"#999\"; // Default gray\n    }).attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n\n    // Add circles to nodes\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") return d.priority === \"High\" ? 22 : 20;\n      return 18;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2);\n\n    // Add labels to nodes\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") return d.priority === \"High\" ? 32 : 30;\n      return 28;\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\");\n\n    // Add title for hover effect\n    node.append(\"title\").text(d => d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // MiniMap implementation\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current) return () => {};\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9).attr(\"stroke\", \"#3182CE\").attr(\"stroke-width\", 2).attr(\"rx\", 6);\n\n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    const miniMapLinks = graphData.links.map(link => ({\n      source: typeof link.source === 'object' ? link.source.id : link.source,\n      target: typeof link.target === 'object' ? link.target.id : link.target\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5)).force(\"charge\", d3.forceManyBody().strength(-20)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(4));\n\n    // Add mini-map links\n    miniMapContainer.selectAll(\".mini-link\").data(miniMapLinks).enter().append(\"line\").attr(\"class\", \"mini-link\").attr(\"stroke\", \"#ccc\").attr(\"stroke-width\", 0.5);\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3).attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 15).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"fill\", \"#2D3748\").text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniMapContainer.selectAll(\".mini-link\").attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    }).attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    }).attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    }).attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click behavior\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Handle import of data\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        console.log(\"Imported data:\", importedData);\n\n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setFeedbackItems(importedData.feedback);\n\n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        }\n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          // Normalize and validate the data\n          const validNodes = importedData.nodes.map(node => ({\n            id: node.id || `node-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n            name: node.name || 'Unnamed Node',\n            type: node.type || 'theme',\n            feedbackCount: node.feedbackCount || 0,\n            priority: node.priority || 'Medium',\n            ...node // preserve other properties\n          }));\n\n          // Create a map of node IDs for quick lookups\n          const nodeMap = {};\n          validNodes.forEach(node => {\n            nodeMap[node.id] = true;\n          });\n\n          // Normalize links and ensure they reference valid nodes\n          const validLinks = importedData.links.map(link => {\n            // Extract source and target consistently\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n            // Validate sourceId and targetId\n            if (!sourceId || !targetId) {\n              console.warn('Link missing source or target:', link);\n              return null;\n            }\n\n            // Create a normalized link\n            return {\n              source: sourceId,\n              target: targetId,\n              strength: link.strength || 0.5\n            };\n          }).filter(link => link !== null && nodeMap[link.source] && nodeMap[link.target]);\n          console.log(`Found ${validLinks.length} valid links out of ${importedData.links.length}`);\n\n          // Set the validated graph data\n          setGraphData({\n            nodes: validNodes,\n            links: validLinks\n          });\n\n          // Wait a moment for D3 to process the data\n          setTimeout(() => {\n            setLoading(false);\n\n            // Pre-compute positions for better layout\n            if (simulationRef.current) {\n              simulationRef.current.stop();\n\n              // Create a temporary simulation to calculate positions\n              const tempSimulation = d3.forceSimulation(validNodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n              // Run 100 ticks synchronously to get a decent layout\n              for (let i = 0; i < 100; i++) {\n                tempSimulation.tick();\n              }\n              tempSimulation.stop();\n            }\n          }, 100);\n        }\n        // Invalid format\n        else {\n          setError(\"Invalid data format. The file should contain either:\" + \"\\n1. A 'feedback' array with user feedback items, or\" + \"\\n2. 'nodes' and 'links' arrays for direct graph data\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  }, [dimensions]);\n\n  // Transform feedback items to graph structure\n  const transformFeedbackToGraph = useCallback(async feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    try {\n      // Start with an empty graph\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n\n      // Maps to track created nodes\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        features: {}\n      };\n\n      // First, create persona nodes\n      for (const item of feedbackItems) {\n        if (!item.user_role) continue;\n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment existing persona's feedback count\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n      }\n\n      // Process each feedback to extract themes\n      for (const item of feedbackItems) {\n        if (!item.text || !item.user_role) continue;\n        try {\n          // Get theme for this feedback\n          const result = await classifyFeedback(item.text);\n          if (result && result.theme) {\n            // Create or update theme node\n            if (!nodeMap.themes[result.theme]) {\n              const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n              const themeNode = {\n                id: themeId,\n                name: result.theme,\n                type: \"theme\",\n                feedbackCount: 1\n              };\n              newGraph.nodes.push(themeNode);\n              nodeMap.themes[result.theme] = themeNode;\n            } else {\n              // Increment existing theme's feedback count\n              nodeMap.themes[result.theme].feedbackCount += 1;\n            }\n\n            // Create link between persona and theme\n            const personaNode = nodeMap.personas[item.user_role];\n            const themeNode = nodeMap.themes[result.theme];\n            if (personaNode && themeNode) {\n              const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          }\n        } catch (innerError) {\n          console.error(\"Error processing feedback item:\", innerError);\n        }\n      }\n\n      // Generate feature suggestions for top themes\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 3);\n      if (significantThemes.length > 0) {\n        try {\n          // Generate feature ideas based on themes\n          for (const theme of significantThemes) {\n            const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n            const featureNode = {\n              id: featureId,\n              name: `${theme.name} Improvement`,\n              type: \"feature\",\n              priority: theme.feedbackCount >= 4 ? \"High\" : \"Medium\"\n            };\n            newGraph.nodes.push(featureNode);\n            nodeMap.features[featureNode.name] = featureNode;\n\n            // Link feature to theme\n            newGraph.links.push({\n              source: theme.id,\n              target: featureId,\n              strength: 0.8\n            });\n\n            // Link feature to personas that gave feedback on this theme\n            const relatedPersonas = Object.values(nodeMap.personas).filter(persona => {\n              return newGraph.links.some(link => link.source === persona.id && link.target === theme.id || link.source === theme.id && link.target === persona.id);\n            });\n            for (const persona of relatedPersonas) {\n              newGraph.links.push({\n                source: persona.id,\n                target: featureId,\n                strength: 0.6\n              });\n            }\n          }\n        } catch (error) {\n          console.error(\"Error generating features:\", error);\n        }\n      }\n\n      // Update graph data and finish loading\n      setGraphData(newGraph);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback. Please try again.\");\n      setLoading(false);\n    }\n  }, []);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    let newNode;\n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = useCallback(node => {\n    if (!node) return;\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights\n    let insights = {\n      results: []\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role\n          }));\n        }\n      }\n    }\n\n    // Update insights and show panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n\n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === connectionSource.id && targetId === connectionTarget || sourceId === connectionTarget && targetId === connectionSource.id;\n    });\n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n\n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle new feedback submission\n  const handleAddFeedback = useCallback(async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const newFeedbackItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    setFeedbackItems(prev => [...prev, newFeedbackItem]);\n\n    // Process with AI\n    setIsAIProcessing(true);\n    try {\n      const result = await classifyFeedback(newFeedback);\n      if (result && result.theme) {\n        // Process the feedback and update the graph\n\n        // Check if the persona exists\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}`;\n          personaNode = {\n            id: personaId,\n            name: newFeedbackRole,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add persona to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, personaNode],\n            links: [...prev.links]\n          }));\n        } else {\n          // Update persona feedback count\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => node.id === personaNode.id ? {\n              ...node,\n              feedbackCount: (node.feedbackCount || 0) + 1\n            } : node),\n            links: [...prev.links]\n          }));\n        }\n\n        // Check if theme exists\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add theme to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, themeNode],\n            links: [...prev.links,\n            // Add link between persona and theme\n            {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            }]\n          }));\n        } else {\n          // Update theme and check for link\n          const link = graphData.links.find(link => {\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            return sourceId === personaNode.id && targetId === themeNode.id || sourceId === themeNode.id && targetId === personaNode.id;\n          });\n          if (!link) {\n            // Create link if it doesn't exist\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links, {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              }]\n            }));\n          } else {\n            // Just update the theme\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links]\n            }));\n          }\n        }\n      }\n\n      // Reset form\n      setNewFeedback('');\n      setNewFeedbackRole('');\n      setShowFeedbackModal(false);\n    } catch (error) {\n      console.error(\"Error processing feedback:\", error);\n      setAIError(\"Failed to process feedback. Please try again.\");\n    } finally {\n      setIsAIProcessing(false);\n    }\n  }, [newFeedback, newFeedbackRole, graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1354,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1411,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1415,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1416,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1410,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded\",\n            onClick: () => {\n              console.log(\"Import button clicked\");\n              const input = document.createElement('input');\n              input.type = 'file';\n              input.accept = '.json';\n              input.onchange = handleImport;\n              input.click();\n            },\n            children: \"Import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: connectNodes,\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n        style: {\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n          minHeight: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n          style: {\n            minHeight: '500px'\n          },\n          onClick: () => setSelectedNode(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomIn,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomOut,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1556,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: fitToScreen,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"\\u22A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1527,\n        columnNumber: 9\n      }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n        style: {\n          width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n          maxWidth: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n            title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1584,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1583,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 15\n          }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAIInsightsPanel(false),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n            title: \"Close panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1606,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1605,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1600,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 13\n        }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 p-4 overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1615,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1614,\n            columnNumber: 17\n          }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1626,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1627,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 21\n            }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1636,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: feature.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1643,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: feature.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1644,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1639,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1637,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1635,\n              columnNumber: 23\n            }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Personas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1660,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                  children: persona.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1663,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1661,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1659,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 flex justify-between\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1681,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: aiInsights.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1682,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1680,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1679,\n              columnNumber: 21\n            }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1695,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: theme.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1702,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-600\",\n                    children: [theme.feedbackCount || 0, \" feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1703,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1698,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1696,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1694,\n              columnNumber: 23\n            }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Personas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1715,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                  children: persona.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1718,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1716,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1714,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1735,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1736,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1734,\n              columnNumber: 21\n            }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Common Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1745,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: theme.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1752,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-600\",\n                    children: [theme.feedbackCount || 0, \" feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1753,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1748,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1746,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1744,\n              columnNumber: 23\n            }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Relevant Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1765,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: feature.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1772,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: feature.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1773,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1768,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1766,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1764,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-sm text-gray-600 mb-2\",\n              children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1791,\n              columnNumber: 21\n            }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-2 rounded mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: result.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1796,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-500\",\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1797,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 italic\",\n            children: \"No feedback data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1804,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1526,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1824,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1820,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1835,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1838,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1834,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1850,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1858,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1859,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1853,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1849,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1866,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddNode,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1814,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1897,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1900,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1906,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1914,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1916,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1909,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1905,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1924,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1927,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1923,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1939,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleConnectionSubmit,\n            disabled: !connectionTarget,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1950,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1938,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1891,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1890,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1966,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1974,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1970,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1984,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1987,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1983,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1997,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2014,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2013,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2007,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1996,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2022,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1965,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1964,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1368,\n    columnNumber: 5\n  }, this);\n};\n\n// Add this function to handle importing JSON data\n_s(UserResearchNetwork, \"xejvTXBb+UweMsLIlvwZWtqZc7E=\");\n_c = UserResearchNetwork;\nconst handleImport = event => {\n  const file = event.target.files[0];\n  if (!file) return;\n  console.log(\"Loading file:\", file.name);\n  const reader = new FileReader();\n  reader.onload = e => {\n    try {\n      const importedData = JSON.parse(e.target.result);\n      console.log(\"Raw imported data:\", importedData);\n\n      // Handle different possible data structures\n      let processedData;\n      if (importedData.nodes && importedData.links) {\n        // Standard format {nodes: [...], links: [...]}\n        processedData = importedData;\n      } else if (Array.isArray(importedData)) {\n        // Array format - try to determine if it's nodes or feedback items\n        console.log(\"Imported data is an array, attempting to process...\");\n        processedData = {\n          nodes: [],\n          links: []\n        };\n        // Process array data logic here if needed\n      } else {\n        // Unknown format\n        console.error(\"Unrecognized data format:\", importedData);\n        alert(\"Unable to process the imported file. Expected a JSON file with 'nodes' and 'links' properties.\");\n        return;\n      }\n\n      // Ensure nodes have required properties\n      if (processedData.nodes) {\n        processedData.nodes = processedData.nodes.map(node => ({\n          id: node.id || `node-${Math.random().toString(36).substr(2, 9)}`,\n          name: node.name || \"Unnamed Node\",\n          type: [\"theme\", \"feature\", \"persona\"].includes(node.type) ? node.type : \"theme\",\n          feedbackCount: node.type === \"theme\" ? node.feedbackCount || 0 : 0,\n          priority: node.type === \"feature\" ? node.priority || \"Medium\" : undefined,\n          ...node // keep any other properties\n        }));\n      }\n\n      // Log the processed data for debugging\n      console.log(\"Processed data:\", processedData);\n      console.log(`Nodes: ${processedData.nodes.length}, Links: ${processedData.links.length}`);\n\n      // Update the state with the new data\n      setGraphData(processedData);\n\n      // Ensure visualization is redrawn and centered after a short delay\n      setTimeout(() => {\n        console.log(\"Centering view after import\");\n        if (simulationRef.current) simulationRef.current.alpha(1).restart();\n        centerView();\n      }, 500);\n    } catch (error) {\n      console.error(\"Error processing imported data:\", error);\n      alert(\"Error parsing the file. Please ensure it's a valid JSON file.\");\n    }\n  };\n  reader.readAsText(file);\n};\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","UserResearchNetwork","_s","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","graphData","setGraphData","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","showConnectionModal","setShowConnectionModal","showFeedbackModal","setShowFeedbackModal","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","timer","setTimeout","clearTimeout","current","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","length","recalculateFeedbackCounts","cleanupMiniMap","createMiniMap","console","log","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","call","Array","isArray","JSON","parse","stringify","map","link","sourceId","targetId","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","forceCenter","forceCollide","radius","stop","data","enter","find","n","sourceType","targetType","Math","max","node","drag","dragstarted","dragged","dragended","stopPropagation","fx","fy","x","y","handleNodeClick","text","i","tick","active","alphaTarget","restart","zoomIdentity","translate","scale","miniMapSize","min","miniMapMargin","miniMapContainer","miniMapNodes","miniX","random","miniY","miniMapLinks","miniMapSimulation","miniNodes","baseColor","color","brighter","viewportRect","style","pointer","centerX","centerY","transition","duration","feedbackCounts","themes","personas","features","forEach","sourceNode","targetNode","updatedNodes","prevData","importData","file","files","reader","FileReader","onload","e","importedData","result","feedback","transformFeedbackToGraph","validNodes","Date","now","toString","substring","nodeMap","validLinks","warn","filter","tempSimulation","err","readAsText","newGraph","item","user_role","personaId","Object","keys","personaNode","push","theme","themeId","themeNode","linkExists","some","innerError","significantThemes","values","sort","a","b","slice","featureId","featureNode","relatedPersonas","persona","handleAddNode","trim","alert","newNode","connectedLinks","connectedNodeIds","connectedNodes","includes","insights","results","connectedFeatures","connectedPersonas","isFeatureView","connectedThemes","personaFeedback","index","feedbackIndex","handleConnectionSubmit","existingConnection","newLink","connectNodes","targets","exportData","dataStr","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","resetVisualization","confirm","handleAddFeedback","newFeedbackItem","timestamp","toISOString","prev","zoomIn","currentTransform","zoomTransform","k","zoomOut","fitToScreen","minX","Infinity","minY","maxX","maxY","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","toLowerCase","backgroundColor","input","accept","onchange","handleImport","disabled","parseInt","ref","marginRight","minHeight","maxWidth","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","feature","toFixed","step","parseFloat","rows","_c","processedData","substr","undefined","alpha","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n  .domain([\"theme\", \"feature\", \"persona\"])\n  .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n// Initial data structure\nconst initialData = {\n  nodes: [\n    { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n    { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n    { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n    { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n    { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n    { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n  ],\n  links: [\n    { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n    { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n    { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n    { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n  ]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n  \n  // State\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [graphData, setGraphData] = useState(initialData);\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  \n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  \n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  \n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  \n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width > 0) {\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    \n    console.log(\"Rendering with data:\", graphData);\n    console.log(\"Nodes count:\", graphData.nodes.length, \"Links count:\", graphData.links.length);\n    \n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n    \n    // Set up zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    svg.call(zoom);\n    zoomRef.current = zoom;\n    \n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || \n        !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n        graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n    \n    // Deep copy nodes to avoid mutation issues\n    const nodes = JSON.parse(JSON.stringify(graphData.nodes));\n    \n    // Create a proper link objects array with correct references\n    const links = graphData.links.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      // Return a normalized link object\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    \n    console.log(`Working with ${nodes.length} nodes and ${links.length} links`);\n    \n    // Create the force simulation with proper link handling\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink()\n        .id(d => d.id)\n        .links(links)\n        .distance(100)\n        .strength(d => d.strength || 0.5))\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => \n        d.type === \"theme\" ? 20 + (d.feedbackCount / feedbackWeight) : 20\n      ));\n    \n    simulationRef.current = simulation;\n    \n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create the links\n    const link = g.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", d => {\n        // Get the source and target nodes\n        const source = nodes.find(n => n.id === d.source);\n        const target = nodes.find(n => n.id === d.target);\n        \n        if (!source || !target) return \"#999\";\n        \n        const sourceType = source.type;\n        const targetType = target.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        \n        return \"#999\"; // Default gray\n      })\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n    \n    // Create the nodes\n    const node = g.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        \n        if (selectedNode && selectedNode.id === d.id) {\n          // If clicking the same node again, release it\n          d.fx = null;\n          d.fy = null;\n          setSelectedNode(null);\n        } else {\n          // If clicking a new node, fix its position\n          d.fx = d.x;\n          d.fy = d.y;\n          setSelectedNode(d);\n          handleNodeClick(d);\n        }\n      });\n    \n    // Add circles to nodes\n    node.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") return d.priority === \"High\" ? 22 : 20;\n        return 18;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2);\n    \n    // Add labels to nodes\n    node.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return 30 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") return d.priority === \"High\" ? 32 : 30;\n        return 28;\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#333\");\n    \n    // Add title for hover effect\n    node.append(\"title\")\n      .text(d => d.name);\n    \n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n    \n    // Update link positions immediately with node positions from simulation ticks\n    link\n      .attr(\"x1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.y : 0;\n      });\n    \n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => {\n          // Handle both ID and object references\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.y : 0;\n        });\n      \n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      \n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n    \n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(\n      dimensions.width / 2 - dimensions.width * 0.5,\n      dimensions.height / 2 - dimensions.height * 0.5\n    ).scale(0.8));\n    \n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // MiniMap implementation\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current) return () => {};\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9)\n      .attr(\"stroke\", \"#3182CE\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"rx\", 6);\n    \n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    const miniMapLinks = graphData.links.map(link => ({\n      source: typeof link.source === 'object' ? link.source.id : link.source,\n      target: typeof link.target === 'object' ? link.target.id : link.target\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5))\n      .force(\"charge\", d3.forceManyBody().strength(-20))\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(4));\n    \n    // Add mini-map links\n    miniMapContainer.selectAll(\".mini-link\")\n      .data(miniMapLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"mini-link\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3);\n      })\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1);\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 15)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"fill\", \"#2D3748\")\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniMapContainer.selectAll(\".mini-link\")\n      .attr(\"x1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniX : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniY : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniX : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniY : 0;\n      });\n    \n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add click behavior\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Handle import of data\n  const importData = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        console.log(\"Imported data:\", importedData);\n        \n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setFeedbackItems(importedData.feedback);\n          \n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        } \n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          // Normalize and validate the data\n          const validNodes = importedData.nodes.map(node => ({\n            id: node.id || `node-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n            name: node.name || 'Unnamed Node',\n            type: node.type || 'theme',\n            feedbackCount: node.feedbackCount || 0,\n            priority: node.priority || 'Medium',\n            ...node // preserve other properties\n          }));\n          \n          // Create a map of node IDs for quick lookups\n          const nodeMap = {};\n          validNodes.forEach(node => {\n            nodeMap[node.id] = true;\n          });\n          \n          // Normalize links and ensure they reference valid nodes\n          const validLinks = importedData.links\n            .map(link => {\n              // Extract source and target consistently\n              const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n              const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n              \n              // Validate sourceId and targetId\n              if (!sourceId || !targetId) {\n                console.warn('Link missing source or target:', link);\n                return null;\n              }\n              \n              // Create a normalized link\n              return {\n                source: sourceId,\n                target: targetId,\n                strength: link.strength || 0.5\n              };\n            })\n            .filter(link => link !== null && nodeMap[link.source] && nodeMap[link.target]);\n          \n          console.log(`Found ${validLinks.length} valid links out of ${importedData.links.length}`);\n          \n          // Set the validated graph data\n          setGraphData({\n            nodes: validNodes,\n            links: validLinks\n          });\n          \n          // Wait a moment for D3 to process the data\n          setTimeout(() => {\n            setLoading(false);\n            \n            // Pre-compute positions for better layout\n            if (simulationRef.current) {\n              simulationRef.current.stop();\n              \n              // Create a temporary simulation to calculate positions\n              const tempSimulation = d3.forceSimulation(validNodes)\n                .force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100))\n                .force(\"charge\", d3.forceManyBody().strength(-300))\n                .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n                .force(\"collide\", d3.forceCollide(40));\n              \n              // Run 100 ticks synchronously to get a decent layout\n              for (let i = 0; i < 100; i++) {\n                tempSimulation.tick();\n              }\n              \n              tempSimulation.stop();\n            }\n          }, 100);\n        } \n        // Invalid format\n        else {\n          setError(\n            \"Invalid data format. The file should contain either:\" +\n            \"\\n1. A 'feedback' array with user feedback items, or\" +\n            \"\\n2. 'nodes' and 'links' arrays for direct graph data\"\n          );\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  }, [dimensions]);\n\n  // Transform feedback items to graph structure\n  const transformFeedbackToGraph = useCallback(async (feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    \n    try {\n      // Start with an empty graph\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n      \n      // Maps to track created nodes\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        features: {}\n      };\n      \n      // First, create persona nodes\n      for (const item of feedbackItems) {\n        if (!item.user_role) continue;\n        \n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment existing persona's feedback count\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n      }\n      \n      // Process each feedback to extract themes\n      for (const item of feedbackItems) {\n        if (!item.text || !item.user_role) continue;\n        \n        try {\n          // Get theme for this feedback\n          const result = await classifyFeedback(item.text);\n          \n          if (result && result.theme) {\n            // Create or update theme node\n            if (!nodeMap.themes[result.theme]) {\n              const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n              const themeNode = {\n                id: themeId,\n                name: result.theme,\n                type: \"theme\",\n                feedbackCount: 1\n              };\n              \n              newGraph.nodes.push(themeNode);\n              nodeMap.themes[result.theme] = themeNode;\n            } else {\n              // Increment existing theme's feedback count\n              nodeMap.themes[result.theme].feedbackCount += 1;\n            }\n            \n            // Create link between persona and theme\n            const personaNode = nodeMap.personas[item.user_role];\n            const themeNode = nodeMap.themes[result.theme];\n            \n            if (personaNode && themeNode) {\n              const linkExists = newGraph.links.some(link => \n                (link.source === personaNode.id && link.target === themeNode.id) ||\n                (link.source === themeNode.id && link.target === personaNode.id)\n              );\n              \n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          }\n        } catch (innerError) {\n          console.error(\"Error processing feedback item:\", innerError);\n        }\n      }\n      \n      // Generate feature suggestions for top themes\n      const significantThemes = Object.values(nodeMap.themes)\n        .filter(theme => theme.feedbackCount >= 2)\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 3);\n      \n      if (significantThemes.length > 0) {\n        try {\n          // Generate feature ideas based on themes\n          for (const theme of significantThemes) {\n            const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n            const featureNode = {\n              id: featureId,\n              name: `${theme.name} Improvement`,\n              type: \"feature\",\n              priority: theme.feedbackCount >= 4 ? \"High\" : \"Medium\"\n            };\n            \n            newGraph.nodes.push(featureNode);\n            nodeMap.features[featureNode.name] = featureNode;\n            \n            // Link feature to theme\n            newGraph.links.push({\n              source: theme.id,\n              target: featureId,\n              strength: 0.8\n            });\n            \n            // Link feature to personas that gave feedback on this theme\n            const relatedPersonas = Object.values(nodeMap.personas).filter(persona => {\n              return newGraph.links.some(link => \n                (link.source === persona.id && link.target === theme.id) ||\n                (link.source === theme.id && link.target === persona.id)\n              );\n            });\n            \n            for (const persona of relatedPersonas) {\n              newGraph.links.push({\n                source: persona.id,\n                target: featureId,\n                strength: 0.6\n              });\n            }\n          }\n        } catch (error) {\n          console.error(\"Error generating features:\", error);\n        }\n      }\n      \n      // Update graph data and finish loading\n      setGraphData(newGraph);\n      setLoading(false);\n      \n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback. Please try again.\");\n      setLoading(false);\n    }\n  }, []);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    \n    let newNode;\n    \n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    \n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      \n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = useCallback((node) => {\n    if (!node) return;\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights\n    let insights = {\n      results: []\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      \n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find feedback from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => \n          item.user_role === node.name\n        );\n        \n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role\n          }));\n        }\n      }\n    }\n    \n    // Update insights and show panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n    \n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      return (sourceId === connectionSource.id && targetId === connectionTarget) || \n             (sourceId === connectionTarget && targetId === connectionSource.id);\n    });\n    \n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      \n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    \n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n    \n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle new feedback submission\n  const handleAddFeedback = useCallback(async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    // Create a new feedback item\n    const newFeedbackItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add to feedback items\n    setFeedbackItems(prev => [...prev, newFeedbackItem]);\n    \n    // Process with AI\n    setIsAIProcessing(true);\n    try {\n      const result = await classifyFeedback(newFeedback);\n      \n      if (result && result.theme) {\n        // Process the feedback and update the graph\n        \n        // Check if the persona exists\n        let personaNode = graphData.nodes.find(node => \n          node.type === \"persona\" && node.name === newFeedbackRole\n        );\n        \n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}`;\n          personaNode = {\n            id: personaId,\n            name: newFeedbackRole,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          // Add persona to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, personaNode],\n            links: [...prev.links]\n          }));\n        } else {\n          // Update persona feedback count\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => \n              node.id === personaNode.id \n                ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                : node\n            ),\n            links: [...prev.links]\n          }));\n        }\n        \n        // Check if theme exists\n        let themeNode = graphData.nodes.find(node => \n          node.type === \"theme\" && node.name === result.theme\n        );\n        \n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n          \n          // Add theme to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, themeNode],\n            links: [\n              ...prev.links,\n              // Add link between persona and theme\n              {\n                source: personaNode.id,\n                target: themeId,\n                strength: 0.7\n              }\n            ]\n          }));\n        } else {\n          // Update theme and check for link\n          const link = graphData.links.find(link => {\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            \n            return (sourceId === personaNode.id && targetId === themeNode.id) ||\n                   (sourceId === themeNode.id && targetId === personaNode.id);\n          });\n          \n          if (!link) {\n            // Create link if it doesn't exist\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => \n                node.id === themeNode.id \n                  ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                  : node\n              ),\n              links: [\n                ...prev.links,\n                {\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                }\n              ]\n            }));\n          } else {\n            // Just update the theme\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => \n                node.id === themeNode.id \n                  ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                  : node\n              ),\n              links: [...prev.links]\n            }));\n          }\n        }\n      }\n      \n      // Reset form\n      setNewFeedback('');\n      setNewFeedbackRole('');\n      setShowFeedbackModal(false);\n      \n    } catch (error) {\n      console.error(\"Error processing feedback:\", error);\n      setAIError(\"Failed to process feedback. Please try again.\");\n    } finally {\n      setIsAIProcessing(false);\n    }\n  }, [newFeedback, newFeedbackRole, graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  }, []);\n\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      \n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Error screen\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Header and controls */}\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search bar */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <button \n              className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n              onClick={() => {\n                console.log(\"Import button clicked\");\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = '.json';\n                input.onchange = handleImport;\n                input.click();\n              }}\n            >\n              Import\n            </button>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={connectNodes}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main visualization container */}\n      <div className=\"flex flex-1 relative\">\n        <div \n          ref={containerRef} \n          className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n          style={{\n            marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n            minHeight: '500px'\n          }}\n        >\n          <svg \n            ref={svgRef} \n            width=\"100%\" \n            height=\"100%\"\n            className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n            style={{ minHeight: '500px' }}\n            onClick={() => setSelectedNode(null)}\n          />\n          \n          {/* Zoom controls */}\n          <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomIn}\n            >\n              <span className=\"text-xl\">+</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomOut}\n            >\n              <span className=\"text-xl\">-</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={fitToScreen}\n            >\n              <span className=\"text-xl\">⊡</span>\n            </button>\n          </div>\n        </div>\n        \n        {/* AI Insights Panel */}\n        {showAIInsightsPanel && aiInsights && (\n          <div \n            className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n            style={{ \n              width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n              maxWidth: '40%'\n            }}\n          >\n            {/* Collapse/Expand Button */}\n            <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n              <button \n                onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n                title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                    isPanelCollapsed \n                      ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                      : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                  } />\n                </svg>\n              </button>\n              \n              {isPanelCollapsed && (\n                <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona}` : \n                   aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n                </div>\n              )}\n              \n              <button \n                onClick={() => setShowAIInsightsPanel(false)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n                title=\"Close panel\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Panel Content - Only shown when expanded */}\n            {!isPanelCollapsed && (\n              <div className=\"flex-1 p-4 overflow-y-auto\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h2 className=\"text-lg font-bold\">\n                    {aiInsights.isFeatureView ? 'Feature Details' : \n                     aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                     aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                  </h2>\n                </div>\n                \n                {/* Theme View */}\n                {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                  <>\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                    \n                    {/* Connected Features */}\n                    {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedFeatures.map((feature, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                            >\n                              <span>{feature.name}</span>\n                              <span className={`text-xs px-1.5 py-0.5 rounded ${\n                                feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                                feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                                'bg-green-100 text-green-800'\n                              }`}>\n                                {feature.priority}\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Connected Personas */}\n                    {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedPersonas.map((persona, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                            >\n                              {persona.name}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n                \n                {/* Feature View */}\n                {aiInsights.isFeatureView && (\n                  <>\n                    <div className=\"mb-4 flex justify-between\">\n                      <div>\n                        <div className=\"text-sm text-gray-600\">Priority</div>\n                        <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                          aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                          aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-green-100 text-green-800'\n                        }`}>\n                          {aiInsights.priority}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Connected Themes */}\n                    {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedThemes.map((theme, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                            >\n                              <span>{theme.name}</span>\n                              <span className=\"text-xs text-blue-600\">\n                                {theme.feedbackCount || 0} feedback\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Connected Personas */}\n                    {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedPersonas.map((persona, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                            >\n                              {persona.name}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n                \n                {/* Persona View */}\n                {aiInsights.persona && (\n                  <>\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                    \n                    {/* Connected Themes */}\n                    {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Common Themes</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedThemes.map((theme, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                            >\n                              <span>{theme.name}</span>\n                              <span className=\"text-xs text-blue-600\">\n                                {theme.feedbackCount || 0} feedback\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Connected Features */}\n                    {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                      <div className=\"mb-4\">\n                        <div className=\"text-sm text-gray-600 mb-1\">Relevant Features</div>\n                        <div className=\"space-y-1\">\n                          {aiInsights.connectedFeatures.map((feature, index) => (\n                            <div \n                              key={index} \n                              className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                            >\n                              <span>{feature.name}</span>\n                              <span className={`text-xs px-1.5 py-0.5 rounded ${\n                                feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                                feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                                'bg-green-100 text-green-800'\n                              }`}>\n                                {feature.priority}\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n                \n                {/* Feedback Items */}\n                {aiInsights.results && aiInsights.results.length > 0 ? (\n                  <>\n                    <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                      {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                    </h3>\n                    {aiInsights.results.map((result, index) => (\n                      <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                        <div className=\"text-sm\">{result.text}</div>\n                        <div className=\"mt-1 text-xs text-gray-500\">\n                          {result.user_role}\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                ) : (\n                  <div className=\"text-gray-500 italic\">No feedback data available</div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddNode}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleConnectionSubmit}\n                disabled={!connectionTarget}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add this function to handle importing JSON data\nconst handleImport = (event) => {\n  const file = event.target.files[0];\n  if (!file) return;\n\n  console.log(\"Loading file:\", file.name);\n  \n  const reader = new FileReader();\n  reader.onload = (e) => {\n    try {\n      const importedData = JSON.parse(e.target.result);\n      console.log(\"Raw imported data:\", importedData);\n      \n      // Handle different possible data structures\n      let processedData;\n      \n      if (importedData.nodes && importedData.links) {\n        // Standard format {nodes: [...], links: [...]}\n        processedData = importedData;\n      } else if (Array.isArray(importedData)) {\n        // Array format - try to determine if it's nodes or feedback items\n        console.log(\"Imported data is an array, attempting to process...\");\n        processedData = {\n          nodes: [],\n          links: []\n        };\n        // Process array data logic here if needed\n      } else {\n        // Unknown format\n        console.error(\"Unrecognized data format:\", importedData);\n        alert(\"Unable to process the imported file. Expected a JSON file with 'nodes' and 'links' properties.\");\n        return;\n      }\n      \n      // Ensure nodes have required properties\n      if (processedData.nodes) {\n        processedData.nodes = processedData.nodes.map(node => ({\n          id: node.id || `node-${Math.random().toString(36).substr(2, 9)}`,\n          name: node.name || \"Unnamed Node\",\n          type: [\"theme\", \"feature\", \"persona\"].includes(node.type) ? node.type : \"theme\",\n          feedbackCount: node.type === \"theme\" ? (node.feedbackCount || 0) : 0,\n          priority: node.type === \"feature\" ? (node.priority || \"Medium\") : undefined,\n          ...node // keep any other properties\n        }));\n      }\n      \n      // Log the processed data for debugging\n      console.log(\"Processed data:\", processedData);\n      console.log(`Nodes: ${processedData.nodes.length}, Links: ${processedData.links.length}`);\n      \n      // Update the state with the new data\n      setGraphData(processedData);\n      \n      // Ensure visualization is redrawn and centered after a short delay\n      setTimeout(() => {\n        console.log(\"Centering view after import\");\n        if (simulationRef.current) simulationRef.current.alpha(1).restart();\n        centerView();\n      }, 500);\n    } catch (error) {\n      console.error(\"Error processing imported data:\", error);\n      alert(\"Error parsing the file. Please ensure it's a valid JSON file.\");\n    }\n  };\n  reader.readAsText(file);\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}