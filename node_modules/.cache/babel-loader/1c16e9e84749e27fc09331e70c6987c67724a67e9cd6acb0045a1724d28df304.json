{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes).force(\"link\", d3.forceLink(graphData.links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)) // Increased strength\n    .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05)); // Increased strength\n\n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n\n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n\n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n\n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n\n      // Update positions\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n      if (showMiniMap) {\n        // Update mini-map nodes using the refs\n        svg.selectAll(\".mini-node\").attr(\"cx\", d => (d.x || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2).attr(\"cy\", d => (d.y || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2);\n      }\n    });\n\n    // Create links\n    const link = g.append(\"g\").selectAll(\"line\").data(graphData.links).enter().append(\"line\").attr(\"stroke-width\", d => {\n      // Base thickness on strength and feedback weight\n      const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n\n      // If the link connects to a theme, adjust thickness based on feedbackWeight\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (sourceNode && sourceNode.type === \"theme\" || targetNode && targetNode.type === \"theme\") {\n        // Adjust thickness based on feedback weight slider\n        // Higher feedbackWeight means thinner lines (inverse relationship)\n        return baseThickness * (10 / feedbackWeight);\n      }\n      return baseThickness;\n    }).attr(\"stroke\", d => {\n      // Your existing stroke color logic\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (!sourceNode || !targetNode) return \"#999\";\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"theme\" || sourceNode.type === \"theme\" && targetNode.type === \"persona\") {\n        return \"#F59E0B\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"feature\" || sourceNode.type === \"feature\" && targetNode.type === \"persona\") {\n        return \"#10B981\";\n      }\n      return \"#999\";\n    }).attr(\"stroke-opacity\", d => {\n      // Make links more visible based on strength\n      return 0.3 + d.strength * 0.7;\n    }).attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n\n    // Create node groups\n    const nodeGroup = g.append(\"g\").selectAll(\"g\").data(graphData.nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\", dragEnded)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      handleNodeClick(d);\n    });\n\n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 10 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 12;\n        return 10;\n      }\n      return 12;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5);\n\n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\").filter(d => d.type === \"theme\").transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", function repeat() {\n      d3.select(this).transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", repeat);\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return -15 - d.feedbackCount / feedbackWeight;\n      return -15;\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\").attr(\"pointer-events\", \"none\");\n\n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        linkedNodes.add(selectedNode.id);\n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n\n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n\n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n\n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\").attr(\"class\", \"mini-map\").attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n\n      // Add a more visible background\n      miniMap.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"white\").attr(\"stroke\", \"#333\").attr(\"stroke-width\", 2).attr(\"rx\", 4);\n\n      // Add a title to the mini-map\n      miniMap.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", 15).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"font-weight\", \"bold\").text(\"Mini-Map\");\n\n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({\n        x: n.x || 0,\n        y: n.y || 0\n      }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n\n      // Scale for mini-map\n      const miniMapScale = Math.min(miniMapSize / graphWidth, miniMapSize / graphHeight) * 0.9;\n\n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n\n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\").data(graphData.nodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3) // Larger dots\n      .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2).attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2).attr(\"fill\", d => colorScale(d.type));\n\n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\").attr(\"class\", \"viewport\").attr(\"width\", dimensions.width * miniMapScale).attr(\"height\", dimensions.height * miniMapScale).attr(\"x\", dimensions.width / 2 * miniMapScale - dimensions.width * miniMapScale / 2 + miniMapSize / 2).attr(\"y\", dimensions.height / 2 * miniMapScale - dimensions.height * miniMapScale / 2 + miniMapSize / 2).attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n      .attr(\"stroke\", \"#3b82f6\").attr(\"stroke-width\", 2);\n\n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect.attr(\"width\", dimensions.width * miniMapScale / transform.k).attr(\"height\", dimensions.height * miniMapScale / transform.k).attr(\"x\", -transform.x * miniMapScale / transform.k + miniMapSize / 2).attr(\"y\", -transform.y * miniMapScale / transform.k + miniMapSize / 2);\n      });\n\n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", event => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity.translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty).scale(1));\n      });\n\n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n\n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n\n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n\n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n\n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n\n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n\n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n\n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n\n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    console.log(\"Persona counts:\", personaCounts); // Debug log\n\n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n\n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id).map(link => {\n          const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n          return connectedNodeId;\n        });\n        const connectedThemes = graphData.nodes.filter(n => n.type === \"theme\" && connectedThemeIds.includes(n.id));\n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => sum + (themeCounts[theme.name] || 0), 0);\n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      return node;\n    });\n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n\n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n\n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n\n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n\n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n\n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n\n      // Group feedback by theme\n      const feedbackByTheme = {};\n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n\n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        feedbackByTheme[theme].push(item);\n      });\n\n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n\n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => item.text.toLowerCase().includes(theme.name.toLowerCase()));\n        relatedFeedback.push(...themeFeedback);\n      });\n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    setIsAIProcessing(true);\n    setAIError(null);\n\n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n\n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n\n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n\n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n\n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n\n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n\n      // Extract simple keywords\n      const keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n\n    // Create a copy of the current graph data\n    const updatedGraphData = {\n      ...graphData\n    };\n\n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n\n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n\n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => node.type === \"persona\" && node.name === feedback.user_role);\n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n\n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => link.source === themeNode.id && link.target === personaNode.id || link.source === personaNode.id && link.target === themeNode.id);\n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n\n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1521,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1520,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1532,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1529,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer flex items-center\",\n              onClick: () => handleSearchResultClick(result),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 rounded-full mr-2\",\n                style: {\n                  backgroundColor: colorScale(result.type)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1579,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1584,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: result.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1585,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1574,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1572,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              onChange: importData,\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1606,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: resetVisualization,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: [isSimulationRunning ? 'Pause' : 'Resume', \" Simulation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setShowMiniMap(!showMiniMap),\n            children: [showMiniMap ? 'Hide' : 'Show', \" Mini-Map\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1665,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-orange-600 text-white rounded hover:bg-orange-700 text-sm\",\n            onClick: () => {\n              if (selectedNode) {\n                initiateConnection(selectedNode);\n              } else {\n                alert(\"Please select a node first\");\n              }\n            },\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 w-48\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: feedbackWeight,\n              onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1695,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1 min-w-[60px]\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-2 w-12 bg-gray-300 rounded-full relative\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute top-0 left-0 h-2 bg-blue-500 rounded-full\",\n                  style: {\n                    width: `${feedbackWeight / 10 * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1705,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1704,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs font-medium\",\n                children: feedbackWeight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1710,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1703,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('none'),\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('themes'),\n              children: \"Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1724,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('features'),\n              children: \"Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1730,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('personas'),\n              children: \"Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1717,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1544,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1747,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomIn,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1770,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1769,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomOut,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M18 12H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1778,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1777,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1773,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: centerView,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1785,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1781,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1794,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Feedback Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1795,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1798,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Feature Ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1799,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-orange-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1802,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"User Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1803,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1806,\n          columnNumber: 11\n        }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 px-4 py-2 rounded-md flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: selectedNode.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1811,\n              columnNumber: 17\n            }, this), selectedNode.type === 'theme' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" (\", selectedNode.feedbackCount, \" feedbacks)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1813,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1810,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 px-2 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-xs\",\n            onClick: () => focusOnNode(selectedNode),\n            children: \"Focus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 px-2 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-xs\",\n            onClick: connectNodes,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1822,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1809,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1792,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1791,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: modalType === 'theme' ? 'Add New Feedback Theme' : 'Add New Feature Idea'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1837,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1842,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1845,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1841,\n          columnNumber: 13\n        }, this), modalType === 'theme' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1855,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"100\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(Number(e.target.value)),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1858,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1854,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1869,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1877,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1878,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1879,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1872,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1868,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1885,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleModalSubmit,\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1891,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1835,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Create Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1906,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"From: \", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1909,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1908,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: availableTargets.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: node.id,\n              children: [node.name, \" (\", node.type, \")\"]\n            }, node.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1924,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1918,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1932,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(Number(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Weak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1945,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Strong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1946,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1944,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowConnectionModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1951,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConnectionSubmit,\n            className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1957,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1950,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1905,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1904,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomIn,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1975,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1974,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1970,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomOut,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M18 12H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1983,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1982,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1978,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: centerView,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1991,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1990,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1986,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1969,\n      columnNumber: 7\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2000,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2003,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            rows: \"4\",\n            placeholder: \"Enter user feedback here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2006,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2002,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2016,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            placeholder: \"e.g., Product Manager, Developer, etc.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2019,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2015,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFeedbackModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            disabled: isAIProcessing,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2029,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFeedbackSubmit,\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\",\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2044,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2045,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2043,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true) : 'Add Feedback'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2036,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2028,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2056,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1999,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1998,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex border-l border-gray-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2081,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2080,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2090,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2097,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2074,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2111,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2124,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2122,\n            columnNumber: 19\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2130,\n              columnNumber: 23\n            }, this), aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 p-2 rounded mb-2 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: feature.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2133,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: [Math.round(feature.connectionStrength * 100), \"% match\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2134,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2132,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2129,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"User Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2145,\n              columnNumber: 23\n            }, this), aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-2 rounded mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: persona.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2148,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2147,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2161,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2162,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2160,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2171,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2172,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2170,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2159,\n            columnNumber: 19\n          }, this), aiInsights.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2181,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: aiInsights.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2182,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2180,\n            columnNumber: 21\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2188,\n              columnNumber: 23\n            }, this), aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: theme.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2191,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500\",\n                children: [Math.round(theme.connectionStrength * 100), \"% match\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2192,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2190,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2187,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"User Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2202,\n              columnNumber: 23\n            }, this), aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-2 rounded mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: persona.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2205,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2204,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2201,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2218,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2216,\n            columnNumber: 19\n          }, this), aiInsights.themeBreakdown && aiInsights.themeBreakdown.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Feedback Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2226,\n              columnNumber: 23\n            }, this), aiInsights.themeBreakdown.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: item.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2229,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs bg-blue-200 px-2 py-1 rounded-full\",\n                children: [item.count, \" items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2230,\n                columnNumber: 27\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2228,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2225,\n            columnNumber: 21\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2240,\n              columnNumber: 23\n            }, this), aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-2 rounded mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: theme.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2243,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2242,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2239,\n            columnNumber: 21\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2251,\n              columnNumber: 23\n            }, this), aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 p-2 rounded mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: feature.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2254,\n                columnNumber: 27\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2253,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2250,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.newThemes && aiInsights.newThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: \"New Themes Identified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2265,\n            columnNumber: 19\n          }, this), aiInsights.newThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: theme.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2268,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-600\",\n              children: theme.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2269,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2267,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2264,\n          columnNumber: 17\n        }, this), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2278,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [result.text && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm mb-1 italic\",\n              children: [\"\\\"\", result.text, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2284,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium\",\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2287,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text-xs px-2 py-1 rounded ${result.sentiment === 'positive' ? 'bg-green-100 text-green-800' : result.sentiment === 'negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n                children: result.sentiment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2288,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2286,\n              columnNumber: 23\n            }, this), result.user_role && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-600 mt-1\",\n              children: [\"From: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2298,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2297,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-600 mt-1\",\n              children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [result.priority, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2302,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2301,\n              columnNumber: 23\n            }, this), result.keywords && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-1 mt-1\",\n              children: result.keywords.map((keyword, kidx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs bg-gray-200 px-1 rounded\",\n                children: keyword\n              }, kidx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2307,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2305,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2282,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2317,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2066,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1543,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"+oQT8OObBONAZEvyWxQjmj1Olr4=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","event","file","files","reader","FileReader","onload","e","importedData","parse","result","err","readAsText","importSimplifiedData","feedback","Array","isArray","processFeedbackBatch","current","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","padding","forEach","node","x","y","fx","fy","Math","random","tick","vx","vy","link","nodeGroup","data","enter","baseThickness","sourceNode","find","n","targetNode","isNew","drag","dragStarted","dragged","dragEnded","stopPropagation","handleNodeClick","filter","transition","duration","repeat","text","linkedNodes","Set","l","add","sourceId","targetId","has","active","alphaTarget","restart","stop","miniMapSize","min","miniMapMargin","miniMap","nodePositions","map","xExtent","extent","yExtent","graphWidth","max","graphHeight","miniMapScale","viewportRect","zoomTransform","k","pointer","tx","ty","zoomIdentity","translate","scale","console","log","centerView","fitToScreen","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","clearTimeout","addTheme","length","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","push","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","zoomIn","currentTransform","zoomOut","centerX","centerY","initiateConnection","handleSearchResultClick","recalculateFeedbackCounts","themeCounts","personaCounts","item","user_role","theme","results","existingInsight","feedbackIndex","toLowerCase","updatedNodes","connectedThemeIds","connectedNodeId","connectedThemes","totalFeedbackCount","reduce","sum","togglePanelCollapse","minX","Infinity","minY","maxX","maxY","contentWidth","contentHeight","existingThemes","classificationResult","mockClassifyFeedback","updateGraphWithClassification","relatedFeedback","connections","connectedNodes","connectedNode","themeInsights","connectedFeatures","connectedPersonas","index","sentiment","keywords","split","word","replace","slice","personaFeedback","actualFeedbackCount","feedbackByTheme","personaInsights","persona","themeBreakdown","Object","keys","count","themeFeedback","featureInsights","feature","description","t","join","isFeatureView","focusOnNode","handleFeedbackSubmit","trim","newItem","Date","now","timestamp","toISOString","updatedFeedbackItems","some","Promise","resolve","themeNode","newThemes","updatedGraphData","personaNode","existingLink","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","style","backgroundColor","accept","parseInt","ref","marginRight","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Number","step","rows","disabled","cx","cy","r","maxWidth","title","round","keyword","kidx","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes)\n      .force(\"link\", d3.forceLink(graphData.links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)) // Increased strength\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05)); // Increased strength\n    \n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n      \n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n    \n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n      \n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n      \n      // Update positions\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n      \n      if (showMiniMap) {\n        // Update mini-map nodes using the refs\n        svg.selectAll(\".mini-node\")\n          .attr(\"cx\", d => (d.x || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2)\n          .attr(\"cy\", d => (d.y || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2);\n      }\n    });\n    \n    // Create links\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(graphData.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", d => {\n        // Base thickness on strength and feedback weight\n        const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n        \n        // If the link connects to a theme, adjust thickness based on feedbackWeight\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if ((sourceNode && sourceNode.type === \"theme\") || (targetNode && targetNode.type === \"theme\")) {\n          // Adjust thickness based on feedback weight slider\n          // Higher feedbackWeight means thinner lines (inverse relationship)\n          return baseThickness * (10 / feedbackWeight);\n        }\n        \n        return baseThickness;\n      })\n      .attr(\"stroke\", d => {\n        // Your existing stroke color logic\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if (!sourceNode || !targetNode) return \"#999\";\n        \n        if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n          return \"#6366F1\";\n        } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n          return \"#6366F1\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"theme\") ||\n                   (sourceNode.type === \"theme\" && targetNode.type === \"persona\")) {\n          return \"#F59E0B\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"feature\") ||\n                   (sourceNode.type === \"feature\" && targetNode.type === \"persona\")) {\n          return \"#10B981\";\n        }\n        \n        return \"#999\";\n      })\n      .attr(\"stroke-opacity\", d => {\n        // Make links more visible based on strength\n        return 0.3 + (d.strength * 0.7);\n      })\n      .attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n    \n    // Create node groups\n    const nodeGroup = g.append(\"g\")\n      .selectAll(\"g\")\n      .data(graphData.nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragStarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragEnded)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        handleNodeClick(d);\n      });\n    \n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 10 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 12;\n          return 10;\n        }\n        return 12;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5);\n    \n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\")\n      .filter(d => d.type === \"theme\")\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n      .on(\"end\", function repeat() {\n        d3.select(this)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n          .on(\"end\", repeat);\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return -15 - (d.feedbackCount / feedbackWeight);\n        return -15;\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#333\")\n      .attr(\"pointer-events\", \"none\");\n    \n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      \n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        \n        linkedNodes.add(selectedNode.id);\n        \n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        \n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n    \n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n      \n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n      \n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\")\n        .attr(\"class\", \"mini-map\")\n        .attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n      \n      // Add a more visible background\n      miniMap.append(\"rect\")\n        .attr(\"width\", miniMapSize)\n        .attr(\"height\", miniMapSize)\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"rx\", 4);\n      \n      // Add a title to the mini-map\n      miniMap.append(\"text\")\n        .attr(\"x\", miniMapSize / 2)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"font-weight\", \"bold\")\n        .text(\"Mini-Map\");\n      \n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({ x: n.x || 0, y: n.y || 0 }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      \n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n      \n      // Scale for mini-map\n      const miniMapScale = Math.min(\n        miniMapSize / graphWidth,\n        miniMapSize / graphHeight\n      ) * 0.9;\n      \n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n      \n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\")\n        .data(graphData.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"mini-node\")\n        .attr(\"r\", 3) // Larger dots\n        .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"fill\", d => colorScale(d.type));\n      \n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\")\n        .attr(\"class\", \"viewport\")\n        .attr(\"width\", dimensions.width * miniMapScale)\n        .attr(\"height\", dimensions.height * miniMapScale)\n        .attr(\"x\", (dimensions.width / 2) * miniMapScale - (dimensions.width * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"y\", (dimensions.height / 2) * miniMapScale - (dimensions.height * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n        .attr(\"stroke\", \"#3b82f6\")\n        .attr(\"stroke-width\", 2);\n      \n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect\n          .attr(\"width\", dimensions.width * miniMapScale / transform.k)\n          .attr(\"height\", dimensions.height * miniMapScale / transform.k)\n          .attr(\"x\", (-transform.x * miniMapScale / transform.k) + miniMapSize / 2)\n          .attr(\"y\", (-transform.y * miniMapScale / transform.k) + miniMapSize / 2);\n      });\n      \n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", (event) => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        \n        svg.transition()\n          .duration(500)\n          .call(\n            zoomRef.current.transform,\n            d3.zoomIdentity\n              .translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty)\n              .scale(1)\n          );\n      });\n      \n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n    \n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n    \n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n    \n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n    \n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n      \n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => \n          feedbackItems[result.feedbackIndex] && \n          feedbackItems[result.feedbackIndex].id === item.id\n        );\n        \n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n      \n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n      \n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    \n    console.log(\"Persona counts:\", personaCounts); // Debug log\n    \n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      \n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n      \n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links\n          .filter(link => (link.source.id === node.id || link.target.id === node.id))\n          .map(link => {\n            const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n            return connectedNodeId;\n          });\n        \n        const connectedThemes = graphData.nodes.filter(n => \n          n.type === \"theme\" && connectedThemeIds.includes(n.id)\n        );\n        \n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => \n          sum + (themeCounts[theme.name] || 0), 0\n        );\n        \n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      \n      return node;\n    });\n    \n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n      \n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n      \n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      \n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n    \n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n      \n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n      \n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n      \n      // Group feedback by theme\n      const feedbackByTheme = {};\n      \n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n        \n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => \n            feedbackItems[result.feedbackIndex] && \n            feedbackItems[result.feedbackIndex].id === item.id\n          );\n          \n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        \n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        \n        feedbackByTheme[theme].push(item);\n      });\n      \n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      \n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => \n          item.text.toLowerCase().includes(theme.name.toLowerCase())\n        );\n        relatedFeedback.push(...themeFeedback);\n      });\n      \n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    \n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n      \n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        return node;\n      });\n      \n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n      \n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      \n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n      \n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n      \n      // Extract simple keywords\n      const keywords = item.text.split(' ')\n        .filter(word => word.length > 3)\n        .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n        .slice(0, 3);\n      \n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    \n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n    \n    // Create a copy of the current graph data\n    const updatedGraphData = { ...graphData };\n    \n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n      \n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => \n        node.type === \"theme\" && node.name === result.theme\n      );\n      \n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n      \n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => \n        node.type === \"persona\" && node.name === feedback.user_role\n      );\n      \n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n      \n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => \n        (link.source === themeNode.id && link.target === personaNode.id) ||\n        (link.source === personaNode.id && link.target === themeNode.id)\n      );\n      \n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n    \n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index} \n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer flex items-center\"\n                    onClick={() => handleSearchResultClick(result)}\n                  >\n                    <div \n                      className=\"w-3 h-3 rounded-full mr-2\" \n                      style={{ backgroundColor: colorScale(result.type) }}\n                    ></div>\n                    <div>\n                      <div className=\"font-medium\">{result.name}</div>\n                      <div className=\"text-xs text-gray-500\">{result.type}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          {/* Data Management Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Data</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                onChange={importData} \n                className=\"hidden\"\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={resetVisualization}\n            >\n              Reset\n            </button>\n          </div>\n          \n          {/* Visualization Controls Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">View</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause' : 'Resume'} Simulation\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setShowMiniMap(!showMiniMap)}\n            >\n              {showMiniMap ? 'Hide' : 'Show'} Mini-Map\n            </button>\n          </div>\n          \n          {/* Add Content Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Add</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n          \n          {/* Connect Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Connect</span>\n            <button \n              className=\"px-3 py-1 bg-orange-600 text-white rounded hover:bg-orange-700 text-sm\"\n              onClick={() => {\n                if (selectedNode) {\n                  initiateConnection(selectedNode);\n                } else {\n                  alert(\"Please select a node first\");\n                }\n              }}\n            >\n              Connect Nodes\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4 mt-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium\">Feedback Weight:</span>\n            <div className=\"flex items-center gap-2 w-48\">\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={feedbackWeight}\n                onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n                className=\"w-full\"\n              />\n              <div className=\"flex items-center gap-1 min-w-[60px]\">\n                <div className=\"h-2 w-12 bg-gray-300 rounded-full relative\">\n                  <div \n                    className=\"absolute top-0 left-0 h-2 bg-blue-500 rounded-full\" \n                    style={{ width: `${(feedbackWeight / 10) * 100}%` }}\n                  ></div>\n                </div>\n                <span className=\"text-xs font-medium\">{feedbackWeight}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium\">Highlight:</span>\n            <div className=\"flex gap-1\">\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('none')}\n              >\n                None\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('themes')}\n              >\n                Themes\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('features')}\n              >\n                Features\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('personas')}\n              >\n                Personas\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Zoom Controls - Keep these at the bottom right */}\n      <div className=\"absolute bottom-4 right-4 flex gap-2\">\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomIn}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomOut}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 12H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={centerView}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n          </svg>\n        </button>\n      </div>\n      \n      <div className=\"bg-white p-4 shadow-md mt-4\">\n        <div className=\"flex flex-wrap gap-8\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-blue-600\"></div>\n            <span className=\"text-sm\">Feedback Themes</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-green-600\"></div>\n            <span className=\"text-sm\">Feature Ideas</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-orange-600\"></div>\n            <span className=\"text-sm\">User Personas</span>\n          </div>\n          \n          <div className=\"flex-1\"></div>\n          \n          {selectedNode && (\n            <div className=\"bg-gray-100 px-4 py-2 rounded-md flex items-center\">\n              <div>\n                <span className=\"font-medium\">{selectedNode.name}</span>\n                {selectedNode.type === 'theme' && (\n                  <span> ({selectedNode.feedbackCount} feedbacks)</span>\n                )}\n              </div>\n              <button\n                className=\"ml-2 px-2 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-xs\"\n                onClick={() => focusOnNode(selectedNode)}\n              >\n                Focus\n              </button>\n              <button\n                className=\"ml-2 px-2 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-xs\"\n                onClick={connectNodes}\n              >\n                Connect\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Modal for adding new nodes */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              {modalType === 'theme' ? 'Add New Feedback Theme' : 'Add New Feature Idea'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              />\n            </div>\n            \n            {modalType === 'theme' ? (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"100\"\n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(Number(e.target.value))}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n            ) : (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select\n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleModalSubmit}\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal for creating connections */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">Create Connection</h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From: {connectionSource?.name} ({connectionSource?.type})\n              </label>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To:\n              </label>\n              <select\n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              >\n                {availableTargets.map(node => (\n                  <option key={node.id} value={node.id}>\n                    {node.name} ({node.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength}\n              </label>\n              <input\n                type=\"range\"\n                min=\"0.1\"\n                max=\"1\"\n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(Number(e.target.value))}\n                className=\"w-full\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>Weak</span>\n                <span>Strong</span>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowConnectionModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConnectionSubmit}\n                className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add these buttons to your UI */}\n      <div className=\"absolute bottom-4 right-4 flex gap-2\">\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomIn}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomOut}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 12H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={centerView}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n          </svg>\n        </button>\n      </div>\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">Add New Feedback</h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea\n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                rows=\"4\"\n                placeholder=\"Enter user feedback here...\"\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input\n                type=\"text\"\n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                placeholder=\"e.g., Product Manager, Developer, etc.\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowFeedbackModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n                disabled={isAIProcessing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleFeedbackSubmit}\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing...\n                  </>\n                ) : (\n                  'Add Feedback'\n                )}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex border-l border-gray-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">{aiInsights.feedbackCount || 0}</div>\n                  </div>\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      {aiInsights.connectedFeatures.map((feature, index) => (\n                        <div key={index} className=\"bg-green-50 p-2 rounded mb-2 flex justify-between items-center\">\n                          <div className=\"font-medium\">{feature.name}</div>\n                          <div className=\"text-xs text-gray-500\">\n                            {Math.round(feature.connectionStrength * 100)}% match\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">User Roles</div>\n                      {aiInsights.connectedPersonas.map((persona, index) => (\n                        <div key={index} className=\"bg-orange-50 p-2 rounded mb-2\">\n                          <div className=\"font-medium\">{persona.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {aiInsights.description && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600\">Description</div>\n                      <div className=\"text-sm\">{aiInsights.description}</div>\n                    </div>\n                  )}\n                  \n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      {aiInsights.connectedThemes.map((theme, index) => (\n                        <div key={index} className=\"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\">\n                          <div className=\"font-medium\">{theme.name}</div>\n                          <div className=\"text-xs text-gray-500\">\n                            {Math.round(theme.connectionStrength * 100)}% match\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">User Roles</div>\n                      {aiInsights.connectedPersonas.map((persona, index) => (\n                        <div key={index} className=\"bg-orange-50 p-2 rounded mb-2\">\n                          <div className=\"font-medium\">{persona.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {aiInsights.themeBreakdown && aiInsights.themeBreakdown.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Feedback Themes</div>\n                      {aiInsights.themeBreakdown.map((item, index) => (\n                        <div key={index} className=\"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\">\n                          <div className=\"font-medium\">{item.theme}</div>\n                          <div className=\"text-xs bg-blue-200 px-2 py-1 rounded-full\">\n                            {item.count} items\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      {aiInsights.connectedThemes.map((theme, index) => (\n                        <div key={index} className=\"bg-blue-50 p-2 rounded mb-2\">\n                          <div className=\"font-medium\">{theme.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      {aiInsights.connectedFeatures.map((feature, index) => (\n                        <div key={index} className=\"bg-green-50 p-2 rounded mb-2\">\n                          <div className=\"font-medium\">{feature.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* New Themes Section */}\n              {aiInsights.newThemes && aiInsights.newThemes.length > 0 && (\n                <div className=\"mb-4\">\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">New Themes Identified</h3>\n                  {aiInsights.newThemes.map((theme, index) => (\n                    <div key={index} className=\"bg-blue-50 p-2 rounded mb-2\">\n                      <div className=\"font-medium\">{theme.name}</div>\n                      <div className=\"text-xs text-gray-600\">{theme.description}</div>\n                    </div>\n                  ))}\n                </div>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      {result.text && (\n                        <div className=\"text-sm mb-1 italic\">\"{result.text}\"</div>\n                      )}\n                      <div className=\"flex justify-between\">\n                        <div className=\"font-medium\">{result.theme}</div>\n                        <div className={`text-xs px-2 py-1 rounded ${\n                          result.sentiment === 'positive' ? 'bg-green-100 text-green-800' : \n                          result.sentiment === 'negative' ? 'bg-red-100 text-red-800' : \n                          'bg-gray-100 text-gray-800'\n                        }`}>\n                          {result.sentiment}\n                        </div>\n                      </div>\n                      {result.user_role && (\n                        <div className=\"text-xs text-gray-600 mt-1\">\n                          From: <span className=\"font-medium\">{result.user_role}</span>\n                        </div>\n                      )}\n                      <div className=\"text-xs text-gray-600 mt-1\">\n                        Priority: <span className=\"font-medium\">{result.priority}/10</span>\n                      </div>\n                      {result.keywords && (\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\n                          {result.keywords.map((keyword, kidx) => (\n                            <span key={kidx} className=\"text-xs bg-gray-200 px-1 rounded\">\n                              {keyword}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}