{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n\n  // IMPORTANT: Define recalculateFeedbackCounts using useCallback to avoid reference issues\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceNode = graphData.nodes.find(n => n.id === (typeof link.source === 'object' ? link.source.id : link.source));\n      const targetNode = graphData.nodes.find(n => n.id === (typeof link.target === 'object' ? link.target.id : link.target));\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n\n      // Update the mini-map viewport to show the current view\n      if (showMiniMap) {\n        const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n        const viewportRect = svg.select(\".mini-map-viewport\");\n        if (!viewportRect.empty()) {\n          const {\n            x,\n            y,\n            k\n          } = event.transform;\n\n          // Calculate the viewport rectangle in the mini-map\n          const vpWidth = miniMapSize / k;\n          const vpHeight = miniMapSize / k;\n          const vpX = -x / dimensions.width * miniMapSize;\n          const vpY = -y / dimensions.height * miniMapSize;\n\n          // Update the viewport rectangle\n          viewportRect.attr(\"x\", Math.max(0, vpX)).attr(\"y\", Math.max(0, vpY)).attr(\"width\", Math.min(miniMapSize, vpWidth)).attr(\"height\", Math.min(miniMapSize, vpHeight));\n        }\n      }\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n\n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n\n    // Create links\n    const linkElements = g.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"stroke\", d => {\n      // Determine color based on the types of nodes being connected\n      const sourceNode = nodeMap[d.source];\n      const targetNode = nodeMap[d.target];\n      if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n\n      const sourceType = sourceNode.type;\n      const targetType = targetNode.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n\n      return \"#CBD5E0\"; // Default gray\n    }).attr(\"stroke-width\", d => Math.max(1, d.strength * 3)).attr(\"stroke-opacity\", 0.6).attr(\"data-source\", d => d.source).attr(\"data-target\", d => d.target);\n\n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").attr(\"data-id\", d => d.id).attr(\"data-type\", d => d.type).call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n\n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(d => 150 / (d.strength || 0.5)).strength(d => d.strength || 0.5)).force(\"charge\", d3.forceManyBody().strength(d => {\n      // Adjust repulsion force based on node type\n      if (d.type === \"theme\") return -300;\n      if (d.type === \"feature\") return -200;\n      if (d.type === \"persona\") return -250;\n      if (d.type === \"feedback\") return -100;\n      return -150;\n    })).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)).force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05)).force(\"collision\", d3.forceCollide().radius(d => {\n      // Adjust collision radius based on node type\n      if (d.type === \"theme\") return 60;\n      if (d.type === \"feature\") return 50;\n      if (d.type === \"persona\") return 45;\n      if (d.type === \"feedback\") return 30;\n      return 40;\n    })).alphaTarget(0).alphaDecay(0.05); // Slower decay for more stable layout\n\n    // Add a tick event handler\n    simulation.on(\"tick\", () => {\n      // Update link positions\n      linkElements.attr(\"x1\", d => {\n        const source = nodeMap[d.source];\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const source = nodeMap[d.source];\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const target = nodeMap[d.target];\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const target = nodeMap[d.target];\n        return target ? target.y : 0;\n      });\n\n      // Update node positions\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Fix the shaking issue by properly handling node selection\n    nodeGroup.on(\"click\", (event, d) => {\n      event.stopPropagation(); // Prevent event bubbling\n\n      // Fix the position of the selected node to prevent shaking\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        handleNodeClick(d);\n      }\n\n      // Highlight connected nodes and links\n      highlightConnections(d);\n    });\n\n    // Add a click handler to the background to clear selection\n    svg.on(\"click\", () => {\n      // Clear selection when clicking the background\n      if (selectedNode) {\n        // Find the node in the simulation and release it\n        const node = nodes.find(n => n.id === selectedNode.id);\n        if (node) {\n          node.fx = null;\n          node.fy = null;\n        }\n        setSelectedNode(null);\n\n        // Clear highlights\n        d3.selectAll(\".node\").classed(\"dimmed\", false);\n        d3.selectAll(\".link\").classed(\"dimmed\", false);\n        d3.selectAll(\".node\").classed(\"highlighted\", false);\n        d3.selectAll(\".link\").classed(\"highlighted\", false);\n      }\n    });\n\n    // Function to highlight connections\n    function highlightConnections(node) {\n      // Reset all nodes and links\n      d3.selectAll(\".node\").classed(\"dimmed\", true);\n      d3.selectAll(\".link\").classed(\"dimmed\", true);\n      d3.selectAll(\".node\").classed(\"highlighted\", false);\n      d3.selectAll(\".link\").classed(\"highlighted\", false);\n\n      // Highlight the selected node\n      d3.select(`.node[data-id=\"${node.id}\"]`).classed(\"dimmed\", false).classed(\"highlighted\", true);\n\n      // Find connected links and nodes\n      const connectedLinks = links.filter(link => link.source === node.id || link.target === node.id || typeof link.source === 'object' && link.source.id === node.id || typeof link.target === 'object' && link.target.id === node.id);\n\n      // Highlight connected links\n      connectedLinks.forEach(link => {\n        d3.select(`line[data-source=\"${link.source}\"][data-target=\"${link.target}\"]`).classed(\"dimmed\", false).classed(\"highlighted\", true);\n\n        // Highlight connected nodes\n        const connectedNodeId = link.source === node.id ? link.target : link.source;\n        d3.select(`.node[data-id=\"${connectedNodeId}\"]`).classed(\"dimmed\", false).classed(\"highlighted\", true);\n      });\n    }\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Add CSS for highlighting\n    const style = document.createElement('style');\n    style.textContent = `\n      .node.dimmed { opacity: 0.3; }\n      .link.dimmed { opacity: 0.1; }\n      .node.highlighted { opacity: 1; }\n      .link.highlighted { opacity: 1; stroke-width: 3px; }\n    `;\n    document.head.appendChild(style);\n\n    // Stop the simulation when component unmounts\n    return () => {\n      simulation.stop();\n      document.head.removeChild(style);\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode, selectedNode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Update the importData function to handle both formats\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        }\n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        }\n        // Invalid format\n        else {\n          setError(\"Invalid data format. The file should contain either:\" + \"\\n1. A 'feedback' array with user feedback items, or\" + \"\\n2. 'nodes' and 'links' arrays for direct graph data\");\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    setIsAIProcessing(true);\n    setAIError(null);\n    try {\n      // Process each feedback item\n      const results = [];\n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n\n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      setAIInsights(updatedInsights);\n\n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === item.user_role);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n\n        // Find the result for this item\n        const result = results.find(r => r.text === item.text && r.user_role === item.user_role);\n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n\n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n\n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n\n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = node => {\n    if (!node) return;\n\n    // Set the selected node\n    setSelectedNode(node);\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => link.source === node.id || link.target === node.id || typeof link.source === 'object' && link.source.id === node.id || typeof link.target === 'object' && link.target.id === node.id);\n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => result.theme === node.name);\n      }\n\n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text)).then(ideas => {\n          if (ideas && ideas.length > 0) {\n            setAIInsights(prev => ({\n              ...prev,\n              featureIdeas: ideas\n            }));\n          }\n        }).catch(error => {\n          console.error(\"Error generating feature ideas:\", error);\n        });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => {\n            var _aiInsights$results, _aiInsights$results$f;\n            return {\n              feedbackIndex: index,\n              text: item.text,\n              user_role: item.user_role,\n              theme: (aiInsights === null || aiInsights === void 0 ? void 0 : (_aiInsights$results = aiInsights.results) === null || _aiInsights$results === void 0 ? void 0 : (_aiInsights$results$f = _aiInsights$results.find(r => r.text === item.text)) === null || _aiInsights$results$f === void 0 ? void 0 : _aiInsights$results$f.theme) || \"Unknown\"\n            };\n          });\n        }\n      }\n    }\n\n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n\n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n\n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n\n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n\n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n\n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n\n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id,\n            // Use ID reference instead of object\n            target: themeId,\n            // Use ID reference instead of object\n            strength: 0.7\n          };\n\n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n\n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id,\n              // Use ID reference instead of object\n              target: themeNode.id,\n              // Use ID reference instead of object\n              strength: 0.7\n            };\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n\n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...((aiInsights === null || aiInsights === void 0 ? void 0 : aiInsights.results) || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n\n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n\n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9) // Semi-transparent background\n    .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n    .attr(\"stroke-width\", 2) // Thicker border\n    .attr(\"rx\", 6); // Rounded corners\n\n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n    .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n    .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n    .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n\n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n\n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n\n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 4.5) // Even larger radius for better visibility\n    .attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3); // Brighter colors\n    }).attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n    .attr(\"stroke-width\", 1.5); // Thicker stroke\n\n    // Add a label with better visibility\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 20).attr(\"font-size\", \"14px\") // Larger font\n    .attr(\"font-weight\", \"bold\") // Bold text\n    .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n    .text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) {\n      // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", miniMapSize - 12).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"11px\").attr(\"font-weight\", \"medium\").attr(\"fill\", \"#4A5568\").text(\"Click to navigate\");\n\n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n\n    // Theme legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"theme\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 8).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Themes\");\n\n    // Feature legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 70).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"feature\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 78).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Features\");\n\n    // Persona legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 140).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"persona\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 148).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Personas\");\n\n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    return miniMapSimulation;\n  };\n\n  // Update the transformFeedbackToGraph function with intelligent analysis\n  const transformFeedbackToGraph = async feedbackItems => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Start with empty graph structure\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n\n      // Create maps to track existing nodes by ID\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        feedback: {}\n      };\n\n      // Step 1: First pass - process all feedback to extract personas and raw feedback nodes\n      for (const item of feedbackItems) {\n        // Generate an ID if not present\n        const feedbackId = item.id || `feedback-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n        // Create feedback node\n        const feedbackNode = {\n          id: feedbackId,\n          name: item.text.length > 30 ? item.text.substring(0, 30) + '...' : item.text,\n          fullText: item.text,\n          type: \"feedback\",\n          timestamp: item.timestamp || new Date().toISOString()\n        };\n        newGraph.nodes.push(feedbackNode);\n        nodeMap.feedback[feedbackId] = feedbackNode;\n\n        // Create or update persona node\n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment feedback count for existing persona\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n\n        // Create link between persona and feedback\n        newGraph.links.push({\n          source: nodeMap.personas[item.user_role].id,\n          target: feedbackId,\n          strength: 0.6\n        });\n      }\n\n      // Step 2: Batch process all feedback with AI to identify themes\n      console.log(\"Processing feedback batch with AI...\");\n\n      // Create a batch analysis request to classify all feedback at once\n      const batchAnalysisPrompt = `\n        Analyze the following user feedback items and:\n        1. Identify common themes across all feedback\n        2. Classify each feedback item into one or more themes\n        3. Suggest connections between related themes\n        \n        Feedback items:\n        ${feedbackItems.map((item, i) => `${i + 1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n      try {\n        // Call OpenAI for batch analysis\n        const batchAnalysisResult = await analyzeMultipleFeedback(feedbackItems);\n        console.log(\"Batch analysis result:\", batchAnalysisResult);\n\n        // Step 3: Create theme nodes from the analysis\n        if (batchAnalysisResult && batchAnalysisResult.themes) {\n          for (const theme of batchAnalysisResult.themes) {\n            const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n            const themeNode = {\n              id: themeId,\n              name: theme.name,\n              description: theme.description,\n              type: \"theme\",\n              feedbackCount: 0\n            };\n            newGraph.nodes.push(themeNode);\n            nodeMap.themes[theme.name] = themeNode;\n          }\n        }\n\n        // Step 4: Process classifications to connect feedback to themes\n        if (batchAnalysisResult && batchAnalysisResult.classifications) {\n          for (const classification of batchAnalysisResult.classifications) {\n            const feedbackItem = feedbackItems[classification.feedbackIndex];\n            if (!feedbackItem) continue;\n            const feedbackId = feedbackItem.id || `feedback-${Date.now()}-${classification.feedbackIndex}`;\n            const feedbackNode = nodeMap.feedback[feedbackId];\n            if (!feedbackNode) continue;\n\n            // Add sentiment and priority to feedback node\n            feedbackNode.sentiment = classification.sentiment;\n            feedbackNode.priority = classification.priority;\n\n            // Connect to primary theme\n            if (classification.themes && classification.themes.length > 0) {\n              const primaryTheme = classification.themes[0];\n              const themeNode = nodeMap.themes[primaryTheme];\n              if (themeNode) {\n                // Increment theme's feedback count\n                themeNode.feedbackCount += 1;\n\n                // Create link between feedback and theme\n                newGraph.links.push({\n                  source: feedbackId,\n                  target: themeNode.id,\n                  strength: 0.8,\n                  // Strong connection to primary theme\n                  isPrimary: true\n                });\n\n                // Also connect persona to theme\n                const personaNode = nodeMap.personas[feedbackItem.user_role];\n                if (personaNode) {\n                  // Check if link already exists\n                  const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                  if (!linkExists) {\n                    newGraph.links.push({\n                      source: personaNode.id,\n                      target: themeNode.id,\n                      strength: 0.7\n                    });\n                  }\n                }\n              }\n\n              // Connect to secondary themes if any\n              if (classification.themes.length > 1) {\n                for (let i = 1; i < classification.themes.length; i++) {\n                  const secondaryTheme = classification.themes[i];\n                  const secondaryThemeNode = nodeMap.themes[secondaryTheme];\n                  if (secondaryThemeNode) {\n                    // Increment theme's feedback count\n                    secondaryThemeNode.feedbackCount += 1;\n\n                    // Create link between feedback and secondary theme\n                    newGraph.links.push({\n                      source: feedbackId,\n                      target: secondaryThemeNode.id,\n                      strength: 0.5,\n                      // Weaker connection to secondary theme\n                      isSecondary: true\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Step 5: Create connections between related themes\n        if (batchAnalysisResult && batchAnalysisResult.themeConnections) {\n          for (const connection of batchAnalysisResult.themeConnections) {\n            const sourceThemeNode = nodeMap.themes[connection.source];\n            const targetThemeNode = nodeMap.themes[connection.target];\n            if (sourceThemeNode && targetThemeNode) {\n              newGraph.links.push({\n                source: sourceThemeNode.id,\n                target: targetThemeNode.id,\n                strength: connection.strength,\n                reason: connection.reason\n              });\n            }\n          }\n        }\n\n        // Step 6: Generate feature suggestions based on themes\n        const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 3);\n        if (significantThemes.length > 0) {\n          try {\n            const featureSuggestions = await generateFeatureSuggestions(significantThemes.map(theme => ({\n              name: theme.name,\n              description: theme.description,\n              feedbackCount: theme.feedbackCount\n            })), feedbackItems.map(item => item.text));\n            if (featureSuggestions && featureSuggestions.length > 0) {\n              // Add feature nodes\n              for (const feature of featureSuggestions) {\n                const featureId = `feature-${Date.now()}-${newGraph.nodes.length}`;\n                const featureNode = {\n                  id: featureId,\n                  name: feature.name,\n                  description: feature.description,\n                  type: \"feature\",\n                  priority: feature.priority || \"Medium\",\n                  implementationDetails: feature.implementationDetails || \"\"\n                };\n                newGraph.nodes.push(featureNode);\n\n                // Connect feature to related themes\n                if (feature.relatedThemes) {\n                  for (const themeName of feature.relatedThemes) {\n                    const themeNode = nodeMap.themes[themeName];\n                    if (themeNode) {\n                      newGraph.links.push({\n                        source: featureId,\n                        target: themeNode.id,\n                        strength: 0.7\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          } catch (error) {\n            console.error(\"Error generating feature suggestions:\", error);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in batch analysis:\", error);\n        setError(\"Error analyzing feedback. Falling back to basic processing.\");\n\n        // Fallback: Process each feedback individually\n        for (const item of feedbackItems) {\n          try {\n            const result = await classifyFeedback(item.text);\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n              } else {\n                // Increment feedback count for existing theme\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Create link between persona and theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          } catch (innerError) {\n            console.error(\"Error classifying individual feedback:\", innerError);\n          }\n        }\n      }\n\n      // Update the graph data\n      setGraphData(newGraph);\n\n      // Process all feedback with AI for insights\n      processFeedbackBatch(feedbackItems);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback data. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  // Update the analyzeMultipleFeedback function to use a mock implementation for testing\n  const analyzeMultipleFeedback = async feedbackItems => {\n    try {\n      // For testing purposes, use a mock implementation instead of calling the API\n      // This will allow you to test the functionality without API keys\n      console.log(\"Analyzing multiple feedback items:\", feedbackItems.length);\n\n      // Create mock themes based on keywords in the feedback\n      const themeKeywords = {\n        \"Performance\": [\"slow\", \"speed\", \"fast\", \"performance\", \"loading\", \"lag\"],\n        \"User Interface\": [\"ui\", \"interface\", \"design\", \"layout\", \"look\", \"feel\"],\n        \"Mobile Experience\": [\"mobile\", \"phone\", \"app\", \"tablet\", \"responsive\"],\n        \"Stability\": [\"crash\", \"bug\", \"error\", \"stable\", \"reliability\"],\n        \"Features\": [\"feature\", \"functionality\", \"capability\", \"ability\"],\n        \"Data Management\": [\"data\", \"export\", \"import\", \"save\", \"load\"]\n      };\n\n      // Generate themes based on the feedback content\n      const themes = [];\n      const themeFrequency = {};\n\n      // First pass - identify themes\n      feedbackItems.forEach(item => {\n        const text = item.text.toLowerCase();\n        for (const [theme, keywords] of Object.entries(themeKeywords)) {\n          if (keywords.some(keyword => text.includes(keyword))) {\n            if (!themeFrequency[theme]) {\n              themeFrequency[theme] = 0;\n              themes.push({\n                name: theme,\n                description: `Feedback related to ${theme.toLowerCase()}`\n              });\n            }\n            themeFrequency[theme]++;\n          }\n        }\n      });\n\n      // If no themes were found, add a default one\n      if (themes.length === 0) {\n        themes.push({\n          name: \"General Feedback\",\n          description: \"Miscellaneous user feedback\"\n        });\n      }\n\n      // Second pass - classify feedback\n      const classifications = feedbackItems.map((item, index) => {\n        const text = item.text.toLowerCase();\n        const matchedThemes = [];\n\n        // Find primary and secondary themes\n        for (const [theme, keywords] of Object.entries(themeKeywords)) {\n          if (keywords.some(keyword => text.includes(keyword))) {\n            matchedThemes.push(theme);\n          }\n        }\n\n        // If no themes matched, use \"General Feedback\"\n        if (matchedThemes.length === 0) {\n          matchedThemes.push(\"General Feedback\");\n        }\n\n        // Determine sentiment (simple keyword-based approach)\n        let sentiment = \"neutral\";\n        const positiveWords = [\"good\", \"great\", \"excellent\", \"love\", \"like\", \"helpful\", \"easy\"];\n        const negativeWords = [\"bad\", \"poor\", \"terrible\", \"hate\", \"difficult\", \"confusing\", \"slow\"];\n        if (positiveWords.some(word => text.includes(word))) {\n          sentiment = \"positive\";\n        } else if (negativeWords.some(word => text.includes(word))) {\n          sentiment = \"negative\";\n        }\n\n        // Determine priority (1-10)\n        let priority = 5; // Default medium priority\n\n        // Increase priority for negative feedback\n        if (sentiment === \"negative\") {\n          priority += 2;\n        }\n\n        // Increase priority for feedback mentioning critical issues\n        const criticalWords = [\"crash\", \"bug\", \"error\", \"broken\", \"unusable\", \"critical\"];\n        if (criticalWords.some(word => text.includes(word))) {\n          priority += 2;\n        }\n\n        // Cap priority between 1-10\n        priority = Math.max(1, Math.min(10, priority));\n        return {\n          feedbackIndex: index,\n          themes: matchedThemes,\n          sentiment,\n          priority\n        };\n      });\n\n      // Generate theme connections\n      const themeConnections = [];\n      const processedPairs = new Set();\n      themes.forEach(theme1 => {\n        themes.forEach(theme2 => {\n          if (theme1.name !== theme2.name) {\n            const pairKey = [theme1.name, theme2.name].sort().join('-');\n            if (!processedPairs.has(pairKey)) {\n              processedPairs.add(pairKey);\n\n              // Check if these themes appear together in any feedback\n              let connectionStrength = 0;\n              classifications.forEach(classification => {\n                if (classification.themes.includes(theme1.name) && classification.themes.includes(theme2.name)) {\n                  connectionStrength += 0.2;\n                }\n              });\n\n              // Only add connections with some strength\n              if (connectionStrength > 0) {\n                themeConnections.push({\n                  source: theme1.name,\n                  target: theme2.name,\n                  strength: Math.min(1.0, connectionStrength),\n                  reason: `These themes often appear together in user feedback`\n                });\n              }\n            }\n          }\n        });\n      });\n      return {\n        themes,\n        classifications,\n        themeConnections\n      };\n    } catch (error) {\n      console.error(\"Error in mock analyzeMultipleFeedback:\", error);\n      throw error;\n    }\n  };\n\n  // Update the generateFeatureSuggestions function to use a mock implementation\n  const generateFeatureSuggestions = async (themes, feedbackTexts) => {\n    try {\n      // For testing purposes, use a mock implementation\n      console.log(\"Generating feature suggestions for themes:\", themes.map(t => t.name));\n\n      // Create mock feature suggestions based on the themes\n      const featureSuggestions = [];\n      if (themes.some(t => t.name === \"Performance\" || t.name.includes(\"Performance\"))) {\n        featureSuggestions.push({\n          name: \"Performance Optimization\",\n          description: \"Improve application loading and response times\",\n          priority: \"High\",\n          relatedThemes: [\"Performance\"],\n          implementationDetails: \"Implement code splitting, lazy loading, and optimize database queries\"\n        });\n      }\n      if (themes.some(t => t.name === \"User Interface\" || t.name.includes(\"Interface\"))) {\n        featureSuggestions.push({\n          name: \"UI Redesign\",\n          description: \"Modernize the user interface for better usability\",\n          priority: \"Medium\",\n          relatedThemes: [\"User Interface\"],\n          implementationDetails: \"Apply consistent design system, improve navigation, and enhance visual hierarchy\"\n        });\n      }\n      if (themes.some(t => t.name === \"Mobile Experience\" || t.name.includes(\"Mobile\"))) {\n        featureSuggestions.push({\n          name: \"Mobile Responsiveness\",\n          description: \"Optimize the application for mobile devices\",\n          priority: \"High\",\n          relatedThemes: [\"Mobile Experience\"],\n          implementationDetails: \"Implement responsive design, touch-friendly controls, and mobile-specific features\"\n        });\n      }\n      if (themes.some(t => t.name === \"Stability\" || t.name.includes(\"Stability\"))) {\n        featureSuggestions.push({\n          name: \"Error Handling Improvements\",\n          description: \"Enhance application stability and error recovery\",\n          priority: \"High\",\n          relatedThemes: [\"Stability\"],\n          implementationDetails: \"Implement comprehensive error handling, crash reporting, and automatic recovery mechanisms\"\n        });\n      }\n      if (themes.some(t => t.name === \"Data Management\" || t.name.includes(\"Data\"))) {\n        featureSuggestions.push({\n          name: \"Enhanced Data Export\",\n          description: \"Provide more flexible data export options\",\n          priority: \"Medium\",\n          relatedThemes: [\"Data Management\"],\n          implementationDetails: \"Support multiple export formats (CSV, Excel, PDF) and customizable export templates\"\n        });\n      }\n\n      // Add a generic feature suggestion if none matched\n      if (featureSuggestions.length === 0) {\n        featureSuggestions.push({\n          name: \"User Feedback System\",\n          description: \"Implement an in-app feedback collection system\",\n          priority: \"Medium\",\n          relatedThemes: themes.map(t => t.name),\n          implementationDetails: \"Add feedback forms, surveys, and user testing recruitment features\"\n        });\n      }\n      return featureSuggestions;\n    } catch (error) {\n      console.error(\"Error in mock generateFeatureSuggestions:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to download a sample template\n  const downloadSampleTemplate = () => {\n    const sampleData = {\n      feedback: [{\n        id: \"feedback-1\",\n        text: \"The application is too slow when loading large datasets\",\n        user_role: \"Data Analyst\",\n        timestamp: \"2023-07-15T14:30:00Z\"\n      }, {\n        id: \"feedback-2\",\n        text: \"I love the new dashboard layout, it makes finding information much easier\",\n        user_role: \"Product Manager\",\n        timestamp: \"2023-07-16T09:45:00Z\"\n      }, {\n        id: \"feedback-3\",\n        text: \"The mobile app is missing key features that are available on the desktop version\",\n        user_role: \"Field Sales Rep\",\n        timestamp: \"2023-07-17T11:20:00Z\"\n      }]\n    };\n    const dataStr = JSON.stringify(sampleData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-template.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2148,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2157,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2235,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2267,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2271,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2272,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2266,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2257,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: () => {\n              if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                setGraphData(initialData);\n              }\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: () => {\n              if (selectedNode) {\n                initiateConnection(selectedNode);\n              }\n            },\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2431,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2455,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2470,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2473,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2485,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2493,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2494,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2488,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2484,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!newNodeName.trim()) {\n                alert(\"Please enter a name\");\n                return;\n              }\n              const newNode = {\n                id: `${modalType}-${Date.now()}`,\n                name: newNodeName,\n                type: modalType,\n                ...(modalType === 'theme' ? {\n                  feedbackCount: newNodeFeedbackCount\n                } : {}),\n                ...(modalType === 'feature' ? {\n                  priority: newNodePriority\n                } : {})\n              };\n              setGraphData({\n                nodes: [...graphData.nodes, newNode],\n                links: [...graphData.links]\n              });\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2500,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2450,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2449,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2558,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2564,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2572,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2574,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2582,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2585,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!connectionTarget) {\n                alert(\"Please select a target node\");\n                return;\n              }\n\n              // Check if connection already exists\n              const connectionExists = graphData.links.some(link => link.source === connectionSource.id && link.target === connectionTarget || link.source === connectionTarget && link.target === connectionSource.id);\n              if (connectionExists) {\n                alert(\"This connection already exists\");\n                return;\n              }\n              const newLink = {\n                source: connectionSource.id,\n                target: connectionTarget,\n                strength: connectionStrength\n              };\n              setGraphData({\n                nodes: [...graphData.nodes],\n                links: [...graphData.links, newLink]\n              });\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2608,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2596,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2549,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2548,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2663,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2676,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2703,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2702,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2685,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2711,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2654,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2653,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2736,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2735,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2730,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2745,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2757,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2752,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2729,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2767,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2766,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2778,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2779,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2777,\n            columnNumber: 19\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2788,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2795,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2796,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2791,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2789,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2787,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2812,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2815,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2813,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2811,\n            columnNumber: 21\n          }, this), aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"AI Feature Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2829,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: aiInsights.featureIdeas.map((idea, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-2 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-blue-800\",\n                  children: idea.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2833,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-blue-600 mt-1\",\n                  children: idea.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2834,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2832,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2830,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2828,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2848,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2849,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2847,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2858,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2859,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2857,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2846,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2869,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2876,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2877,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2872,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2870,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2868,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2889,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2892,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2890,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2888,\n            columnNumber: 21\n          }, this), aiInsights.implementationDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Implementation Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2906,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded text-sm\",\n              children: aiInsights.implementationDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2907,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2905,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2919,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2920,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2918,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Common Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2929,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2936,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2937,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2932,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2930,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2928,\n            columnNumber: 21\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Relevant Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2949,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2956,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2957,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2952,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2950,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2948,\n            columnNumber: 21\n          }, this), aiInsights.personaInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"User Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2973,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-3 rounded text-sm text-orange-800\",\n              children: aiInsights.personaInsights\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2974,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2972,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2985,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: result.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2990,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2992,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2993,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2991,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2989,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2999,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2721,\n      columnNumber: 9\n    }, this), showModal && modalType === 'import' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Import Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3010,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-2\",\n            children: \"You can import data in two formats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3013,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"list-decimal pl-5 mb-3 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Simple feedback format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3018,\n                columnNumber: 19\n              }, this), \" A JSON file with a \\\"feedback\\\" array containing user feedback items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3017,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Advanced graph format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3021,\n                columnNumber: 19\n              }, this), \" A JSON file with \\\"nodes\\\" and \\\"links\\\" arrays for direct graph manipulation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3020,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3016,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadSampleTemplate,\n              className: \"text-blue-600 text-sm hover:underline flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-4 w-4 mr-1\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3031,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3030,\n                columnNumber: 19\n              }, this), \"Download Sample Template\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3026,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3025,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3012,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2\",\n            children: \"Select JSON File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3039,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: importData,\n            className: \"w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3040,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3038,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-100 text-red-800 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold mb-1\",\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3050,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"whitespace-pre-line text-sm\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3051,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3049,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowModal(false);\n              setError(null);\n            },\n            className: \"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 mr-2\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3056,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3055,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3009,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3008,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2225,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"xkpVUTVLXcTviJI2VslhzljDukk=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","recalculateFeedbackCounts","feedbackCounts","themes","personas","features","forEach","link","sourceNode","find","n","targetNode","updatedNodes","map","node","prevData","setTimeout","current","console","log","createMiniMap","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","miniMapSize","Math","min","viewportRect","empty","x","y","k","vpWidth","vpHeight","vpX","vpY","max","call","nodeMap","linkElements","data","enter","d","sourceType","targetType","nodeGroup","drag","dragstarted","dragged","dragended","simulation","forceSimulation","force","forceLink","distance","forceManyBody","forceCenter","forceX","forceY","forceCollide","radius","alphaTarget","alphaDecay","stopPropagation","fx","fy","handleNodeClick","highlightConnections","classed","connectedLinks","filter","connectedNodeId","active","restart","style","document","createElement","textContent","head","appendChild","stop","removeChild","length","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","setAttribute","click","importData","file","files","reader","FileReader","onload","e","importedData","parse","result","feedback","Array","isArray","transformFeedbackToGraph","err","readAsText","importSimplifiedData","processFeedbackBatch","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","centerView","clearTimeout","addTheme","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","random","handleConnectionSubmit","newLinks","existingConnection","l","push","targetId","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","Set","zoomIn","currentTransform","zoomTransform","transition","duration","zoomIdentity","translate","scale","zoomOut","centerX","centerY","fitToScreen","minX","Infinity","minY","maxX","maxY","padding","contentWidth","contentHeight","toggleMiniMap","newShowMiniMap","miniMapSimulation","results","i","item","text","theme","feedbackIndex","user_role","updatedInsights","personaNode","personaId","Date","now","toString","substr","r","themeNode","themeId","newLink","linkExists","some","connectedNodeIds","connectedNodes","insights","connectedFeatures","connectedPersonas","then","ideas","prev","featureIdeas","catch","isFeatureView","connectedThemes","implementationDetails","persona","personaFeedback","index","_aiInsights$results","_aiInsights$results$f","focusOnNode","handleAddFeedback","feedbackId","newFeedbackItem","timestamp","toISOString","updatedFeedbackItems","miniMapMargin","miniMapContainer","miniMapNodes","miniX","miniY","miniNodes","baseColor","color","brighter","tick","pointer","legendY","legendX","legendSpacing","newGraph","feedbackNode","substring","fullText","Object","keys","batchAnalysisPrompt","join","batchAnalysisResult","analyzeMultipleFeedback","description","classifications","classification","feedbackItem","sentiment","primaryTheme","isPrimary","secondaryTheme","secondaryThemeNode","isSecondary","themeConnections","connection","sourceThemeNode","targetThemeNode","reason","significantThemes","values","sort","a","b","slice","featureSuggestions","generateFeatureSuggestions","feature","featureId","featureNode","relatedThemes","themeName","innerError","themeKeywords","themeFrequency","toLowerCase","keywords","entries","keyword","matchedThemes","positiveWords","negativeWords","word","criticalWords","processedPairs","theme1","theme2","pairKey","has","add","feedbackTexts","t","downloadSampleTemplate","sampleData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","togglePanelCollapse","initiateConnection","handleSearchResultClick","placeholder","value","onChange","backgroundColor","accept","confirm","title","disabled","parseInt","ref","marginRight","trim","newNode","toFixed","step","parseFloat","connectionExists","rows","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","idea","personaInsights","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  // IMPORTANT: Define recalculateFeedbackCounts using useCallback to avoid reference issues\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceNode = graphData.nodes.find(n => n.id === (typeof link.source === 'object' ? link.source.id : link.source));\n      const targetNode = graphData.nodes.find(n => n.id === (typeof link.target === 'object' ? link.target.id : link.target));\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n  \n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n        \n        // Update the mini-map viewport to show the current view\n        if (showMiniMap) {\n          const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n          const viewportRect = svg.select(\".mini-map-viewport\");\n          \n          if (!viewportRect.empty()) {\n            const { x, y, k } = event.transform;\n            \n            // Calculate the viewport rectangle in the mini-map\n            const vpWidth = miniMapSize / k;\n            const vpHeight = miniMapSize / k;\n            const vpX = (-x / dimensions.width) * miniMapSize;\n            const vpY = (-y / dimensions.height) * miniMapSize;\n            \n            // Update the viewport rectangle\n            viewportRect\n              .attr(\"x\", Math.max(0, vpX))\n              .attr(\"y\", Math.max(0, vpY))\n              .attr(\"width\", Math.min(miniMapSize, vpWidth))\n              .attr(\"height\", Math.min(miniMapSize, vpHeight));\n          }\n        }\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n    \n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n    \n    // Create links\n    const linkElements = g.selectAll(\".link\")\n      .data(links)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"stroke\", d => {\n        // Determine color based on the types of nodes being connected\n        const sourceNode = nodeMap[d.source];\n        const targetNode = nodeMap[d.target];\n        \n        if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n        \n        const sourceType = sourceNode.type;\n        const targetType = targetNode.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        \n        return \"#CBD5E0\"; // Default gray\n      })\n      .attr(\"stroke-width\", d => Math.max(1, d.strength * 3))\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"data-source\", d => d.source)\n      .attr(\"data-target\", d => d.target);\n    \n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"data-id\", d => d.id)\n      .attr(\"data-type\", d => d.type)\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n    \n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n        .strength(d => d.strength || 0.5))\n      .force(\"charge\", d3.forceManyBody()\n        .strength(d => {\n          // Adjust repulsion force based on node type\n          if (d.type === \"theme\") return -300;\n          if (d.type === \"feature\") return -200;\n          if (d.type === \"persona\") return -250;\n          if (d.type === \"feedback\") return -100;\n          return -150;\n        }))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05))\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05))\n      .force(\"collision\", d3.forceCollide().radius(d => {\n        // Adjust collision radius based on node type\n        if (d.type === \"theme\") return 60;\n        if (d.type === \"feature\") return 50;\n        if (d.type === \"persona\") return 45;\n        if (d.type === \"feedback\") return 30;\n        return 40;\n      }))\n      .alphaTarget(0)\n      .alphaDecay(0.05); // Slower decay for more stable layout\n\n    // Add a tick event handler\n    simulation.on(\"tick\", () => {\n      // Update link positions\n      linkElements\n        .attr(\"x1\", d => {\n          const source = nodeMap[d.source];\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const source = nodeMap[d.source];\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const target = nodeMap[d.target];\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const target = nodeMap[d.target];\n          return target ? target.y : 0;\n        });\n      \n      // Update node positions\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Fix the shaking issue by properly handling node selection\n    nodeGroup.on(\"click\", (event, d) => {\n      event.stopPropagation(); // Prevent event bubbling\n      \n      // Fix the position of the selected node to prevent shaking\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        handleNodeClick(d);\n      }\n      \n      // Highlight connected nodes and links\n      highlightConnections(d);\n    });\n\n    // Add a click handler to the background to clear selection\n    svg.on(\"click\", () => {\n      // Clear selection when clicking the background\n      if (selectedNode) {\n        // Find the node in the simulation and release it\n        const node = nodes.find(n => n.id === selectedNode.id);\n        if (node) {\n          node.fx = null;\n          node.fy = null;\n        }\n        setSelectedNode(null);\n        \n        // Clear highlights\n        d3.selectAll(\".node\").classed(\"dimmed\", false);\n        d3.selectAll(\".link\").classed(\"dimmed\", false);\n        d3.selectAll(\".node\").classed(\"highlighted\", false);\n        d3.selectAll(\".link\").classed(\"highlighted\", false);\n      }\n    });\n\n    // Function to highlight connections\n    function highlightConnections(node) {\n      // Reset all nodes and links\n      d3.selectAll(\".node\").classed(\"dimmed\", true);\n      d3.selectAll(\".link\").classed(\"dimmed\", true);\n      d3.selectAll(\".node\").classed(\"highlighted\", false);\n      d3.selectAll(\".link\").classed(\"highlighted\", false);\n      \n      // Highlight the selected node\n      d3.select(`.node[data-id=\"${node.id}\"]`).classed(\"dimmed\", false).classed(\"highlighted\", true);\n      \n      // Find connected links and nodes\n      const connectedLinks = links.filter(link => \n        link.source === node.id || link.target === node.id ||\n        (typeof link.source === 'object' && link.source.id === node.id) ||\n        (typeof link.target === 'object' && link.target.id === node.id)\n      );\n      \n      // Highlight connected links\n      connectedLinks.forEach(link => {\n        d3.select(`line[data-source=\"${link.source}\"][data-target=\"${link.target}\"]`)\n          .classed(\"dimmed\", false)\n          .classed(\"highlighted\", true);\n        \n        // Highlight connected nodes\n        const connectedNodeId = link.source === node.id ? link.target : link.source;\n        d3.select(`.node[data-id=\"${connectedNodeId}\"]`)\n          .classed(\"dimmed\", false)\n          .classed(\"highlighted\", true);\n      });\n    }\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Add CSS for highlighting\n    const style = document.createElement('style');\n    style.textContent = `\n      .node.dimmed { opacity: 0.3; }\n      .link.dimmed { opacity: 0.1; }\n      .node.highlighted { opacity: 1; }\n      .link.highlighted { opacity: 1; stroke-width: 3px; }\n    `;\n    document.head.appendChild(style);\n\n    // Stop the simulation when component unmounts\n    return () => {\n      simulation.stop();\n      document.head.removeChild(style);\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode, selectedNode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  // Update the importData function to handle both formats\n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        } \n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } \n        // Invalid format\n        else {\n          setError(\n            \"Invalid data format. The file should contain either:\" +\n            \"\\n1. A 'feedback' array with user feedback items, or\" +\n            \"\\n2. 'nodes' and 'links' arrays for direct graph data\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    \n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    try {\n      // Process each feedback item\n      const results = [];\n      \n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        \n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n      \n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      \n      setAIInsights(updatedInsights);\n      \n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => \n          node.type === \"persona\" && node.name === item.user_role\n        );\n        \n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          \n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n        \n        // Find the result for this item\n        const result = results.find(r => \n          r.text === item.text && r.user_role === item.user_role\n        );\n        \n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => \n            node.type === \"theme\" && node.name === result.theme\n          );\n          \n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n            \n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n            \n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            \n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n            \n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => \n              (link.source === personaNode.id && link.target === themeNode.id) ||\n              (link.source === themeNode.id && link.target === personaNode.id)\n            );\n            \n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              \n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      \n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = (node) => {\n    if (!node) return;\n    \n    // Set the selected node\n    setSelectedNode(node);\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => \n      link.source === node.id || link.target === node.id ||\n      (typeof link.source === 'object' && link.source.id === node.id) ||\n      (typeof link.target === 'object' && link.target.id === node.id)\n    );\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => \n          result.theme === node.name\n        );\n      }\n      \n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text))\n          .then(ideas => {\n            if (ideas && ideas.length > 0) {\n              setAIInsights(prev => ({\n                ...prev,\n                featureIdeas: ideas\n              }));\n            }\n          })\n          .catch(error => {\n            console.error(\"Error generating feature ideas:\", error);\n          });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => \n          item.user_role === node.name\n        );\n        \n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role,\n            theme: aiInsights?.results?.find(r => r.text === item.text)?.theme || \"Unknown\"\n          }));\n        }\n      }\n    }\n    \n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => \n      node.type === \"persona\" && node.name === newFeedbackRole\n    );\n    \n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n      \n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n      \n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      \n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n    \n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n    \n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      \n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => \n          node.type === \"theme\" && node.name === result.theme\n        );\n        \n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n          \n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n          \n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id, // Use ID reference instead of object\n            target: themeId, // Use ID reference instead of object\n            strength: 0.7\n          };\n          \n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n          \n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => \n            (link.source === personaNode.id && link.target === themeNode.id) ||\n            (link.source === themeNode.id && link.target === personaNode.id)\n          );\n          \n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id, // Use ID reference instead of object\n              target: themeNode.id, // Use ID reference instead of object\n              strength: 0.7\n            };\n            \n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n        \n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...(aiInsights?.results || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        \n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n    \n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n    \n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9) // Semi-transparent background\n      .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n      .attr(\"stroke-width\", 2) // Thicker border\n      .attr(\"rx\", 6); // Rounded corners\n    \n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n      .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n      .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n    \n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n      \n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n    \n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 4.5) // Even larger radius for better visibility\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3); // Brighter colors\n      })\n      .attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n      .attr(\"stroke-width\", 1.5); // Thicker stroke\n    \n    // Add a label with better visibility\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 20)\n      .attr(\"font-size\", \"14px\") // Larger font\n      .attr(\"font-weight\", \"bold\") // Bold text\n      .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) { // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", miniMapSize / 2)\n      .attr(\"y\", miniMapSize - 12)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"11px\")\n      .attr(\"font-weight\", \"medium\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Click to navigate\");\n    \n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n    \n    // Theme legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"theme\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 8)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Themes\");\n    \n    // Feature legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 70)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"feature\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 78)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Features\");\n    \n    // Persona legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 140)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"persona\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 148)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Personas\");\n    \n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    \n    return miniMapSimulation;\n  };\n\n  // Update the transformFeedbackToGraph function with intelligent analysis\n  const transformFeedbackToGraph = async (feedbackItems) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Start with empty graph structure\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n      \n      // Create maps to track existing nodes by ID\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        feedback: {}\n      };\n      \n      // Step 1: First pass - process all feedback to extract personas and raw feedback nodes\n      for (const item of feedbackItems) {\n        // Generate an ID if not present\n        const feedbackId = item.id || `feedback-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        // Create feedback node\n        const feedbackNode = {\n          id: feedbackId,\n          name: item.text.length > 30 ? item.text.substring(0, 30) + '...' : item.text,\n          fullText: item.text,\n          type: \"feedback\",\n          timestamp: item.timestamp || new Date().toISOString()\n        };\n        \n        newGraph.nodes.push(feedbackNode);\n        nodeMap.feedback[feedbackId] = feedbackNode;\n        \n        // Create or update persona node\n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment feedback count for existing persona\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n        \n        // Create link between persona and feedback\n        newGraph.links.push({\n          source: nodeMap.personas[item.user_role].id,\n          target: feedbackId,\n          strength: 0.6\n        });\n      }\n      \n      // Step 2: Batch process all feedback with AI to identify themes\n      console.log(\"Processing feedback batch with AI...\");\n      \n      // Create a batch analysis request to classify all feedback at once\n      const batchAnalysisPrompt = `\n        Analyze the following user feedback items and:\n        1. Identify common themes across all feedback\n        2. Classify each feedback item into one or more themes\n        3. Suggest connections between related themes\n        \n        Feedback items:\n        ${feedbackItems.map((item, i) => `${i+1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n      \n      try {\n        // Call OpenAI for batch analysis\n        const batchAnalysisResult = await analyzeMultipleFeedback(feedbackItems);\n        console.log(\"Batch analysis result:\", batchAnalysisResult);\n        \n        // Step 3: Create theme nodes from the analysis\n        if (batchAnalysisResult && batchAnalysisResult.themes) {\n          for (const theme of batchAnalysisResult.themes) {\n            const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n            const themeNode = {\n              id: themeId,\n              name: theme.name,\n              description: theme.description,\n              type: \"theme\",\n              feedbackCount: 0\n            };\n            newGraph.nodes.push(themeNode);\n            nodeMap.themes[theme.name] = themeNode;\n          }\n        }\n        \n        // Step 4: Process classifications to connect feedback to themes\n        if (batchAnalysisResult && batchAnalysisResult.classifications) {\n          for (const classification of batchAnalysisResult.classifications) {\n            const feedbackItem = feedbackItems[classification.feedbackIndex];\n            if (!feedbackItem) continue;\n            \n            const feedbackId = feedbackItem.id || `feedback-${Date.now()}-${classification.feedbackIndex}`;\n            const feedbackNode = nodeMap.feedback[feedbackId];\n            \n            if (!feedbackNode) continue;\n            \n            // Add sentiment and priority to feedback node\n            feedbackNode.sentiment = classification.sentiment;\n            feedbackNode.priority = classification.priority;\n            \n            // Connect to primary theme\n            if (classification.themes && classification.themes.length > 0) {\n              const primaryTheme = classification.themes[0];\n              const themeNode = nodeMap.themes[primaryTheme];\n              \n              if (themeNode) {\n                // Increment theme's feedback count\n                themeNode.feedbackCount += 1;\n                \n                // Create link between feedback and theme\n                newGraph.links.push({\n                  source: feedbackId,\n                  target: themeNode.id,\n                  strength: 0.8, // Strong connection to primary theme\n                  isPrimary: true\n                });\n                \n                // Also connect persona to theme\n                const personaNode = nodeMap.personas[feedbackItem.user_role];\n                if (personaNode) {\n                  // Check if link already exists\n                  const linkExists = newGraph.links.some(link => \n                    (link.source === personaNode.id && link.target === themeNode.id) ||\n                    (link.source === themeNode.id && link.target === personaNode.id)\n                  );\n                  \n                  if (!linkExists) {\n                    newGraph.links.push({\n                      source: personaNode.id,\n                      target: themeNode.id,\n                      strength: 0.7\n                    });\n                  }\n                }\n              }\n              \n              // Connect to secondary themes if any\n              if (classification.themes.length > 1) {\n                for (let i = 1; i < classification.themes.length; i++) {\n                  const secondaryTheme = classification.themes[i];\n                  const secondaryThemeNode = nodeMap.themes[secondaryTheme];\n                  \n                  if (secondaryThemeNode) {\n                    // Increment theme's feedback count\n                    secondaryThemeNode.feedbackCount += 1;\n                    \n                    // Create link between feedback and secondary theme\n                    newGraph.links.push({\n                      source: feedbackId,\n                      target: secondaryThemeNode.id,\n                      strength: 0.5, // Weaker connection to secondary theme\n                      isSecondary: true\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n        \n        // Step 5: Create connections between related themes\n        if (batchAnalysisResult && batchAnalysisResult.themeConnections) {\n          for (const connection of batchAnalysisResult.themeConnections) {\n            const sourceThemeNode = nodeMap.themes[connection.source];\n            const targetThemeNode = nodeMap.themes[connection.target];\n            \n            if (sourceThemeNode && targetThemeNode) {\n              newGraph.links.push({\n                source: sourceThemeNode.id,\n                target: targetThemeNode.id,\n                strength: connection.strength,\n                reason: connection.reason\n              });\n            }\n          }\n        }\n        \n        // Step 6: Generate feature suggestions based on themes\n        const significantThemes = Object.values(nodeMap.themes)\n          .filter(theme => theme.feedbackCount >= 2)\n          .sort((a, b) => b.feedbackCount - a.feedbackCount)\n          .slice(0, 3);\n        \n        if (significantThemes.length > 0) {\n          try {\n            const featureSuggestions = await generateFeatureSuggestions(\n              significantThemes.map(theme => ({\n                name: theme.name,\n                description: theme.description,\n                feedbackCount: theme.feedbackCount\n              })),\n              feedbackItems.map(item => item.text)\n            );\n            \n            if (featureSuggestions && featureSuggestions.length > 0) {\n              // Add feature nodes\n              for (const feature of featureSuggestions) {\n                const featureId = `feature-${Date.now()}-${newGraph.nodes.length}`;\n                const featureNode = {\n                  id: featureId,\n                  name: feature.name,\n                  description: feature.description,\n                  type: \"feature\",\n                  priority: feature.priority || \"Medium\",\n                  implementationDetails: feature.implementationDetails || \"\"\n                };\n                \n                newGraph.nodes.push(featureNode);\n                \n                // Connect feature to related themes\n                if (feature.relatedThemes) {\n                  for (const themeName of feature.relatedThemes) {\n                    const themeNode = nodeMap.themes[themeName];\n                    if (themeNode) {\n                      newGraph.links.push({\n                        source: featureId,\n                        target: themeNode.id,\n                        strength: 0.7\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          } catch (error) {\n            console.error(\"Error generating feature suggestions:\", error);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in batch analysis:\", error);\n        setError(\"Error analyzing feedback. Falling back to basic processing.\");\n        \n        // Fallback: Process each feedback individually\n        for (const item of feedbackItems) {\n          try {\n            const result = await classifyFeedback(item.text);\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n              } else {\n                // Increment feedback count for existing theme\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Create link between persona and theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              const linkExists = newGraph.links.some(link => \n                (link.source === personaNode.id && link.target === themeNode.id) ||\n                (link.source === themeNode.id && link.target === personaNode.id)\n              );\n              \n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          } catch (innerError) {\n            console.error(\"Error classifying individual feedback:\", innerError);\n          }\n        }\n      }\n      \n      // Update the graph data\n      setGraphData(newGraph);\n      \n      // Process all feedback with AI for insights\n      processFeedbackBatch(feedbackItems);\n      \n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback data. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  // Update the analyzeMultipleFeedback function to use a mock implementation for testing\n  const analyzeMultipleFeedback = async (feedbackItems) => {\n    try {\n      // For testing purposes, use a mock implementation instead of calling the API\n      // This will allow you to test the functionality without API keys\n      console.log(\"Analyzing multiple feedback items:\", feedbackItems.length);\n      \n      // Create mock themes based on keywords in the feedback\n      const themeKeywords = {\n        \"Performance\": [\"slow\", \"speed\", \"fast\", \"performance\", \"loading\", \"lag\"],\n        \"User Interface\": [\"ui\", \"interface\", \"design\", \"layout\", \"look\", \"feel\"],\n        \"Mobile Experience\": [\"mobile\", \"phone\", \"app\", \"tablet\", \"responsive\"],\n        \"Stability\": [\"crash\", \"bug\", \"error\", \"stable\", \"reliability\"],\n        \"Features\": [\"feature\", \"functionality\", \"capability\", \"ability\"],\n        \"Data Management\": [\"data\", \"export\", \"import\", \"save\", \"load\"]\n      };\n      \n      // Generate themes based on the feedback content\n      const themes = [];\n      const themeFrequency = {};\n      \n      // First pass - identify themes\n      feedbackItems.forEach(item => {\n        const text = item.text.toLowerCase();\n        \n        for (const [theme, keywords] of Object.entries(themeKeywords)) {\n          if (keywords.some(keyword => text.includes(keyword))) {\n            if (!themeFrequency[theme]) {\n              themeFrequency[theme] = 0;\n              themes.push({\n                name: theme,\n                description: `Feedback related to ${theme.toLowerCase()}`\n              });\n            }\n            themeFrequency[theme]++;\n          }\n        }\n      });\n      \n      // If no themes were found, add a default one\n      if (themes.length === 0) {\n        themes.push({\n          name: \"General Feedback\",\n          description: \"Miscellaneous user feedback\"\n        });\n      }\n      \n      // Second pass - classify feedback\n      const classifications = feedbackItems.map((item, index) => {\n        const text = item.text.toLowerCase();\n        const matchedThemes = [];\n        \n        // Find primary and secondary themes\n        for (const [theme, keywords] of Object.entries(themeKeywords)) {\n          if (keywords.some(keyword => text.includes(keyword))) {\n            matchedThemes.push(theme);\n          }\n        }\n        \n        // If no themes matched, use \"General Feedback\"\n        if (matchedThemes.length === 0) {\n          matchedThemes.push(\"General Feedback\");\n        }\n        \n        // Determine sentiment (simple keyword-based approach)\n        let sentiment = \"neutral\";\n        const positiveWords = [\"good\", \"great\", \"excellent\", \"love\", \"like\", \"helpful\", \"easy\"];\n        const negativeWords = [\"bad\", \"poor\", \"terrible\", \"hate\", \"difficult\", \"confusing\", \"slow\"];\n        \n        if (positiveWords.some(word => text.includes(word))) {\n          sentiment = \"positive\";\n        } else if (negativeWords.some(word => text.includes(word))) {\n          sentiment = \"negative\";\n        }\n        \n        // Determine priority (1-10)\n        let priority = 5; // Default medium priority\n        \n        // Increase priority for negative feedback\n        if (sentiment === \"negative\") {\n          priority += 2;\n        }\n        \n        // Increase priority for feedback mentioning critical issues\n        const criticalWords = [\"crash\", \"bug\", \"error\", \"broken\", \"unusable\", \"critical\"];\n        if (criticalWords.some(word => text.includes(word))) {\n          priority += 2;\n        }\n        \n        // Cap priority between 1-10\n        priority = Math.max(1, Math.min(10, priority));\n        \n        return {\n          feedbackIndex: index,\n          themes: matchedThemes,\n          sentiment,\n          priority\n        };\n      });\n      \n      // Generate theme connections\n      const themeConnections = [];\n      const processedPairs = new Set();\n      \n      themes.forEach(theme1 => {\n        themes.forEach(theme2 => {\n          if (theme1.name !== theme2.name) {\n            const pairKey = [theme1.name, theme2.name].sort().join('-');\n            \n            if (!processedPairs.has(pairKey)) {\n              processedPairs.add(pairKey);\n              \n              // Check if these themes appear together in any feedback\n              let connectionStrength = 0;\n              \n              classifications.forEach(classification => {\n                if (classification.themes.includes(theme1.name) && \n                    classification.themes.includes(theme2.name)) {\n                  connectionStrength += 0.2;\n                }\n              });\n              \n              // Only add connections with some strength\n              if (connectionStrength > 0) {\n                themeConnections.push({\n                  source: theme1.name,\n                  target: theme2.name,\n                  strength: Math.min(1.0, connectionStrength),\n                  reason: `These themes often appear together in user feedback`\n                });\n              }\n            }\n          }\n        });\n      });\n      \n      return {\n        themes,\n        classifications,\n        themeConnections\n      };\n    } catch (error) {\n      console.error(\"Error in mock analyzeMultipleFeedback:\", error);\n      throw error;\n    }\n  };\n\n  // Update the generateFeatureSuggestions function to use a mock implementation\n  const generateFeatureSuggestions = async (themes, feedbackTexts) => {\n    try {\n      // For testing purposes, use a mock implementation\n      console.log(\"Generating feature suggestions for themes:\", themes.map(t => t.name));\n      \n      // Create mock feature suggestions based on the themes\n      const featureSuggestions = [];\n      \n      if (themes.some(t => t.name === \"Performance\" || t.name.includes(\"Performance\"))) {\n        featureSuggestions.push({\n          name: \"Performance Optimization\",\n          description: \"Improve application loading and response times\",\n          priority: \"High\",\n          relatedThemes: [\"Performance\"],\n          implementationDetails: \"Implement code splitting, lazy loading, and optimize database queries\"\n        });\n      }\n      \n      if (themes.some(t => t.name === \"User Interface\" || t.name.includes(\"Interface\"))) {\n        featureSuggestions.push({\n          name: \"UI Redesign\",\n          description: \"Modernize the user interface for better usability\",\n          priority: \"Medium\",\n          relatedThemes: [\"User Interface\"],\n          implementationDetails: \"Apply consistent design system, improve navigation, and enhance visual hierarchy\"\n        });\n      }\n      \n      if (themes.some(t => t.name === \"Mobile Experience\" || t.name.includes(\"Mobile\"))) {\n        featureSuggestions.push({\n          name: \"Mobile Responsiveness\",\n          description: \"Optimize the application for mobile devices\",\n          priority: \"High\",\n          relatedThemes: [\"Mobile Experience\"],\n          implementationDetails: \"Implement responsive design, touch-friendly controls, and mobile-specific features\"\n        });\n      }\n      \n      if (themes.some(t => t.name === \"Stability\" || t.name.includes(\"Stability\"))) {\n        featureSuggestions.push({\n          name: \"Error Handling Improvements\",\n          description: \"Enhance application stability and error recovery\",\n          priority: \"High\",\n          relatedThemes: [\"Stability\"],\n          implementationDetails: \"Implement comprehensive error handling, crash reporting, and automatic recovery mechanisms\"\n        });\n      }\n      \n      if (themes.some(t => t.name === \"Data Management\" || t.name.includes(\"Data\"))) {\n        featureSuggestions.push({\n          name: \"Enhanced Data Export\",\n          description: \"Provide more flexible data export options\",\n          priority: \"Medium\",\n          relatedThemes: [\"Data Management\"],\n          implementationDetails: \"Support multiple export formats (CSV, Excel, PDF) and customizable export templates\"\n        });\n      }\n      \n      // Add a generic feature suggestion if none matched\n      if (featureSuggestions.length === 0) {\n        featureSuggestions.push({\n          name: \"User Feedback System\",\n          description: \"Implement an in-app feedback collection system\",\n          priority: \"Medium\",\n          relatedThemes: themes.map(t => t.name),\n          implementationDetails: \"Add feedback forms, surveys, and user testing recruitment features\"\n        });\n      }\n      \n      return featureSuggestions;\n    } catch (error) {\n      console.error(\"Error in mock generateFeatureSuggestions:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to download a sample template\n  const downloadSampleTemplate = () => {\n    const sampleData = {\n      feedback: [\n        {\n          id: \"feedback-1\",\n          text: \"The application is too slow when loading large datasets\",\n          user_role: \"Data Analyst\",\n          timestamp: \"2023-07-15T14:30:00Z\"\n        },\n        {\n          id: \"feedback-2\",\n          text: \"I love the new dashboard layout, it makes finding information much easier\",\n          user_role: \"Product Manager\",\n          timestamp: \"2023-07-16T09:45:00Z\"\n        },\n        {\n          id: \"feedback-3\",\n          text: \"The mobile app is missing key features that are available on the desktop version\",\n          user_role: \"Field Sales Rep\",\n          timestamp: \"2023-07-17T11:20:00Z\"\n        }\n      ]\n    };\n    \n    const dataStr = JSON.stringify(sampleData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-template.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                  setGraphData(initialData);\n                }\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={() => {\n                if (selectedNode) {\n                  initiateConnection(selectedNode);\n                }\n              }}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!newNodeName.trim()) {\n                    alert(\"Please enter a name\");\n                    return;\n                  }\n                  \n                  const newNode = {\n                    id: `${modalType}-${Date.now()}`,\n                    name: newNodeName,\n                    type: modalType,\n                    ...(modalType === 'theme' ? { feedbackCount: newNodeFeedbackCount } : {}),\n                    ...(modalType === 'feature' ? { priority: newNodePriority } : {})\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes, newNode],\n                    links: [...graphData.links]\n                  });\n                  \n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!connectionTarget) {\n                    alert(\"Please select a target node\");\n                    return;\n                  }\n                  \n                  // Check if connection already exists\n                  const connectionExists = graphData.links.some(link => \n                    (link.source === connectionSource.id && link.target === connectionTarget) ||\n                    (link.source === connectionTarget && link.target === connectionSource.id)\n                  );\n                  \n                  if (connectionExists) {\n                    alert(\"This connection already exists\");\n                    return;\n                  }\n                  \n                  const newLink = {\n                    source: connectionSource.id,\n                    target: connectionTarget,\n                    strength: connectionStrength\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes],\n                    links: [...graphData.links, newLink]\n                  });\n                  \n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* AI Generated Feature Ideas */}\n                  {aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">AI Feature Suggestions</div>\n                      <div className=\"space-y-2\">\n                        {aiInsights.featureIdeas.map((idea, index) => (\n                          <div key={index} className=\"bg-blue-50 p-2 rounded\">\n                            <div className=\"font-medium text-blue-800\">{idea.name}</div>\n                            <div className=\"text-sm text-blue-600 mt-1\">{idea.description}</div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Implementation Details */}\n                  {aiInsights.implementationDetails && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Implementation Details</div>\n                      <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                        {aiInsights.implementationDetails}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Common Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Relevant Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Persona Insights */}\n                  {aiInsights.personaInsights && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">User Insights</div>\n                      <div className=\"bg-orange-50 p-3 rounded text-sm text-orange-800\">\n                        {aiInsights.personaInsights}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                        <span>{result.user_role}</span>\n                        <span>{result.theme}</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Import Data Modal */}\n      {showModal && modalType === 'import' && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4\">Import Data</h2>\n            \n            <div className=\"mb-4\">\n              <p className=\"text-gray-600 mb-2\">\n                You can import data in two formats:\n              </p>\n              <ol className=\"list-decimal pl-5 mb-3 text-sm\">\n                <li className=\"mb-1\">\n                  <strong>Simple feedback format:</strong> A JSON file with a \"feedback\" array containing user feedback items\n                </li>\n                <li className=\"mb-1\">\n                  <strong>Advanced graph format:</strong> A JSON file with \"nodes\" and \"links\" arrays for direct graph manipulation\n                </li>\n              </ol>\n              \n              <div className=\"flex justify-between mb-4\">\n                <button\n                  onClick={downloadSampleTemplate}\n                  className=\"text-blue-600 text-sm hover:underline flex items-center\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\n                  </svg>\n                  Download Sample Template\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 mb-2\">Select JSON File</label>\n              <input \n                type=\"file\" \n                accept=\".json\"\n                onChange={importData}\n                className=\"w-full p-2 border border-gray-300 rounded\"\n              />\n            </div>\n            \n            {error && (\n              <div className=\"mb-4 p-3 bg-red-100 text-red-800 rounded\">\n                <p className=\"font-semibold mb-1\">Error:</p>\n                <p className=\"whitespace-pre-line text-sm\">{error}</p>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end\">\n              <button \n                onClick={() => {\n                  setShowModal(false);\n                  setError(null);\n                }}\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 mr-2\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}