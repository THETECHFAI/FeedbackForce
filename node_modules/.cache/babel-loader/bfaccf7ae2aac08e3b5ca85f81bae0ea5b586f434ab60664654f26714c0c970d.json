{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes).force(\"link\", d3.forceLink(graphData.links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)) // Increased strength\n    .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05)); // Increased strength\n\n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n\n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n\n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n\n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n\n      // Update positions\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n\n      // Update mini-map if it exists\n      if (showMiniMap) {\n        const miniMapContainer = svg.select(\".mini-map-container\");\n        if (!miniMapContainer.empty()) {\n          // Find the bounds of all nodes\n          let minX = Infinity,\n            minY = Infinity,\n            maxX = -Infinity,\n            maxY = -Infinity;\n          graphData.nodes.forEach(node => {\n            if (node.x < minX) minX = node.x;\n            if (node.y < minY) minY = node.y;\n            if (node.x > maxX) maxX = node.x;\n            if (node.y > maxY) maxY = node.y;\n          });\n\n          // Add padding\n          const padding = 50;\n          minX -= padding;\n          minY -= padding;\n          maxX += padding;\n          maxY += padding;\n\n          // Calculate the scale to fit all nodes in the mini-map\n          const miniMapSize = miniMapSizeRef.current;\n          const scaleX = miniMapSize / (maxX - minX);\n          const scaleY = miniMapSize / (maxY - minY);\n          const scale = Math.min(scaleX, scaleY);\n\n          // Calculate the center offset\n          const centerOffsetX = (miniMapSize - (maxX - minX) * scale) / 2;\n          const centerOffsetY = (miniMapSize - (maxY - minY) * scale) / 2;\n\n          // Update mini-map nodes\n          svg.selectAll(\".mini-node\").attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX).attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n        }\n      }\n    });\n\n    // Create links\n    const link = g.append(\"g\").selectAll(\"line\").data(graphData.links).enter().append(\"line\").attr(\"stroke-width\", d => {\n      // Base thickness on strength and feedback weight\n      const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n\n      // If the link connects to a theme, adjust thickness based on feedbackWeight\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (sourceNode && sourceNode.type === \"theme\" || targetNode && targetNode.type === \"theme\") {\n        // Adjust thickness based on feedback weight slider\n        // Higher feedbackWeight means thinner lines (inverse relationship)\n        return baseThickness * (10 / feedbackWeight);\n      }\n      return baseThickness;\n    }).attr(\"stroke\", d => {\n      // Your existing stroke color logic\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (!sourceNode || !targetNode) return \"#999\";\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"theme\" || sourceNode.type === \"theme\" && targetNode.type === \"persona\") {\n        return \"#F59E0B\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"feature\" || sourceNode.type === \"feature\" && targetNode.type === \"persona\") {\n        return \"#10B981\";\n      }\n      return \"#999\";\n    }).attr(\"stroke-opacity\", d => {\n      // Make links more visible based on strength\n      return 0.3 + d.strength * 0.7;\n    }).attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n\n    // Create node groups\n    const nodeGroup = g.append(\"g\").selectAll(\"g\").data(graphData.nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\", dragEnded)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      handleNodeClick(d);\n    });\n\n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 10 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 12;\n        return 10;\n      }\n      return 12;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5);\n\n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\").filter(d => d.type === \"theme\").transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", function repeat() {\n      d3.select(this).transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", repeat);\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return -15 - d.feedbackCount / feedbackWeight;\n      return -15;\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\").attr(\"pointer-events\", \"none\");\n\n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        linkedNodes.add(selectedNode.id);\n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n\n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n\n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n\n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\").attr(\"class\", \"mini-map\").attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n\n      // Add a more visible background\n      miniMap.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"white\").attr(\"stroke\", \"#333\").attr(\"stroke-width\", 2).attr(\"rx\", 4);\n\n      // Add a title to the mini-map\n      miniMap.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", 15).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"font-weight\", \"bold\").text(\"Mini-Map\");\n\n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({\n        x: n.x || 0,\n        y: n.y || 0\n      }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n\n      // Scale for mini-map\n      const miniMapScale = Math.min(miniMapSize / graphWidth, miniMapSize / graphHeight) * 0.9;\n\n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n\n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\").data(graphData.nodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3) // Larger dots\n      .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2).attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2).attr(\"fill\", d => colorScale(d.type));\n\n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\").attr(\"class\", \"viewport\").attr(\"width\", dimensions.width * miniMapScale).attr(\"height\", dimensions.height * miniMapScale).attr(\"x\", dimensions.width / 2 * miniMapScale - dimensions.width * miniMapScale / 2 + miniMapSize / 2).attr(\"y\", dimensions.height / 2 * miniMapScale - dimensions.height * miniMapScale / 2 + miniMapSize / 2).attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n      .attr(\"stroke\", \"#3b82f6\").attr(\"stroke-width\", 2);\n\n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect.attr(\"width\", dimensions.width * miniMapScale / transform.k).attr(\"height\", dimensions.height * miniMapScale / transform.k).attr(\"x\", -transform.x * miniMapScale / transform.k + miniMapSize / 2).attr(\"y\", -transform.y * miniMapScale / transform.k + miniMapSize / 2);\n      });\n\n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", event => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity.translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty).scale(1));\n      });\n\n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n\n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n\n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n\n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n\n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n\n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n\n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n\n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n\n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    console.log(\"Persona counts:\", personaCounts); // Debug log\n\n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n\n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id).map(link => {\n          const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n          return connectedNodeId;\n        });\n        const connectedThemes = graphData.nodes.filter(n => n.type === \"theme\" && connectedThemeIds.includes(n.id));\n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => sum + (themeCounts[theme.name] || 0), 0);\n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      return node;\n    });\n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n\n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n\n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n\n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n\n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n\n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n\n      // Group feedback by theme\n      const feedbackByTheme = {};\n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n\n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        feedbackByTheme[theme].push(item);\n      });\n\n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n\n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => item.text.toLowerCase().includes(theme.name.toLowerCase()));\n        relatedFeedback.push(...themeFeedback);\n      });\n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    setIsAIProcessing(true);\n    setAIError(null);\n\n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n\n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n\n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n\n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n\n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n\n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n\n      // Extract simple keywords\n      const keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n\n    // Create a copy of the current graph data\n    const updatedGraphData = {\n      ...graphData\n    };\n\n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n\n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n\n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => node.type === \"persona\" && node.name === feedback.user_role);\n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n\n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => link.source === themeNode.id && link.target === personaNode.id || link.source === personaNode.id && link.target === themeNode.id);\n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n\n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n\n  // Update the mini-map creation and positioning code\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n    const miniMapMargin = 10;\n\n    // Store the size in the ref for use in the tick function\n    miniMapSizeRef.current = miniMapSize;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${dimensions.height - miniMapSize - miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"stroke\", \"#cbd5e0\").attr(\"stroke-width\", 1).attr(\"rx\", 4);\n\n    // Find the bounds of all nodes to calculate the scale\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate the scale to fit all nodes in the mini-map\n    const scaleX = miniMapSize / (maxX - minX);\n    const scaleY = miniMapSize / (maxY - minY);\n    const scale = Math.min(scaleX, scaleY);\n\n    // Store the scale in the ref for use in the tick function\n    miniMapScaleRef.current = scale;\n\n    // Calculate the center offset to center the nodes in the mini-map\n    const centerOffsetX = (miniMapSize - (maxX - minX) * scale) / 2;\n    const centerOffsetY = (miniMapSize - (maxY - minY) * scale) / 2;\n\n    // Add mini-map nodes\n    miniMapContainer.selectAll(\".mini-node\").data(graphData.nodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 2).attr(\"fill\", d => colorScale(d.type)).attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX).attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 5).attr(\"y\", 12).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4a5568\").text(\"Mini-Map\");\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n\n    // Update the tick function to use these calculations\n    simulation.on(\"tick\", () => {\n      // ... existing tick code\n\n      // Update mini-map nodes\n      svg.selectAll(\".mini-node\").attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX).attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n    });\n  };\n\n  // Add this function to toggle the mini-map\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        createMiniMap();\n      }, 50);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1663,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1661,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1671,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1672,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1673,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1670,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1689,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1726,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1730,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1731,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1725,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1716,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1744,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1752,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1750,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: () => {\n              if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                setGraphData(initialData);\n              }\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1773,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1779,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1785,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1791,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1771,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1802,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1831,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: () => {\n              if (selectedNode) {\n                setConnectionSource(selectedNode);\n\n                // Filter available targets based on the source node type\n                let targets = [];\n                if (selectedNode.type === \"theme\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"feature\" || node.type === \"persona\"));\n                } else if (selectedNode.type === \"feature\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"theme\" || node.type === \"persona\"));\n                } else if (selectedNode.type === \"persona\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"theme\" || node.type === \"feature\"));\n                }\n                setAvailableTargets(targets);\n                setShowConnectionModal(true);\n              }\n            },\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1832,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1830,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1870,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1879,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1869,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1884,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1896,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1902,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1882,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1829,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1919,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1912,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1940,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1936,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1951,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1954,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1950,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1966,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1974,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1975,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1976,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1969,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1965,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1982,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!newNodeName.trim()) {\n                alert(\"Please enter a name\");\n                return;\n              }\n              const newNode = {\n                id: `${modalType}-${Date.now()}`,\n                name: newNodeName,\n                type: modalType,\n                ...(modalType === 'theme' ? {\n                  feedbackCount: newNodeFeedbackCount\n                } : {}),\n                ...(modalType === 'feature' ? {\n                  priority: newNodePriority\n                } : {})\n              };\n              setGraphData({\n                nodes: [...graphData.nodes, newNode],\n                links: [...graphData.links]\n              });\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1993,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1981,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1931,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2031,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2036,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2039,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2035,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2045,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2053,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2055,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2048,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2044,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2063,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2066,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2062,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2078,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!connectionTarget) {\n                alert(\"Please select a target node\");\n                return;\n              }\n\n              // Check if connection already exists\n              const connectionExists = graphData.links.some(link => link.source === connectionSource.id && link.target === connectionTarget || link.source === connectionTarget && link.target === connectionSource.id);\n              if (connectionExists) {\n                alert(\"This connection already exists\");\n                return;\n              }\n              const newLink = {\n                source: connectionSource.id,\n                target: connectionTarget,\n                strength: connectionStrength\n              };\n              setGraphData({\n                nodes: [...graphData.nodes],\n                links: [...graphData.links, newLink]\n              });\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2089,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2077,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2030,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2029,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleFeedbackSubmit,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2184,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2183,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2166,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2192,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2134,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2211,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2210,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2248,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2247,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2259,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2260,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2258,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2275,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2276,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2274,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2285,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2286,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2284,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2273,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2301,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2302,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2300,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2315,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: result.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2320,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2322,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2323,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2321,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2319,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2329,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1684,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"+oQT8OObBONAZEvyWxQjmj1Olr4=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","event","file","files","reader","FileReader","onload","e","importedData","parse","result","err","readAsText","importSimplifiedData","feedback","Array","isArray","processFeedbackBatch","current","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","padding","forEach","node","x","y","fx","fy","Math","random","tick","vx","vy","link","nodeGroup","miniMapContainer","empty","minX","Infinity","minY","maxX","maxY","miniMapSize","scaleX","scaleY","scale","min","centerOffsetX","centerOffsetY","data","enter","baseThickness","sourceNode","find","n","targetNode","isNew","drag","dragStarted","dragged","dragEnded","stopPropagation","handleNodeClick","filter","transition","duration","repeat","text","linkedNodes","Set","l","add","sourceId","targetId","has","active","alphaTarget","restart","stop","miniMapMargin","miniMap","nodePositions","map","xExtent","extent","yExtent","graphWidth","max","graphHeight","miniMapScale","viewportRect","zoomTransform","k","pointer","tx","ty","zoomIdentity","translate","console","log","centerView","fitToScreen","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","clearTimeout","addTheme","length","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","push","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","zoomIn","currentTransform","zoomOut","centerX","centerY","initiateConnection","handleSearchResultClick","recalculateFeedbackCounts","themeCounts","personaCounts","item","user_role","theme","results","existingInsight","feedbackIndex","toLowerCase","updatedNodes","connectedThemeIds","connectedNodeId","connectedThemes","totalFeedbackCount","reduce","sum","togglePanelCollapse","contentWidth","contentHeight","existingThemes","classificationResult","mockClassifyFeedback","updateGraphWithClassification","relatedFeedback","connections","connectedNodes","connectedNode","themeInsights","connectedFeatures","connectedPersonas","index","sentiment","keywords","split","word","replace","slice","personaFeedback","actualFeedbackCount","feedbackByTheme","personaInsights","persona","themeBreakdown","Object","keys","count","themeFeedback","featureInsights","feature","description","t","join","isFeatureView","focusOnNode","handleFeedbackSubmit","trim","newItem","Date","now","timestamp","toISOString","updatedFeedbackItems","some","Promise","resolve","themeNode","newThemes","updatedGraphData","personaNode","existingLink","createMiniMap","toggleMiniMap","newShowMiniMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","style","backgroundColor","accept","confirm","title","disabled","parseInt","ref","marginRight","newNode","toFixed","step","parseFloat","connectionExists","newLink","rows","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes)\n      .force(\"link\", d3.forceLink(graphData.links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)) // Increased strength\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05)); // Increased strength\n    \n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n      \n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n    \n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n      \n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n      \n      // Update positions\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n      \n      // Update mini-map if it exists\n      if (showMiniMap) {\n        const miniMapContainer = svg.select(\".mini-map-container\");\n        if (!miniMapContainer.empty()) {\n          // Find the bounds of all nodes\n          let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n          \n          graphData.nodes.forEach(node => {\n            if (node.x < minX) minX = node.x;\n            if (node.y < minY) minY = node.y;\n            if (node.x > maxX) maxX = node.x;\n            if (node.y > maxY) maxY = node.y;\n          });\n          \n          // Add padding\n          const padding = 50;\n          minX -= padding;\n          minY -= padding;\n          maxX += padding;\n          maxY += padding;\n          \n          // Calculate the scale to fit all nodes in the mini-map\n          const miniMapSize = miniMapSizeRef.current;\n          const scaleX = miniMapSize / (maxX - minX);\n          const scaleY = miniMapSize / (maxY - minY);\n          const scale = Math.min(scaleX, scaleY);\n          \n          // Calculate the center offset\n          const centerOffsetX = (miniMapSize - (maxX - minX) * scale) / 2;\n          const centerOffsetY = (miniMapSize - (maxY - minY) * scale) / 2;\n          \n          // Update mini-map nodes\n          svg.selectAll(\".mini-node\")\n            .attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX)\n            .attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n        }\n      }\n    });\n    \n    // Create links\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(graphData.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", d => {\n        // Base thickness on strength and feedback weight\n        const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n        \n        // If the link connects to a theme, adjust thickness based on feedbackWeight\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if ((sourceNode && sourceNode.type === \"theme\") || (targetNode && targetNode.type === \"theme\")) {\n          // Adjust thickness based on feedback weight slider\n          // Higher feedbackWeight means thinner lines (inverse relationship)\n          return baseThickness * (10 / feedbackWeight);\n        }\n        \n        return baseThickness;\n      })\n      .attr(\"stroke\", d => {\n        // Your existing stroke color logic\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if (!sourceNode || !targetNode) return \"#999\";\n        \n        if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n          return \"#6366F1\";\n        } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n          return \"#6366F1\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"theme\") ||\n                   (sourceNode.type === \"theme\" && targetNode.type === \"persona\")) {\n          return \"#F59E0B\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"feature\") ||\n                   (sourceNode.type === \"feature\" && targetNode.type === \"persona\")) {\n          return \"#10B981\";\n        }\n        \n        return \"#999\";\n      })\n      .attr(\"stroke-opacity\", d => {\n        // Make links more visible based on strength\n        return 0.3 + (d.strength * 0.7);\n      })\n      .attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n    \n    // Create node groups\n    const nodeGroup = g.append(\"g\")\n      .selectAll(\"g\")\n      .data(graphData.nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragStarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragEnded)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        handleNodeClick(d);\n      });\n    \n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 10 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 12;\n          return 10;\n        }\n        return 12;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5);\n    \n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\")\n      .filter(d => d.type === \"theme\")\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n      .on(\"end\", function repeat() {\n        d3.select(this)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n          .on(\"end\", repeat);\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return -15 - (d.feedbackCount / feedbackWeight);\n        return -15;\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#333\")\n      .attr(\"pointer-events\", \"none\");\n    \n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      \n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        \n        linkedNodes.add(selectedNode.id);\n        \n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        \n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n    \n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n      \n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n      \n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\")\n        .attr(\"class\", \"mini-map\")\n        .attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n      \n      // Add a more visible background\n      miniMap.append(\"rect\")\n        .attr(\"width\", miniMapSize)\n        .attr(\"height\", miniMapSize)\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"rx\", 4);\n      \n      // Add a title to the mini-map\n      miniMap.append(\"text\")\n        .attr(\"x\", miniMapSize / 2)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"font-weight\", \"bold\")\n        .text(\"Mini-Map\");\n      \n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({ x: n.x || 0, y: n.y || 0 }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      \n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n      \n      // Scale for mini-map\n      const miniMapScale = Math.min(\n        miniMapSize / graphWidth,\n        miniMapSize / graphHeight\n      ) * 0.9;\n      \n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n      \n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\")\n        .data(graphData.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"mini-node\")\n        .attr(\"r\", 3) // Larger dots\n        .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"fill\", d => colorScale(d.type));\n      \n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\")\n        .attr(\"class\", \"viewport\")\n        .attr(\"width\", dimensions.width * miniMapScale)\n        .attr(\"height\", dimensions.height * miniMapScale)\n        .attr(\"x\", (dimensions.width / 2) * miniMapScale - (dimensions.width * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"y\", (dimensions.height / 2) * miniMapScale - (dimensions.height * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n        .attr(\"stroke\", \"#3b82f6\")\n        .attr(\"stroke-width\", 2);\n      \n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect\n          .attr(\"width\", dimensions.width * miniMapScale / transform.k)\n          .attr(\"height\", dimensions.height * miniMapScale / transform.k)\n          .attr(\"x\", (-transform.x * miniMapScale / transform.k) + miniMapSize / 2)\n          .attr(\"y\", (-transform.y * miniMapScale / transform.k) + miniMapSize / 2);\n      });\n      \n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", (event) => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        \n        svg.transition()\n          .duration(500)\n          .call(\n            zoomRef.current.transform,\n            d3.zoomIdentity\n              .translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty)\n              .scale(1)\n          );\n      });\n      \n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n    \n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n    \n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n    \n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n    \n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n      \n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => \n          feedbackItems[result.feedbackIndex] && \n          feedbackItems[result.feedbackIndex].id === item.id\n        );\n        \n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n      \n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n      \n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    \n    console.log(\"Persona counts:\", personaCounts); // Debug log\n    \n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      \n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n      \n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links\n          .filter(link => (link.source.id === node.id || link.target.id === node.id))\n          .map(link => {\n            const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n            return connectedNodeId;\n          });\n        \n        const connectedThemes = graphData.nodes.filter(n => \n          n.type === \"theme\" && connectedThemeIds.includes(n.id)\n        );\n        \n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => \n          sum + (themeCounts[theme.name] || 0), 0\n        );\n        \n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      \n      return node;\n    });\n    \n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n      \n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n      \n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      \n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n    \n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n      \n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n      \n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n      \n      // Group feedback by theme\n      const feedbackByTheme = {};\n      \n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n        \n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => \n            feedbackItems[result.feedbackIndex] && \n            feedbackItems[result.feedbackIndex].id === item.id\n          );\n          \n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        \n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        \n        feedbackByTheme[theme].push(item);\n      });\n      \n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      \n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => \n          item.text.toLowerCase().includes(theme.name.toLowerCase())\n        );\n        relatedFeedback.push(...themeFeedback);\n      });\n      \n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    \n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n      \n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        return node;\n      });\n      \n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n      \n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      \n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n      \n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n      \n      // Extract simple keywords\n      const keywords = item.text.split(' ')\n        .filter(word => word.length > 3)\n        .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n        .slice(0, 3);\n      \n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    \n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n    \n    // Create a copy of the current graph data\n    const updatedGraphData = { ...graphData };\n    \n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n      \n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => \n        node.type === \"theme\" && node.name === result.theme\n      );\n      \n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n      \n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => \n        node.type === \"persona\" && node.name === feedback.user_role\n      );\n      \n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n      \n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => \n        (link.source === themeNode.id && link.target === personaNode.id) ||\n        (link.source === personaNode.id && link.target === themeNode.id)\n      );\n      \n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n    \n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n\n  // Update the mini-map creation and positioning code\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n    const miniMapMargin = 10;\n    \n    // Store the size in the ref for use in the tick function\n    miniMapSizeRef.current = miniMapSize;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${dimensions.height - miniMapSize - miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"stroke\", \"#cbd5e0\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"rx\", 4);\n    \n    // Find the bounds of all nodes to calculate the scale\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate the scale to fit all nodes in the mini-map\n    const scaleX = miniMapSize / (maxX - minX);\n    const scaleY = miniMapSize / (maxY - minY);\n    const scale = Math.min(scaleX, scaleY);\n    \n    // Store the scale in the ref for use in the tick function\n    miniMapScaleRef.current = scale;\n    \n    // Calculate the center offset to center the nodes in the mini-map\n    const centerOffsetX = (miniMapSize - (maxX - minX) * scale) / 2;\n    const centerOffsetY = (miniMapSize - (maxY - minY) * scale) / 2;\n    \n    // Add mini-map nodes\n    miniMapContainer.selectAll(\".mini-node\")\n      .data(graphData.nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 2)\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX)\n      .attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 5)\n      .attr(\"y\", 12)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4a5568\")\n      .text(\"Mini-Map\");\n    \n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    \n    // Update the tick function to use these calculations\n    simulation.on(\"tick\", () => {\n      // ... existing tick code\n      \n      // Update mini-map nodes\n      svg.selectAll(\".mini-node\")\n        .attr(\"cx\", d => (d.x - minX) * scale + centerOffsetX)\n        .attr(\"cy\", d => (d.y - minY) * scale + centerOffsetY);\n    });\n  };\n\n  // Add this function to toggle the mini-map\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    \n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        createMiniMap();\n      }, 50);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                  setGraphData(initialData);\n                }\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={() => {\n                if (selectedNode) {\n                  setConnectionSource(selectedNode);\n                  \n                  // Filter available targets based on the source node type\n                  let targets = [];\n                  if (selectedNode.type === \"theme\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"feature\" || node.type === \"persona\")\n                    );\n                  } else if (selectedNode.type === \"feature\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"theme\" || node.type === \"persona\")\n                    );\n                  } else if (selectedNode.type === \"persona\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"theme\" || node.type === \"feature\")\n                    );\n                  }\n                  \n                  setAvailableTargets(targets);\n                  setShowConnectionModal(true);\n                }\n              }}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!newNodeName.trim()) {\n                    alert(\"Please enter a name\");\n                    return;\n                  }\n                  \n                  const newNode = {\n                    id: `${modalType}-${Date.now()}`,\n                    name: newNodeName,\n                    type: modalType,\n                    ...(modalType === 'theme' ? { feedbackCount: newNodeFeedbackCount } : {}),\n                    ...(modalType === 'feature' ? { priority: newNodePriority } : {})\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes, newNode],\n                    links: [...graphData.links]\n                  });\n                  \n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!connectionTarget) {\n                    alert(\"Please select a target node\");\n                    return;\n                  }\n                  \n                  // Check if connection already exists\n                  const connectionExists = graphData.links.some(link => \n                    (link.source === connectionSource.id && link.target === connectionTarget) ||\n                    (link.source === connectionTarget && link.target === connectionSource.id)\n                  );\n                  \n                  if (connectionExists) {\n                    alert(\"This connection already exists\");\n                    return;\n                  }\n                  \n                  const newLink = {\n                    source: connectionSource.id,\n                    target: connectionTarget,\n                    strength: connectionStrength\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes],\n                    links: [...graphData.links, newLink]\n                  });\n                  \n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleFeedbackSubmit}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Rest of theme view content */}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Rest of feature view content */}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Rest of persona view content */}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                        <span>{result.user_role}</span>\n                        <span>{result.theme}</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}