{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes).force(\"link\", d3.forceLink(graphData.links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.01)).force(\"y\", d3.forceY(dimensions.height / 2).strength(0.01));\n\n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n\n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n\n      // Update positions\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n      if (showMiniMap) {\n        // Update mini-map nodes using the refs\n        svg.selectAll(\".mini-node\").attr(\"cx\", d => (d.x || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2).attr(\"cy\", d => (d.y || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2);\n      }\n    });\n\n    // Create links\n    const link = g.append(\"g\").selectAll(\"line\").data(graphData.links).enter().append(\"line\").attr(\"stroke-width\", d => {\n      // Base thickness on strength and feedback weight\n      const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n\n      // If the link connects to a theme, adjust thickness based on feedbackWeight\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (sourceNode && sourceNode.type === \"theme\" || targetNode && targetNode.type === \"theme\") {\n        // Adjust thickness based on feedback weight slider\n        // Higher feedbackWeight means thinner lines (inverse relationship)\n        return baseThickness * (10 / feedbackWeight);\n      }\n      return baseThickness;\n    }).attr(\"stroke\", d => {\n      // Your existing stroke color logic\n      const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n      const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n      if (!sourceNode || !targetNode) return \"#999\";\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n        return \"#6366F1\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"theme\" || sourceNode.type === \"theme\" && targetNode.type === \"persona\") {\n        return \"#F59E0B\";\n      } else if (sourceNode.type === \"persona\" && targetNode.type === \"feature\" || sourceNode.type === \"feature\" && targetNode.type === \"persona\") {\n        return \"#10B981\";\n      }\n      return \"#999\";\n    }).attr(\"stroke-opacity\", d => {\n      // Make links more visible based on strength\n      return 0.3 + d.strength * 0.7;\n    }).attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n\n    // Create node groups\n    const nodeGroup = g.append(\"g\").selectAll(\"g\").data(graphData.nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\", dragEnded)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      handleNodeClick(d);\n    });\n\n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 10 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 12;\n        return 10;\n      }\n      return 12;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1.5);\n\n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\").filter(d => d.type === \"theme\").transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", function repeat() {\n      d3.select(this).transition().duration(2000).attr(\"r\", d => (10 + d.feedbackCount / feedbackWeight) * 1.2).transition().duration(2000).attr(\"r\", d => 10 + d.feedbackCount / feedbackWeight).on(\"end\", repeat);\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return -15 - d.feedbackCount / feedbackWeight;\n      return -15;\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\").attr(\"pointer-events\", \"none\");\n\n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        linkedNodes.add(selectedNode.id);\n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n\n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n\n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n\n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\").attr(\"class\", \"mini-map\").attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n\n      // Add a more visible background\n      miniMap.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"white\").attr(\"stroke\", \"#333\").attr(\"stroke-width\", 2).attr(\"rx\", 4);\n\n      // Add a title to the mini-map\n      miniMap.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", 15).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").attr(\"font-weight\", \"bold\").text(\"Mini-Map\");\n\n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({\n        x: n.x || 0,\n        y: n.y || 0\n      }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n\n      // Scale for mini-map\n      const miniMapScale = Math.min(miniMapSize / graphWidth, miniMapSize / graphHeight) * 0.9;\n\n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n\n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\").data(graphData.nodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3) // Larger dots\n      .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2).attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2).attr(\"fill\", d => colorScale(d.type));\n\n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\").attr(\"class\", \"viewport\").attr(\"width\", dimensions.width * miniMapScale).attr(\"height\", dimensions.height * miniMapScale).attr(\"x\", dimensions.width / 2 * miniMapScale - dimensions.width * miniMapScale / 2 + miniMapSize / 2).attr(\"y\", dimensions.height / 2 * miniMapScale - dimensions.height * miniMapScale / 2 + miniMapSize / 2).attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n      .attr(\"stroke\", \"#3b82f6\").attr(\"stroke-width\", 2);\n\n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect.attr(\"width\", dimensions.width * miniMapScale / transform.k).attr(\"height\", dimensions.height * miniMapScale / transform.k).attr(\"x\", -transform.x * miniMapScale / transform.k + miniMapSize / 2).attr(\"y\", -transform.y * miniMapScale / transform.k + miniMapSize / 2);\n      });\n\n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", event => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        svg.transition().duration(500).call(zoomRef.current.transform, d3.zoomIdentity.translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty).scale(1));\n      });\n\n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, [graphData, dimensions, feedbackWeight, isSimulationRunning, selectedNode, highlightMode, showMiniMap]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity);\n  };\n\n  // Also fix the focusOnNode function\n  const focusOnNode = node => {\n    if (!svgRef.current || !zoomRef.current || !node) return;\n    const svg = d3.select(svgRef.current);\n    const width = dimensions.width;\n    const height = dimensions.height;\n\n    // Make sure we have x and y coordinates\n    if (typeof node.x === 'undefined' || typeof node.y === 'undefined') {\n      console.warn('Node does not have coordinates yet');\n      return;\n    }\n    svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity.translate(width / 2 - node.x, height / 2 - node.y).scale(1.5));\n  };\n\n  // Add this mock function with a more complete structure\n  const mockClassifyFeedback = async (feedbackItems, existingThemes = []) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Generate a unique theme ID that will be consistent\n    const getThemeId = themeName => {\n      return `theme-${themeName.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n    };\n    return {\n      results: feedbackItems.map((item, index) => {\n        // Determine theme based on content\n        let themeName = \"General Feedback\";\n        if (item.text.toLowerCase().includes('interface') || item.text.toLowerCase().includes('ui')) {\n          themeName = \"User Interface\";\n        } else if (item.text.toLowerCase().includes('slow') || item.text.toLowerCase().includes('performance')) {\n          themeName = \"Performance Issues\";\n        }\n\n        // Check if this theme already exists\n        const themeExists = existingThemes.some(t => t.name === themeName);\n        return {\n          feedbackIndex: index,\n          theme: themeName,\n          themeId: getThemeId(themeName),\n          // Add a consistent theme ID\n          isNewTheme: !themeExists,\n          priority: 7,\n          sentiment: item.text.toLowerCase().includes('love') || item.text.toLowerCase().includes('great') ? \"positive\" : item.text.toLowerCase().includes('hate') || item.text.toLowerCase().includes('bad') ? \"negative\" : \"neutral\",\n          keywords: item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3)\n        };\n      }),\n      newThemes: []\n    };\n  };\n\n  // Update the updateGraphWithClassification function\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) {\n      console.error(\"Invalid classification result:\", classificationResult);\n      return;\n    }\n    const {\n      results,\n      newThemes\n    } = classificationResult;\n\n    // Create a copy of the current graph data\n    const updatedGraphData = {\n      nodes: [...graphData.nodes],\n      links: [...graphData.links]\n    };\n\n    // Process each feedback result\n    results.forEach(result => {\n      const feedback = feedbackItems[result.feedbackIndex];\n\n      // Find or create the theme - use the themeId from the result if available\n      let themeNode;\n      const themeId = result.themeId || `theme-${result.theme.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n\n      // First check if the theme already exists in our graph\n      themeNode = updatedGraphData.nodes.find(n => n.type === \"theme\" && (n.id === themeId || n.name === result.theme));\n\n      // If not found, create a new theme node\n      if (!themeNode) {\n        themeNode = {\n          id: themeId,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1,\n          isNew: true\n        };\n        updatedGraphData.nodes.push(themeNode);\n        console.log(\"Created new theme node:\", themeNode);\n      } else {\n        // If found, increment its feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n\n      // Find or create the persona based on user role\n      const personaId = `persona-${feedback.user_role.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n      let personaNode = updatedGraphData.nodes.find(n => n.type === \"persona\" && (n.id === personaId || n.name === feedback.user_role));\n      if (!personaNode) {\n        personaNode = {\n          id: personaId,\n          name: feedback.user_role,\n          type: \"persona\",\n          isNew: true\n        };\n        updatedGraphData.nodes.push(personaNode);\n        console.log(\"Created new persona node:\", personaNode);\n      }\n\n      // Create a link between the persona and the theme\n      const personaThemeLink = {\n        source: personaNode.id,\n        target: themeNode.id,\n        strength: result.priority / 10,\n        // Convert priority (1-10) to strength (0.1-1.0)\n        sentiment: result.sentiment\n      };\n\n      // Check if this link already exists\n      const existingLink = updatedGraphData.links.find(l => l.source === personaThemeLink.source && l.target === personaThemeLink.target);\n      if (!existingLink) {\n        updatedGraphData.links.push(personaThemeLink);\n        console.log(\"Created new link:\", personaThemeLink);\n      }\n    });\n\n    // Update the graph data\n    console.log(\"Updated graph data:\", updatedGraphData);\n    setGraphData(updatedGraphData);\n  };\n\n  // Update the mockGenerateFeatureIdeas function\n  const mockGenerateFeatureIdeas = async themes => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      features: themes.map((theme, index) => {\n        const featureName = `Improve ${theme.name.toLowerCase().replace(' issues', '')}`;\n        return {\n          themeIndex: index,\n          themeId: theme.id,\n          // Use the actual theme ID\n          name: featureName,\n          id: `feature-${featureName.toLowerCase().replace(/[^a-z0-9]/g, '-')}`,\n          description: `A new feature to address the ${theme.name.toLowerCase()} feedback.`,\n          priority: theme.feedbackCount > 5 ? \"High\" : \"Medium\",\n          complexity: \"Medium\"\n        };\n      })\n    };\n  };\n\n  // Update the generateFeaturesForThemes function\n  const generateFeaturesForThemes = async themes => {\n    try {\n      setIsAIProcessing(true);\n      const featureIdeasResult = await mockGenerateFeatureIdeas(themes);\n\n      // Update the graph with new features\n      const updatedGraphData = {\n        nodes: [...graphData.nodes],\n        links: [...graphData.links]\n      };\n      featureIdeasResult.features.forEach(feature => {\n        // Find the theme node\n        const themeNode = updatedGraphData.nodes.find(n => n.id === feature.themeId);\n        if (!themeNode) {\n          console.error(\"Theme node not found:\", feature.themeId);\n          return;\n        }\n\n        // Create a new feature node with a consistent ID\n        const featureNode = {\n          id: feature.id || `feature-${feature.name.toLowerCase().replace(/[^a-z0-9]/g, '-')}`,\n          name: feature.name,\n          type: \"feature\",\n          description: feature.description,\n          priority: feature.priority,\n          complexity: feature.complexity\n        };\n\n        // Check if this feature already exists\n        const existingFeature = updatedGraphData.nodes.find(n => n.id === featureNode.id);\n        if (!existingFeature) {\n          updatedGraphData.nodes.push(featureNode);\n          console.log(\"Created new feature node:\", featureNode);\n\n          // Create a link between the theme and the feature\n          const themeFeatureLink = {\n            source: themeNode.id,\n            target: featureNode.id,\n            strength: feature.priority === \"High\" ? 0.9 : feature.priority === \"Medium\" ? 0.6 : 0.3\n          };\n          updatedGraphData.links.push(themeFeatureLink);\n          console.log(\"Created new link:\", themeFeatureLink);\n        }\n      });\n\n      // Update the graph data\n      console.log(\"Updated graph data with features:\", updatedGraphData);\n      setGraphData(updatedGraphData);\n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error generating feature ideas:\", error);\n      setAIError(\"Failed to generate feature ideas. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the processFeedbackBatch function\n  const processFeedbackBatch = async feedbackBatch => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n\n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n\n      // Classify the feedback batch\n      const classificationResult = await mockClassifyFeedback(feedbackBatch, existingThemes);\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackBatch);\n\n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch with AI:\", error);\n      setAIError(\"Failed to process feedback batch with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    setIsAIProcessing(true);\n    setAIError(null);\n\n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n\n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this function to your component to handle node clicks\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n\n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase()) || aiInsights && aiInsights.results && aiInsights.results.some(result => result.theme === node.name && feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n      });\n\n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n\n          // Check if we have AI insights for this feedback\n          if (aiInsights && aiInsights.results) {\n            const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n            if (existingInsight) {\n              sentiment = existingInsight.sentiment;\n              priority = existingInsight.priority;\n              keywords = existingInsight.keywords || keywords;\n            }\n          }\n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n\n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Group feedback by theme\n      const feedbackByTheme = {};\n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n\n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        feedbackByTheme[theme].push(item);\n      });\n\n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n\n          // Check if we have AI insights for this feedback\n          if (aiInsights && aiInsights.results) {\n            const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n            if (existingInsight) {\n              sentiment = existingInsight.sentiment;\n              priority = existingInsight.priority;\n              theme = existingInsight.theme;\n              keywords = existingInsight.keywords || keywords;\n            }\n          }\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      if (connectedNodes.length > 0) {\n        // Group connected nodes by type\n        const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n        const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n\n        // Get related feedback through connected themes\n        const relatedFeedback = [];\n        connectedThemes.forEach(theme => {\n          const themeFeedback = feedbackItems.filter(item => item.text.toLowerCase().includes(theme.name.toLowerCase()));\n          relatedFeedback.push(...themeFeedback);\n        });\n        const featureInsights = {\n          feature: node.name,\n          priority: node.priority || \"Medium\",\n          description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n          connectedThemes,\n          connectedPersonas,\n          isFeatureView: true,\n          results: relatedFeedback.map((item, index) => {\n            // Try to find existing classification for this feedback\n            let sentiment = \"neutral\";\n            let priority = 5;\n            let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n            let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n            return {\n              feedbackIndex: index,\n              theme,\n              text: item.text,\n              user_role: item.user_role,\n              sentiment,\n              priority,\n              keywords\n            };\n          })\n        };\n        setAIInsights(featureInsights);\n        setShowAIInsightsPanel(true);\n      }\n    }\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1418,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer flex items-center\",\n              onClick: () => handleSearchResultClick(result),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 rounded-full mr-2\",\n                style: {\n                  backgroundColor: colorScale(result.type)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1473,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500\",\n                  children: result.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1474,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              onChange: importData,\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: resetVisualization,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: [isSimulationRunning ? 'Pause' : 'Resume', \" Simulation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setShowMiniMap(!showMiniMap),\n            children: [showMiniMap ? 'Hide' : 'Show', \" Mini-Map\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 p-2 bg-gray-100 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium text-gray-700\",\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-orange-600 text-white rounded hover:bg-orange-700 text-sm\",\n            onClick: () => {\n              if (selectedNode) {\n                initiateConnection(selectedNode);\n              } else {\n                alert(\"Please select a node first\");\n              }\n            },\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 w-48\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: feedbackWeight,\n              onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1584,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-1 min-w-[60px]\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-2 w-12 bg-gray-300 rounded-full relative\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute top-0 left-0 h-2 bg-blue-500 rounded-full\",\n                  style: {\n                    width: `${feedbackWeight / 10 * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1594,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1593,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs font-medium\",\n                children: feedbackWeight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1599,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1592,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-medium\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('none'),\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('themes'),\n              children: \"Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('features'),\n              children: \"Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1619,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-2 py-1 text-xs rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n              onClick: () => setHighlightMode('personas'),\n              children: \"Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1625,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1606,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-gray-50 p-4\",\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1636,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomIn,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomOut,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M18 12H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1661,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1660,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: centerView,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1669,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1664,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1647,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1677,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Feedback Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1681,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Feature Ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full bg-orange-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1685,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"User Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1686,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 11\n        }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 px-4 py-2 rounded-md flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: selectedNode.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1694,\n              columnNumber: 17\n            }, this), selectedNode.type === 'theme' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" (\", selectedNode.feedbackCount, \" feedbacks)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1696,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 px-2 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-xs\",\n            onClick: () => focusOnNode(selectedNode),\n            children: \"Focus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ml-2 px-2 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-xs\",\n            onClick: connectNodes,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1705,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1692,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1675,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1674,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: modalType === 'theme' ? 'Add New Feedback Theme' : 'Add New Feature Idea'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1720,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1725,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1728,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 13\n        }, this), modalType === 'theme' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1738,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"100\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(Number(e.target.value)),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1741,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1737,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1752,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1760,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1761,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1762,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1755,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1751,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleModalSubmit,\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1774,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1767,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1719,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Create Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"From: \", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1792,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1791,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1798,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: availableTargets.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: node.id,\n              children: [node.name, \" (\", node.type, \")\"]\n            }, node.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1807,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(Number(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1818,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between text-xs text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Weak\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Strong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1829,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1827,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowConnectionModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1834,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConnectionSubmit,\n            className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\",\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1840,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1833,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1788,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomIn,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1858,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1857,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1853,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: zoomOut,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M18 12H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1866,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1861,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\",\n        onClick: centerView,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1874,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1873,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1869,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1852,\n      columnNumber: 7\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1883,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1886,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            rows: \"4\",\n            placeholder: \"Enter user feedback here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1889,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1885,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1899,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            placeholder: \"e.g., Product Manager, Developer, etc.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1902,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1898,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFeedbackModal(false),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\",\n            disabled: isAIProcessing,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1912,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFeedbackSubmit,\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\",\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1927,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1928,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1926,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true) : 'Add Feedback'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1919,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1939,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1882,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1881,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed right-0 top-0 h-full w-80 bg-white shadow-lg p-4 overflow-y-auto z-40\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1951,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"text-gray-500 hover:text-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1961,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1960,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1956,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1950,\n        columnNumber: 11\n      }, this), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1970,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n            children: aiInsights.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1971,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1969,\n          columnNumber: 15\n        }, this), aiInsights.description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1982,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: aiInsights.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1983,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1981,\n          columnNumber: 17\n        }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: \"Related Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: theme.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1992,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [Math.round(theme.connectionStrength * 100), \"% match\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1993,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1991,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1988,\n          columnNumber: 17\n        }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: \"User Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2003,\n            columnNumber: 19\n          }, this), aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-orange-50 p-2 rounded mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: persona.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2006,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2005,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2002,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), aiInsights.persona && aiInsights.themeBreakdown && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 mb-1\",\n          children: \"Feedback Themes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2017,\n          columnNumber: 15\n        }, this), aiInsights.themeBreakdown.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: item.theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2020,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs bg-blue-200 px-2 py-1 rounded-full\",\n            children: [item.count, \" items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2021,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2019,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2016,\n        columnNumber: 13\n      }, this), aiInsights.newThemes && aiInsights.newThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-sm text-gray-600 mb-2\",\n          children: \"New Themes Identified\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2032,\n          columnNumber: 15\n        }, this), aiInsights.newThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-2 rounded mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: theme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2035,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600\",\n            children: theme.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2036,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2034,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2031,\n        columnNumber: 13\n      }, this), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-sm text-gray-600 mb-2\",\n          children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2045,\n          columnNumber: 15\n        }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-2 rounded mb-2\",\n          children: [result.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mb-1 italic\",\n            children: [\"\\\"\", result.text, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2051,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: result.theme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2054,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-xs px-2 py-1 rounded ${result.sentiment === 'positive' ? 'bg-green-100 text-green-800' : result.sentiment === 'negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n              children: result.sentiment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2055,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2053,\n            columnNumber: 19\n          }, this), result.user_role && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600 mt-1\",\n            children: [\"From: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: result.user_role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2065,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2064,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600 mt-1\",\n            children: [\"Priority: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: [result.priority, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2069,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2068,\n            columnNumber: 19\n          }, this), result.keywords && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1 mt-1\",\n            children: result.keywords.map((keyword, kidx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs bg-gray-200 px-1 rounded\",\n              children: keyword\n            }, kidx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2074,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2072,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2049,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 italic\",\n        children: \"No feedback data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2084,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1949,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1432,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"fnUEdvKd0g1mR6LRs9mD1UodEwE=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","event","file","files","reader","FileReader","onload","e","importedData","parse","result","err","readAsText","importSimplifiedData","feedback","Array","isArray","processFeedbackBatch","current","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","call","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","forEach","node","fx","fy","x","Math","random","y","tick","vx","vy","link","nodeGroup","data","enter","baseThickness","sourceNode","find","n","targetNode","isNew","drag","dragStarted","dragged","dragEnded","stopPropagation","handleNodeClick","filter","transition","duration","repeat","text","linkedNodes","Set","l","add","sourceId","targetId","has","active","alphaTarget","restart","stop","miniMapSize","min","miniMapMargin","miniMap","nodePositions","map","xExtent","extent","yExtent","graphWidth","max","graphHeight","miniMapScale","viewportRect","zoomTransform","k","pointer","tx","ty","zoomIdentity","translate","scale","console","log","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","addTheme","length","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","push","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","zoomIn","currentTransform","zoomOut","centerView","focusOnNode","warn","mockClassifyFeedback","existingThemes","Promise","resolve","getThemeId","themeName","toLowerCase","replace","results","item","index","themeExists","some","t","feedbackIndex","theme","themeId","isNewTheme","sentiment","keywords","split","word","slice","newThemes","updateGraphWithClassification","classificationResult","updatedGraphData","themeNode","personaId","user_role","personaNode","personaThemeLink","existingLink","mockGenerateFeatureIdeas","themes","features","featureName","themeIndex","description","complexity","generateFeaturesForThemes","featureIdeasResult","feature","featureNode","existingFeature","themeFeatureLink","feedbackBatch","handleFeedbackSubmit","trim","newItem","Date","now","timestamp","toISOString","updatedFeedbackItems","relatedFeedback","connections","connectedNodes","connectedNodeId","connectedNode","themeInsights","connectedFeatures","connectedPersonas","existingInsight","personaFeedback","feedbackByTheme","personaInsights","persona","connectedThemes","themeBreakdown","Object","keys","count","themeFeedback","featureInsights","join","isFeatureView","initiateConnection","handleSearchResultClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","style","backgroundColor","accept","parseInt","ref","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Number","step","rows","disabled","cx","cy","r","round","keyword","kidx","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes)\n      .force(\"link\", d3.forceLink(graphData.links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.01))\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.01));\n    \n    // Add this after your other forces\n    simulation.nodes().forEach(node => {\n      node.fx = null; // Remove any fixed positions\n      node.fy = null;\n    });\n\n    // Add a small random jitter to initial positions\n    graphData.nodes.forEach(node => {\n      node.x = dimensions.width / 2 + (Math.random() - 0.5) * dimensions.width * 0.8;\n      node.y = dimensions.height / 2 + (Math.random() - 0.5) * dimensions.height * 0.8;\n    });\n\n    // Optionally, add a small random force that changes over time\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n      \n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n      \n      // Update positions\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n      \n      if (showMiniMap) {\n        // Update mini-map nodes using the refs\n        svg.selectAll(\".mini-node\")\n          .attr(\"cx\", d => (d.x || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2)\n          .attr(\"cy\", d => (d.y || 0) * miniMapScaleRef.current + miniMapSizeRef.current / 2);\n      }\n    });\n    \n    // Create links\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(graphData.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", d => {\n        // Base thickness on strength and feedback weight\n        const baseThickness = d.strength * 3; // Increase the multiplier for more visible differences\n        \n        // If the link connects to a theme, adjust thickness based on feedbackWeight\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if ((sourceNode && sourceNode.type === \"theme\") || (targetNode && targetNode.type === \"theme\")) {\n          // Adjust thickness based on feedback weight slider\n          // Higher feedbackWeight means thinner lines (inverse relationship)\n          return baseThickness * (10 / feedbackWeight);\n        }\n        \n        return baseThickness;\n      })\n      .attr(\"stroke\", d => {\n        // Your existing stroke color logic\n        const sourceNode = graphData.nodes.find(n => n.id === (d.source.id || d.source));\n        const targetNode = graphData.nodes.find(n => n.id === (d.target.id || d.target));\n        \n        if (!sourceNode || !targetNode) return \"#999\";\n        \n        if (sourceNode.type === \"theme\" && targetNode.type === \"feature\") {\n          return \"#6366F1\";\n        } else if (sourceNode.type === \"feature\" && targetNode.type === \"theme\") {\n          return \"#6366F1\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"theme\") ||\n                   (sourceNode.type === \"theme\" && targetNode.type === \"persona\")) {\n          return \"#F59E0B\";\n        } else if ((sourceNode.type === \"persona\" && targetNode.type === \"feature\") ||\n                   (sourceNode.type === \"feature\" && targetNode.type === \"persona\")) {\n          return \"#10B981\";\n        }\n        \n        return \"#999\";\n      })\n      .attr(\"stroke-opacity\", d => {\n        // Make links more visible based on strength\n        return 0.3 + (d.strength * 0.7);\n      })\n      .attr(\"stroke-dasharray\", d => d.isNew ? \"5,5\" : \"none\");\n    \n    // Create node groups\n    const nodeGroup = g.append(\"g\")\n      .selectAll(\"g\")\n      .data(graphData.nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragStarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragEnded)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        handleNodeClick(d);\n      });\n    \n    // Add circles to node groups\n    const node = nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 10 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 12;\n          return 10;\n        }\n        return 12;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5);\n    \n    // Add pulsing animation to theme nodes\n    svg.selectAll(\"circle\")\n      .filter(d => d.type === \"theme\")\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n      .transition()\n      .duration(2000)\n      .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n      .on(\"end\", function repeat() {\n        d3.select(this)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => (10 + (d.feedbackCount / feedbackWeight)) * 1.2)\n          .transition()\n          .duration(2000)\n          .attr(\"r\", d => 10 + (d.feedbackCount / feedbackWeight))\n          .on(\"end\", repeat);\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return -15 - (d.feedbackCount / feedbackWeight);\n        return -15;\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#333\")\n      .attr(\"pointer-events\", \"none\");\n    \n    // Highlight mode implementation\n    if (highlightMode !== 'none' || selectedNode) {\n      link.attr(\"opacity\", 0.1);\n      node.attr(\"opacity\", 0.2);\n      \n      if (selectedNode) {\n        // Get connected nodes\n        const linkedNodes = new Set();\n        graphData.links.forEach(l => {\n          if (l.source.id === selectedNode.id || l.source === selectedNode.id) {\n            linkedNodes.add(l.target.id || l.target);\n          }\n          if (l.target.id === selectedNode.id || l.target === selectedNode.id) {\n            linkedNodes.add(l.source.id || l.source);\n          }\n        });\n        \n        linkedNodes.add(selectedNode.id);\n        \n        link.filter(l => {\n          const sourceId = l.source.id || l.source;\n          const targetId = l.target.id || l.target;\n          return linkedNodes.has(sourceId) && linkedNodes.has(targetId);\n        }).attr(\"opacity\", 1);\n        \n        node.filter(d => linkedNodes.has(d.id)).attr(\"opacity\", 1);\n      } else if (highlightMode === 'themes') {\n        node.filter(d => d.type === 'theme').attr(\"opacity\", 1);\n      } else if (highlightMode === 'features') {\n        node.filter(d => d.type === 'feature').attr(\"opacity\", 1);\n      }\n    }\n    \n    // Drag functions\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    // Pause simulation if needed\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create mini-map if enabled\n    if (showMiniMap) {\n      // Make the mini-map larger and more visible\n      const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n      const miniMapMargin = 20;\n      \n      // Store these values in the refs so they can be accessed from the tick function\n      miniMapSizeRef.current = miniMapSize;\n      \n      // Position it in the top-right corner with a clear background\n      const miniMap = svg.append(\"g\")\n        .attr(\"class\", \"mini-map\")\n        .attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${miniMapMargin})`);\n      \n      // Add a more visible background\n      miniMap.append(\"rect\")\n        .attr(\"width\", miniMapSize)\n        .attr(\"height\", miniMapSize)\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"#333\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"rx\", 4);\n      \n      // Add a title to the mini-map\n      miniMap.append(\"text\")\n        .attr(\"x\", miniMapSize / 2)\n        .attr(\"y\", 15)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"font-weight\", \"bold\")\n        .text(\"Mini-Map\");\n      \n      // Calculate bounds of the full graph\n      const nodePositions = graphData.nodes.map(n => ({ x: n.x || 0, y: n.y || 0 }));\n      const xExtent = d3.extent(nodePositions, d => d.x);\n      const yExtent = d3.extent(nodePositions, d => d.y);\n      \n      const graphWidth = Math.max(dimensions.width, xExtent[1] - xExtent[0] + 100);\n      const graphHeight = Math.max(dimensions.height, yExtent[1] - yExtent[0] + 100);\n      \n      // Scale for mini-map\n      const miniMapScale = Math.min(\n        miniMapSize / graphWidth,\n        miniMapSize / graphHeight\n      ) * 0.9;\n      \n      // Store the scale in the ref\n      miniMapScaleRef.current = miniMapScale;\n      \n      // Draw nodes on mini-map with larger dots\n      miniMap.selectAll(\".mini-node\")\n        .data(graphData.nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"mini-node\")\n        .attr(\"r\", 3) // Larger dots\n        .attr(\"cx\", d => (d.x || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"cy\", d => (d.y || 0) * miniMapScale + miniMapSize / 2)\n        .attr(\"fill\", d => colorScale(d.type));\n      \n      // Draw viewport rectangle with more visible styling\n      const viewportRect = miniMap.append(\"rect\")\n        .attr(\"class\", \"viewport\")\n        .attr(\"width\", dimensions.width * miniMapScale)\n        .attr(\"height\", dimensions.height * miniMapScale)\n        .attr(\"x\", (dimensions.width / 2) * miniMapScale - (dimensions.width * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"y\", (dimensions.height / 2) * miniMapScale - (dimensions.height * miniMapScale) / 2 + miniMapSize / 2)\n        .attr(\"fill\", \"rgba(59, 130, 246, 0.1)\") // Light blue fill\n        .attr(\"stroke\", \"#3b82f6\")\n        .attr(\"stroke-width\", 2);\n      \n      // Update mini-map on zoom\n      svg.on(\"zoom.minimap\", () => {\n        const transform = d3.zoomTransform(svg.node());\n        viewportRect\n          .attr(\"width\", dimensions.width * miniMapScale / transform.k)\n          .attr(\"height\", dimensions.height * miniMapScale / transform.k)\n          .attr(\"x\", (-transform.x * miniMapScale / transform.k) + miniMapSize / 2)\n          .attr(\"y\", (-transform.y * miniMapScale / transform.k) + miniMapSize / 2);\n      });\n      \n      // Make mini-map clickable for navigation\n      miniMap.on(\"click\", (event) => {\n        const [x, y] = d3.pointer(event);\n        const tx = (x - miniMapSize / 2) / miniMapScale;\n        const ty = (y - miniMapSize / 2) / miniMapScale;\n        \n        svg.transition()\n          .duration(500)\n          .call(\n            zoomRef.current.transform,\n            d3.zoomIdentity\n              .translate(dimensions.width / 2 - tx, dimensions.height / 2 - ty)\n              .scale(1)\n          );\n      });\n      \n      // Add a debug message to confirm mini-map creation\n      console.log(\"Mini-map created with size:\", miniMapSize, \"at position:\", dimensions.width - miniMapSize - miniMapMargin, dimensions.height - miniMapSize - miniMapMargin);\n    }\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [graphData, dimensions, feedbackWeight, isSimulationRunning, selectedNode, highlightMode, showMiniMap]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    svg.transition()\n      .duration(750)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n      );\n  };\n\n  // Also fix the focusOnNode function\n  const focusOnNode = (node) => {\n    if (!svgRef.current || !zoomRef.current || !node) return;\n    \n    const svg = d3.select(svgRef.current);\n    const width = dimensions.width;\n    const height = dimensions.height;\n    \n    // Make sure we have x and y coordinates\n    if (typeof node.x === 'undefined' || typeof node.y === 'undefined') {\n      console.warn('Node does not have coordinates yet');\n      return;\n    }\n    \n    svg.transition()\n      .duration(750)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(width / 2 - node.x, height / 2 - node.y)\n          .scale(1.5)\n      );\n  };\n\n  // Add this mock function with a more complete structure\n  const mockClassifyFeedback = async (feedbackItems, existingThemes = []) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Generate a unique theme ID that will be consistent\n    const getThemeId = (themeName) => {\n      return `theme-${themeName.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n    };\n    \n    return {\n      results: feedbackItems.map((item, index) => {\n        // Determine theme based on content\n        let themeName = \"General Feedback\";\n        if (item.text.toLowerCase().includes('interface') || item.text.toLowerCase().includes('ui')) {\n          themeName = \"User Interface\";\n        } else if (item.text.toLowerCase().includes('slow') || item.text.toLowerCase().includes('performance')) {\n          themeName = \"Performance Issues\";\n        }\n        \n        // Check if this theme already exists\n        const themeExists = existingThemes.some(t => t.name === themeName);\n        \n        return {\n          feedbackIndex: index,\n          theme: themeName,\n          themeId: getThemeId(themeName), // Add a consistent theme ID\n          isNewTheme: !themeExists,\n          priority: 7,\n          sentiment: item.text.toLowerCase().includes('love') || item.text.toLowerCase().includes('great') ? \n            \"positive\" : \n            item.text.toLowerCase().includes('hate') || item.text.toLowerCase().includes('bad') ?\n            \"negative\" : \n            \"neutral\",\n          keywords: item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3)\n        };\n      }),\n      newThemes: []\n    };\n  };\n\n  // Update the updateGraphWithClassification function\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) {\n      console.error(\"Invalid classification result:\", classificationResult);\n      return;\n    }\n    \n    const { results, newThemes } = classificationResult;\n    \n    // Create a copy of the current graph data\n    const updatedGraphData = {\n      nodes: [...graphData.nodes],\n      links: [...graphData.links]\n    };\n    \n    // Process each feedback result\n    results.forEach(result => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      \n      // Find or create the theme - use the themeId from the result if available\n      let themeNode;\n      const themeId = result.themeId || `theme-${result.theme.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n      \n      // First check if the theme already exists in our graph\n      themeNode = updatedGraphData.nodes.find(n => \n        n.type === \"theme\" && (n.id === themeId || n.name === result.theme)\n      );\n      \n      // If not found, create a new theme node\n      if (!themeNode) {\n        themeNode = {\n          id: themeId,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1,\n          isNew: true\n        };\n        updatedGraphData.nodes.push(themeNode);\n        console.log(\"Created new theme node:\", themeNode);\n      } else {\n        // If found, increment its feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n      \n      // Find or create the persona based on user role\n      const personaId = `persona-${feedback.user_role.toLowerCase().replace(/[^a-z0-9]/g, '-')}`;\n      let personaNode = updatedGraphData.nodes.find(n => \n        n.type === \"persona\" && (n.id === personaId || n.name === feedback.user_role)\n      );\n      \n      if (!personaNode) {\n        personaNode = {\n          id: personaId,\n          name: feedback.user_role,\n          type: \"persona\",\n          isNew: true\n        };\n        updatedGraphData.nodes.push(personaNode);\n        console.log(\"Created new persona node:\", personaNode);\n      }\n      \n      // Create a link between the persona and the theme\n      const personaThemeLink = {\n        source: personaNode.id,\n        target: themeNode.id,\n        strength: result.priority / 10, // Convert priority (1-10) to strength (0.1-1.0)\n        sentiment: result.sentiment\n      };\n      \n      // Check if this link already exists\n      const existingLink = updatedGraphData.links.find(l => \n        l.source === personaThemeLink.source && l.target === personaThemeLink.target\n      );\n      \n      if (!existingLink) {\n        updatedGraphData.links.push(personaThemeLink);\n        console.log(\"Created new link:\", personaThemeLink);\n      }\n    });\n    \n    // Update the graph data\n    console.log(\"Updated graph data:\", updatedGraphData);\n    setGraphData(updatedGraphData);\n  };\n\n  // Update the mockGenerateFeatureIdeas function\n  const mockGenerateFeatureIdeas = async (themes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    return {\n      features: themes.map((theme, index) => {\n        const featureName = `Improve ${theme.name.toLowerCase().replace(' issues', '')}`;\n        return {\n          themeIndex: index,\n          themeId: theme.id, // Use the actual theme ID\n          name: featureName,\n          id: `feature-${featureName.toLowerCase().replace(/[^a-z0-9]/g, '-')}`,\n          description: `A new feature to address the ${theme.name.toLowerCase()} feedback.`,\n          priority: theme.feedbackCount > 5 ? \"High\" : \"Medium\",\n          complexity: \"Medium\"\n        };\n      })\n    };\n  };\n\n  // Update the generateFeaturesForThemes function\n  const generateFeaturesForThemes = async (themes) => {\n    try {\n      setIsAIProcessing(true);\n      \n      const featureIdeasResult = await mockGenerateFeatureIdeas(themes);\n      \n      // Update the graph with new features\n      const updatedGraphData = {\n        nodes: [...graphData.nodes],\n        links: [...graphData.links]\n      };\n      \n      featureIdeasResult.features.forEach(feature => {\n        // Find the theme node\n        const themeNode = updatedGraphData.nodes.find(n => n.id === feature.themeId);\n        \n        if (!themeNode) {\n          console.error(\"Theme node not found:\", feature.themeId);\n          return;\n        }\n        \n        // Create a new feature node with a consistent ID\n        const featureNode = {\n          id: feature.id || `feature-${feature.name.toLowerCase().replace(/[^a-z0-9]/g, '-')}`,\n          name: feature.name,\n          type: \"feature\",\n          description: feature.description,\n          priority: feature.priority,\n          complexity: feature.complexity\n        };\n        \n        // Check if this feature already exists\n        const existingFeature = updatedGraphData.nodes.find(n => n.id === featureNode.id);\n        if (!existingFeature) {\n          updatedGraphData.nodes.push(featureNode);\n          console.log(\"Created new feature node:\", featureNode);\n          \n          // Create a link between the theme and the feature\n          const themeFeatureLink = {\n            source: themeNode.id,\n            target: featureNode.id,\n            strength: feature.priority === \"High\" ? 0.9 : feature.priority === \"Medium\" ? 0.6 : 0.3\n          };\n          \n          updatedGraphData.links.push(themeFeatureLink);\n          console.log(\"Created new link:\", themeFeatureLink);\n        }\n      });\n      \n      // Update the graph data\n      console.log(\"Updated graph data with features:\", updatedGraphData);\n      setGraphData(updatedGraphData);\n      setIsAIProcessing(false);\n      \n    } catch (error) {\n      console.error(\"Error generating feature ideas:\", error);\n      setAIError(\"Failed to generate feature ideas. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the processFeedbackBatch function\n  const processFeedbackBatch = async (feedbackBatch) => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n      \n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n      \n      // Classify the feedback batch\n      const classificationResult = await mockClassifyFeedback(feedbackBatch, existingThemes);\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackBatch);\n      \n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      \n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch with AI:\", error);\n      setAIError(\"Failed to process feedback batch with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    \n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n      \n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      \n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this function to your component to handle node clicks\n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n    \n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase()) ||\n               (aiInsights && aiInsights.results && aiInsights.results.some(result => \n                 result.theme === node.name && \n                 feedbackItems[result.feedbackIndex] && \n                 feedbackItems[result.feedbackIndex].id === item.id\n               ));\n      });\n      \n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          // Check if we have AI insights for this feedback\n          if (aiInsights && aiInsights.results) {\n            const existingInsight = aiInsights.results.find(result => \n              feedbackItems[result.feedbackIndex] && \n              feedbackItems[result.feedbackIndex].id === item.id\n            );\n            \n            if (existingInsight) {\n              sentiment = existingInsight.sentiment;\n              priority = existingInsight.priority;\n              keywords = existingInsight.keywords || keywords;\n            }\n          }\n          \n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n      \n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Group feedback by theme\n      const feedbackByTheme = {};\n      \n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n        \n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => \n            feedbackItems[result.feedbackIndex] && \n            feedbackItems[result.feedbackIndex].id === item.id\n          );\n          \n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        \n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        \n        feedbackByTheme[theme].push(item);\n      });\n      \n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          // Check if we have AI insights for this feedback\n          if (aiInsights && aiInsights.results) {\n            const existingInsight = aiInsights.results.find(result => \n              feedbackItems[result.feedbackIndex] && \n              feedbackItems[result.feedbackIndex].id === item.id\n            );\n            \n            if (existingInsight) {\n              sentiment = existingInsight.sentiment;\n              priority = existingInsight.priority;\n              theme = existingInsight.theme;\n              keywords = existingInsight.keywords || keywords;\n            }\n          }\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      if (connectedNodes.length > 0) {\n        // Group connected nodes by type\n        const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n        const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n        \n        // Get related feedback through connected themes\n        const relatedFeedback = [];\n        connectedThemes.forEach(theme => {\n          const themeFeedback = feedbackItems.filter(item => \n            item.text.toLowerCase().includes(theme.name.toLowerCase())\n          );\n          relatedFeedback.push(...themeFeedback);\n        });\n        \n        const featureInsights = {\n          feature: node.name,\n          priority: node.priority || \"Medium\",\n          description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n          connectedThemes,\n          connectedPersonas,\n          isFeatureView: true,\n          results: relatedFeedback.map((item, index) => {\n            // Try to find existing classification for this feedback\n            let sentiment = \"neutral\";\n            let priority = 5;\n            let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n            let keywords = item.text.split(' ')\n              .filter(word => word.length > 3)\n              .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n              .slice(0, 3);\n            \n            return {\n              feedbackIndex: index,\n              theme,\n              text: item.text,\n              user_role: item.user_role,\n              sentiment,\n              priority,\n              keywords\n            };\n          })\n        };\n        \n        setAIInsights(featureInsights);\n        setShowAIInsightsPanel(true);\n      }\n    }\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index} \n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer flex items-center\"\n                    onClick={() => handleSearchResultClick(result)}\n                  >\n                    <div \n                      className=\"w-3 h-3 rounded-full mr-2\" \n                      style={{ backgroundColor: colorScale(result.type) }}\n                    ></div>\n                    <div>\n                      <div className=\"font-medium\">{result.name}</div>\n                      <div className=\"text-xs text-gray-500\">{result.type}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          {/* Data Management Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Data</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                onChange={importData} \n                className=\"hidden\"\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={resetVisualization}\n            >\n              Reset\n            </button>\n          </div>\n          \n          {/* Visualization Controls Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">View</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause' : 'Resume'} Simulation\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setShowMiniMap(!showMiniMap)}\n            >\n              {showMiniMap ? 'Hide' : 'Show'} Mini-Map\n            </button>\n          </div>\n          \n          {/* Add Content Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Add</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n          \n          {/* Connect Group */}\n          <div className=\"flex items-center gap-2 p-2 bg-gray-100 rounded-md\">\n            <span className=\"text-xs font-medium text-gray-700\">Connect</span>\n            <button \n              className=\"px-3 py-1 bg-orange-600 text-white rounded hover:bg-orange-700 text-sm\"\n              onClick={() => {\n                if (selectedNode) {\n                  initiateConnection(selectedNode);\n                } else {\n                  alert(\"Please select a node first\");\n                }\n              }}\n            >\n              Connect Nodes\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4 mt-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium\">Feedback Weight:</span>\n            <div className=\"flex items-center gap-2 w-48\">\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={feedbackWeight}\n                onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n                className=\"w-full\"\n              />\n              <div className=\"flex items-center gap-1 min-w-[60px]\">\n                <div className=\"h-2 w-12 bg-gray-300 rounded-full relative\">\n                  <div \n                    className=\"absolute top-0 left-0 h-2 bg-blue-500 rounded-full\" \n                    style={{ width: `${(feedbackWeight / 10) * 100}%` }}\n                  ></div>\n                </div>\n                <span className=\"text-xs font-medium\">{feedbackWeight}</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium\">Highlight:</span>\n            <div className=\"flex gap-1\">\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('none')}\n              >\n                None\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('themes')}\n              >\n                Themes\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('features')}\n              >\n                Features\n              </button>\n              <button\n                className={`px-2 py-1 text-xs rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n                onClick={() => setHighlightMode('personas')}\n              >\n                Personas\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"flex-1 bg-gray-50 p-4\" ref={containerRef}>\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Zoom Controls - Keep these at the bottom right */}\n      <div className=\"absolute bottom-4 right-4 flex gap-2\">\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomIn}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomOut}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 12H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={centerView}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n          </svg>\n        </button>\n      </div>\n      \n      <div className=\"bg-white p-4 shadow-md mt-4\">\n        <div className=\"flex flex-wrap gap-8\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-blue-600\"></div>\n            <span className=\"text-sm\">Feedback Themes</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-green-600\"></div>\n            <span className=\"text-sm\">Feature Ideas</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 rounded-full bg-orange-600\"></div>\n            <span className=\"text-sm\">User Personas</span>\n          </div>\n          \n          <div className=\"flex-1\"></div>\n          \n          {selectedNode && (\n            <div className=\"bg-gray-100 px-4 py-2 rounded-md flex items-center\">\n              <div>\n                <span className=\"font-medium\">{selectedNode.name}</span>\n                {selectedNode.type === 'theme' && (\n                  <span> ({selectedNode.feedbackCount} feedbacks)</span>\n                )}\n              </div>\n              <button\n                className=\"ml-2 px-2 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 text-xs\"\n                onClick={() => focusOnNode(selectedNode)}\n              >\n                Focus\n              </button>\n              <button\n                className=\"ml-2 px-2 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-xs\"\n                onClick={connectNodes}\n              >\n                Connect\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Modal for adding new nodes */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              {modalType === 'theme' ? 'Add New Feedback Theme' : 'Add New Feature Idea'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              />\n            </div>\n            \n            {modalType === 'theme' ? (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"100\"\n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(Number(e.target.value))}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                />\n              </div>\n            ) : (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select\n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleModalSubmit}\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Modal for creating connections */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">Create Connection</h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From: {connectionSource?.name} ({connectionSource?.type})\n              </label>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To:\n              </label>\n              <select\n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n              >\n                {availableTargets.map(node => (\n                  <option key={node.id} value={node.id}>\n                    {node.name} ({node.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength}\n              </label>\n              <input\n                type=\"range\"\n                min=\"0.1\"\n                max=\"1\"\n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(Number(e.target.value))}\n                className=\"w-full\"\n              />\n              <div className=\"flex justify-between text-xs text-gray-500\">\n                <span>Weak</span>\n                <span>Strong</span>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowConnectionModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConnectionSubmit}\n                className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add these buttons to your UI */}\n      <div className=\"absolute bottom-4 right-4 flex gap-2\">\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomIn}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={zoomOut}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18 12H6\" />\n          </svg>\n        </button>\n        <button \n          className=\"w-10 h-10 bg-white rounded-full shadow-md flex items-center justify-center hover:bg-gray-100\"\n          onClick={centerView}\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n          </svg>\n        </button>\n      </div>\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">Add New Feedback</h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea\n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                rows=\"4\"\n                placeholder=\"Enter user feedback here...\"\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input\n                type=\"text\"\n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                placeholder=\"e.g., Product Manager, Developer, etc.\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowFeedbackModal(false)}\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"\n                disabled={isAIProcessing}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleFeedbackSubmit}\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center\"\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing...\n                  </>\n                ) : (\n                  'Add Feedback'\n                )}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div className=\"fixed right-0 top-0 h-full w-80 bg-white shadow-lg p-4 overflow-y-auto z-40\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-lg font-bold\">\n              {aiInsights.isFeatureView ? 'Feature Details' : \n               aiInsights.persona ? `${aiInsights.persona} Feedback` : \n               aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n            </h2>\n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Feature View */}\n          {aiInsights.isFeatureView && (\n            <>\n              <div className=\"mb-4\">\n                <div className=\"text-sm text-gray-600\">Priority</div>\n                <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                  aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                  aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                  'bg-green-100 text-green-800'\n                }`}>\n                  {aiInsights.priority}\n                </div>\n              </div>\n              \n              {aiInsights.description && (\n                <div className=\"mb-4\">\n                  <div className=\"text-sm text-gray-600\">Description</div>\n                  <div className=\"text-sm\">{aiInsights.description}</div>\n                </div>\n              )}\n              \n              {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                <div className=\"mb-4\">\n                  <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                  {aiInsights.connectedThemes.map((theme, index) => (\n                    <div key={index} className=\"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\">\n                      <div className=\"font-medium\">{theme.name}</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {Math.round(theme.connectionStrength * 100)}% match\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n              \n              {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                <div className=\"mb-4\">\n                  <div className=\"text-sm text-gray-600 mb-1\">User Roles</div>\n                  {aiInsights.connectedPersonas.map((persona, index) => (\n                    <div key={index} className=\"bg-orange-50 p-2 rounded mb-2\">\n                      <div className=\"font-medium\">{persona.name}</div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </>\n          )}\n          \n          {/* Persona View */}\n          {aiInsights.persona && aiInsights.themeBreakdown && (\n            <div className=\"mb-4\">\n              <div className=\"text-sm text-gray-600 mb-1\">Feedback Themes</div>\n              {aiInsights.themeBreakdown.map((item, index) => (\n                <div key={index} className=\"bg-blue-50 p-2 rounded mb-2 flex justify-between items-center\">\n                  <div className=\"font-medium\">{item.theme}</div>\n                  <div className=\"text-xs bg-blue-200 px-2 py-1 rounded-full\">\n                    {item.count} items\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* New Themes Section */}\n          {aiInsights.newThemes && aiInsights.newThemes.length > 0 && (\n            <div className=\"mb-4\">\n              <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">New Themes Identified</h3>\n              {aiInsights.newThemes.map((theme, index) => (\n                <div key={index} className=\"bg-blue-50 p-2 rounded mb-2\">\n                  <div className=\"font-medium\">{theme.name}</div>\n                  <div className=\"text-xs text-gray-600\">{theme.description}</div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Feedback Items */}\n          {aiInsights.results && aiInsights.results.length > 0 ? (\n            <>\n              <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n              </h3>\n              {aiInsights.results.map((result, index) => (\n                <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                  {result.text && (\n                    <div className=\"text-sm mb-1 italic\">\"{result.text}\"</div>\n                  )}\n                  <div className=\"flex justify-between\">\n                    <div className=\"font-medium\">{result.theme}</div>\n                    <div className={`text-xs px-2 py-1 rounded ${\n                      result.sentiment === 'positive' ? 'bg-green-100 text-green-800' : \n                      result.sentiment === 'negative' ? 'bg-red-100 text-red-800' : \n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {result.sentiment}\n                    </div>\n                  </div>\n                  {result.user_role && (\n                    <div className=\"text-xs text-gray-600 mt-1\">\n                      From: <span className=\"font-medium\">{result.user_role}</span>\n                    </div>\n                  )}\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Priority: <span className=\"font-medium\">{result.priority}/10</span>\n                  </div>\n                  {result.keywords && (\n                    <div className=\"flex flex-wrap gap-1 mt-1\">\n                      {result.keywords.map((keyword, kidx) => (\n                        <span key={kidx} className=\"text-xs bg-gray-200 px-1 rounded\">\n                          {keyword}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </>\n          ) : (\n            <div className=\"text-gray-500 italic\">No feedback data available</div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}