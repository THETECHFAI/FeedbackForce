{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzePersona, analyzeTheme, analyzeFeedback } from '../services/openaiService';\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feedback\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Add this helper function for finding related nodes\nconst findRelatedNodes = nodeId => {\n  if (!graphData || !graphData.nodes || !graphData.links) return [];\n\n  // Find all linked node IDs\n  const linkedNodeIds = graphData.links.filter(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    return sourceId === nodeId || targetId === nodeId;\n  }).map(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    return sourceId === nodeId ? targetId : sourceId;\n  });\n\n  // Return all linked nodes\n  return graphData.nodes.filter(node => linkedNodeIds.includes(node.id));\n};\n\n// Add this function to get node-specific data\nconst getNodeContextualData = node => {\n  if (!node || !graphData) return null;\n\n  // Find related nodes\n  const relatedNodes = findRelatedNodes(node.id);\n  switch (node.type) {\n    case 'persona':\n      // Find feedback from this persona\n      const personaFeedback = graphData.nodes.filter(n => n.type === 'feedback' && n.user_role === node.name);\n\n      // Find connected themes\n      const connectedThemes = relatedNodes.filter(n => n.type === 'theme');\n      return {\n        node,\n        relatedFeedback: personaFeedback,\n        connectedThemes,\n        stats: node.sentimentStats || {\n          positive: 0,\n          negative: 0,\n          neutral: 0\n        }\n      };\n    case 'theme':\n      // Find feedback for this theme\n      const themeFeedback = graphData.nodes.filter(n => n.type === 'feedback' && n.theme === node.name);\n\n      // Find connected personas\n      const connectedPersonas = relatedNodes.filter(n => n.type === 'persona');\n\n      // Calculate sentiment distribution\n      const sentimentCounts = {\n        Positive: 0,\n        Negative: 0,\n        Neutral: 0\n      };\n      themeFeedback.forEach(f => {\n        sentimentCounts[f.sentiment || 'Neutral']++;\n      });\n      return {\n        node,\n        relatedFeedback: themeFeedback,\n        connectedPersonas,\n        sentimentCounts\n      };\n    case 'feedback':\n      // Find connected themes\n      const feedbackThemes = relatedNodes.filter(n => n.type === 'theme');\n\n      // Find similar feedback (same theme)\n      const similarFeedback = node.theme ? graphData.nodes.filter(n => n.type === 'feedback' && n.id !== node.id && n.theme === node.theme).slice(0, 5) : [];\n      return {\n        node,\n        connectedThemes: feedbackThemes,\n        similarFeedback\n      };\n    default:\n      return {\n        node\n      };\n  }\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n\n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n\n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n\n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables in the component\n  const [selectedNodeInsights, setSelectedNodeInsights] = useState(null);\n  const [isLoadingInsights, setIsLoadingInsights] = useState(false);\n  const [insightError, setInsightError] = useState(null);\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width > 0) {\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n\n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n\n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100).strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(30));\n    simulationRef.current = simulation;\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(validLinks).enter().append(\"line\").attr(\"stroke\", d => {\n      // Get the source and target nodes\n      const source = nodes.find(n => n.id === d.source);\n      const target = nodes.find(n => n.id === d.target);\n      if (!source || !target) return \"#999\";\n      const sourceType = source.type;\n      const targetType = target.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n\n      return \"#999\"; // Default gray\n    }).attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n\n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 15;\n      return 10; // Smaller feedback nodes\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2);\n\n    // Add labels with better positioning\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 25;\n      return 22; // Position feedback labels\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n    .attr(\"fill\", \"#333\");\n\n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\").text(d => d.type === \"feedback\" ? d.title : d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // MiniMap implementation\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current) return () => {};\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9).attr(\"stroke\", \"#3182CE\").attr(\"stroke-width\", 2).attr(\"rx\", 6);\n\n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    const miniMapLinks = graphData.links.map(link => ({\n      source: typeof link.source === 'object' ? link.source.id : link.source,\n      target: typeof link.target === 'object' ? link.target.id : link.target\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5)).force(\"charge\", d3.forceManyBody().strength(-20)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(4));\n\n    // Add mini-map links\n    miniMapContainer.selectAll(\".mini-link\").data(miniMapLinks).enter().append(\"line\").attr(\"class\", \"mini-link\").attr(\"stroke\", \"#ccc\").attr(\"stroke-width\", 0.5);\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3).attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 15).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"fill\", \"#2D3748\").text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniMapContainer.selectAll(\".mini-link\").attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    }).attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    }).attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    }).attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click behavior\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Starting import from file:\", file.name);\n\n    // Use our async utility function\n    importFeedbackData(file).then(importedData => {\n      console.log(\"Processed import data:\", importedData);\n\n      // Ensure node structure is compatible with visualization\n      const processedNodes = importedData.nodes.map(node => {\n        // Make sure each node has the essential properties\n        return {\n          ...node,\n          // Ensure these critical properties exist\n          id: node.id,\n          name: node.name || node.label || \"Unnamed\",\n          type: node.type || \"theme\",\n          // Add appropriate properties based on type\n          ...(node.type === 'theme' ? {\n            feedbackCount: node.feedbackCount || 5\n          } : {}),\n          ...(node.type === 'feature' ? {\n            priority: node.priority || 'Medium'\n          } : {})\n        };\n      });\n      setGraphData({\n        nodes: processedNodes,\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n      setAnalyticsData(importedData.analytics || null);\n      setLoading(false);\n\n      // Reset any selections and force a re-center\n      setSelectedNode(null);\n      // Use a timeout without directly referencing fitToScreen\n      setTimeout(() => {\n        if (zoomRef.current) {\n          const svg = d3.select(svgRef.current);\n          const svgWidth = svg.node().getBoundingClientRect().width;\n          const svgHeight = svg.node().getBoundingClientRect().height;\n          svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity.translate(svgWidth / 2, svgHeight / 2).scale(0.8));\n        }\n      }, 300);\n    }).catch(error => {\n      console.error(\"Error importing feedback data:\", error);\n      setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n      setLoading(false);\n    });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = text => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return {\n        theme: 'Stability Issues'\n      };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return {\n        theme: 'Performance'\n      };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return {\n        theme: 'Mobile Experience'\n      };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || lowerText.includes('layout') || lowerText.includes('look')) {\n      return {\n        theme: 'User Interface'\n      };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return {\n        theme: 'Reporting & Analytics'\n      };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return {\n        theme: 'Data Export & Import'\n      };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return {\n        theme: 'Search & Navigation'\n      };\n    }\n    return {\n      theme: 'General Feedback'\n    };\n  };\n\n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = theme => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{\n        name: 'Crash Prevention & Recovery',\n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{\n        name: 'Performance Optimization',\n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{\n        name: 'Responsive Design Overhaul',\n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{\n        name: 'UI Modernization',\n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{\n        name: 'Custom Report Builder',\n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{\n        name: 'Enhanced Export Options',\n        priority: 'High'\n      }];\n    } else {\n      return [{\n        name: 'User Experience Improvements',\n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback(feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n\n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n\n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n\n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n\n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n\n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n\n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i + 1} of ${chunks.length}...`);\n\n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n\n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({\n            ...newGraph\n          });\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n\n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5); // Top 5 themes\n\n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n\n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n\n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n\n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                if (sourceId === theme.id || targetId === theme.id) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => l.source === personaId && l.target === featureId || l.source === featureId && l.target === personaId);\n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n\n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n\n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n\n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n\n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      setGraphData(newGraph);\n\n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n\n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes).force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          tempSimulation.stop();\n        }\n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n\n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    let newNode;\n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = async node => {\n    setSelectedNode(node);\n    setSelectedNodeInsights(null);\n    setInsightError(null);\n    setIsLoadingInsights(true);\n    try {\n      // Get contextual data for the selected node\n      const contextData = getNodeContextualData(node);\n\n      // If no contextual data, don't proceed\n      if (!contextData) {\n        setIsLoadingInsights(false);\n        return;\n      }\n\n      // Generate AI insights based on node type\n      let aiInsights;\n      switch (node.type) {\n        case 'persona':\n          aiInsights = await analyzePersona(node, contextData.relatedFeedback, contextData.connectedThemes);\n          break;\n        case 'theme':\n          aiInsights = await analyzeTheme(node, contextData.relatedFeedback, contextData.connectedPersonas);\n          break;\n        case 'feedback':\n          aiInsights = await analyzeFeedback(node, contextData.similarFeedback);\n          break;\n        default:\n          aiInsights = null;\n      }\n\n      // Set the insights with both context data and AI analysis\n      setSelectedNodeInsights({\n        contextData,\n        aiInsights\n      });\n    } catch (error) {\n      console.error(\"Error generating insights for node:\", error);\n      setInsightError(\"Could not generate insights for this node\");\n    } finally {\n      setIsLoadingInsights(false);\n    }\n  };\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n\n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === connectionSource.id && targetId === connectionTarget || sourceId === connectionTarget && targetId === connectionSource.id;\n    });\n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n\n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle new feedback submission\n  const handleAddFeedback = useCallback(async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const newFeedbackItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    setFeedbackItems(prev => [...prev, newFeedbackItem]);\n\n    // Process with AI\n    setIsAIProcessing(true);\n    try {\n      const result = await classifyFeedback(newFeedback);\n      if (result && result.theme) {\n        // Process the feedback and update the graph\n\n        // Check if the persona exists\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}`;\n          personaNode = {\n            id: personaId,\n            name: newFeedbackRole,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add persona to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, personaNode],\n            links: [...prev.links]\n          }));\n        } else {\n          // Update persona feedback count\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => node.id === personaNode.id ? {\n              ...node,\n              feedbackCount: (node.feedbackCount || 0) + 1\n            } : node),\n            links: [...prev.links]\n          }));\n        }\n\n        // Check if theme exists\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add theme to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, themeNode],\n            links: [...prev.links,\n            // Add link between persona and theme\n            {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            }]\n          }));\n        } else {\n          // Update theme and check for link\n          const link = graphData.links.find(link => {\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            return sourceId === personaNode.id && targetId === themeNode.id || sourceId === themeNode.id && targetId === personaNode.id;\n          });\n          if (!link) {\n            // Create link if it doesn't exist\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links, {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              }]\n            }));\n          } else {\n            // Just update the theme\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links]\n            }));\n          }\n        }\n      }\n\n      // Reset form\n      setNewFeedback('');\n      setNewFeedbackRole('');\n      setShowFeedbackModal(false);\n    } catch (error) {\n      console.error(\"Error processing feedback:\", error);\n      setAIError(\"Failed to process feedback. Please try again.\");\n    } finally {\n      setIsAIProcessing(false);\n    }\n  }, [newFeedback, newFeedbackRole, graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n  const handleDataImported = importedData => {\n    if (importedData) {\n      setGraphData({\n        nodes: importedData.nodes || [],\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1604,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1624,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1629,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1661,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1665,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1666,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1660,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1651,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1679,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1687,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1685,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: resetVisualization,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1722,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1733,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1753,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1764,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: connectNodes,\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1765,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1790,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('feedback'),\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1809,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1789,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1762,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1620,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n        style: {\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n          minHeight: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n          style: {\n            minHeight: '500px'\n          },\n          onClick: () => setSelectedNode(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1829,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          colorScale: colorScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomIn,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1847,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomOut,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1853,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1849,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: fitToScreen,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"\\u22A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1859,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1855,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1821,\n        columnNumber: 9\n      }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n        style: {\n          width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n          maxWidth: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n            title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1881,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1880,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1875,\n            columnNumber: 15\n          }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAIInsightsPanel(false),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n            title: \"Close panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1903,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1902,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1897,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 13\n        }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-800 mb-6\",\n            children: \"AI Feedback Insights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1911,\n            columnNumber: 17\n          }, this), analyticsData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Sentiment Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1916,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-around mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-green-500 text-2xl font-bold\",\n                    children: analyticsData.sentimentDistribution.Positive\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1920,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: \"Positive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1923,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1919,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-red-500 text-2xl font-bold\",\n                    children: analyticsData.sentimentDistribution.Negative\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1926,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: \"Negative\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1929,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1925,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-500 text-2xl font-bold\",\n                    children: analyticsData.sentimentDistribution.Neutral\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1932,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500\",\n                    children: \"Neutral\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1935,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1931,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1918,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full h-4 bg-gray-200 rounded-full overflow-hidden flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-green-500 h-full\",\n                  style: {\n                    width: `${analyticsData.sentimentDistribution.Positive / analyticsData.totalFeedback * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1941,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-red-500 h-full\",\n                  style: {\n                    width: `${analyticsData.sentimentDistribution.Negative / analyticsData.totalFeedback * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1947,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-400 h-full\",\n                  style: {\n                    width: `${analyticsData.sentimentDistribution.Neutral / analyticsData.totalFeedback * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1953,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1940,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1917,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 19\n          }, this), analyticsData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Theme Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1967,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: Object.entries(analyticsData.themeDistribution).sort((a, b) => b[1] - a[1]).slice(0, 5).map(([theme, count]) => {\n                const themeData = analyticsData.sentimentByTheme[theme] || {\n                  Positive: 0,\n                  Negative: 0,\n                  Neutral: 0\n                };\n                const total = themeData.Positive + themeData.Negative + themeData.Neutral;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-medium text-gray-800\",\n                      children: theme\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1978,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [count, \" items\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1979,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1977,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-full h-3 bg-gray-200 rounded-full overflow-hidden flex mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-green-500 h-full\",\n                      style: {\n                        width: `${themeData.Positive / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1984,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-red-500 h-full\",\n                      style: {\n                        width: `${themeData.Negative / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1988,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-400 h-full\",\n                      style: {\n                        width: `${themeData.Neutral / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1992,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1983,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex text-xs text-gray-500 justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [Math.round(themeData.Positive / total * 100), \"% Positive\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1999,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [Math.round(themeData.Negative / total * 100), \"% Negative\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2000,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1998,\n                    columnNumber: 31\n                  }, this)]\n                }, theme, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1976,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1968,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1966,\n            columnNumber: 19\n          }, this), analyticsData && Object.keys(analyticsData.roleDistribution).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"User Role Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2012,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: Object.entries(analyticsData.roleDistribution).sort((a, b) => b[1] - a[1]).map(([role, count]) => {\n                const roleData = analyticsData.sentimentByRole[role] || {\n                  Positive: 0,\n                  Negative: 0,\n                  Neutral: 0\n                };\n                const total = roleData.Positive + roleData.Negative + roleData.Neutral;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"font-medium text-gray-800\",\n                      children: role\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2022,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm text-gray-500\",\n                      children: [count, \" feedback items\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2023,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2021,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-full h-3 bg-gray-200 rounded-full overflow-hidden flex mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-green-500 h-full\",\n                      style: {\n                        width: `${roleData.Positive / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2028,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-red-500 h-full\",\n                      style: {\n                        width: `${roleData.Negative / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2032,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-400 h-full\",\n                      style: {\n                        width: `${roleData.Neutral / total * 100}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2036,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2027,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex text-xs text-gray-500 justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [Math.round(roleData.Positive / total * 100), \"% Positive\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2043,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [Math.round(roleData.Negative / total * 100), \"% Negative\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2044,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2042,\n                    columnNumber: 31\n                  }, this)]\n                }, role, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2020,\n                  columnNumber: 29\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2013,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2011,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Key Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2055,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: aiInsights && aiInsights.insights && aiInsights.insights.map(insight => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"font-medium text-gray-800 mb-1\",\n                  children: insight.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2059,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 text-sm\",\n                  children: insight.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2060,\n                  columnNumber: 25\n                }, this), insight.sentiment && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 pt-2 border-t border-blue-200\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between text-xs\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-green-600\",\n                      children: [insight.sentiment.Positive, \" positive\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2066,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-red-600\",\n                      children: [insight.sentiment.Negative, \" negative\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2069,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-500\",\n                      children: [insight.sentiment.Neutral, \" neutral\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2072,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2065,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2064,\n                  columnNumber: 27\n                }, this)]\n              }, insight.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2058,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2056,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2054,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-700 mb-3\",\n              children: \"Recommended Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2085,\n              columnNumber: 19\n            }, this), analyticsData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [Object.entries(analyticsData.sentimentByTheme).sort((a, b) => {\n                const aNegPct = a[1].Negative / (a[1].Positive + a[1].Negative + a[1].Neutral);\n                const bNegPct = b[1].Negative / (b[1].Positive + b[1].Negative + b[1].Neutral);\n                return bNegPct - aNegPct;\n              }).slice(0, 1).map(([theme, sentiment]) => {\n                const total = sentiment.Positive + sentiment.Negative + sentiment.Neutral;\n                const negativePercentage = Math.round(sentiment.Negative / total * 100);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-orange-50 p-4 rounded-lg shadow-sm border-l-4 border-orange-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-800 mb-1\",\n                    children: [\"Address \\\"\", theme, \"\\\" Issues\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2103,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-700 text-sm\",\n                    children: [negativePercentage, \"% of feedback about \", theme, \" is negative. Prioritize improvements in this area to improve user satisfaction.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2104,\n                    columnNumber: 31\n                  }, this)]\n                }, theme, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2102,\n                  columnNumber: 29\n                }, this);\n              }), Object.entries(analyticsData.sentimentByRole).sort((a, b) => {\n                const aNegPct = a[1].Negative / (a[1].Positive + a[1].Negative + a[1].Neutral);\n                const bNegPct = b[1].Negative / (b[1].Positive + b[1].Negative + b[1].Neutral);\n                return bNegPct - aNegPct;\n              }).slice(0, 1).map(([role, sentiment]) => {\n                const total = sentiment.Positive + sentiment.Negative + sentiment.Neutral;\n                const negativePercentage = Math.round(sentiment.Negative / total * 100);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-purple-50 p-4 rounded-lg shadow-sm border-l-4 border-purple-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-gray-800 mb-1\",\n                    children: [\"Improve \", role, \" Experience\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2126,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-700 text-sm\",\n                    children: [negativePercentage, \"% of feedback from \", role, \" users is negative. Consider targeted improvements for this user segment.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2127,\n                    columnNumber: 31\n                  }, this)]\n                }, role, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2125,\n                  columnNumber: 29\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2088,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2084,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1910,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1866,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1820,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2151,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2165,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2191,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2184,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddNode,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2145,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2245,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2247,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleConnectionSubmit,\n            disabled: !connectionTarget,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2221,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2345,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2344,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2327,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2353,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2296,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2295,\n      columnNumber: 9\n    }, this), insights.length > 0 && !showAIInsightsPanel && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setAIInsights({\n          results: [],\n          insights: insights\n        });\n        setShowAIInsightsPanel(true);\n      },\n      className: \"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\",\n      children: [\"View AI Insights (\", insights.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2363,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1618,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"5SAKdrlLhEnA+0whdpCEdKcXwvo=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","classifyFeedback","generateFeatureIdeas","analyzePersona","analyzeTheme","analyzeFeedback","FeedbackImporter","processFeedbackData","importFeedbackData","Legend","jsxDEV","_jsxDEV","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","findRelatedNodes","nodeId","graphData","linkedNodeIds","filter","link","sourceId","targetId","map","node","includes","getNodeContextualData","relatedNodes","personaFeedback","n","user_role","connectedThemes","relatedFeedback","stats","sentimentStats","positive","negative","neutral","themeFeedback","theme","connectedPersonas","sentimentCounts","Positive","Negative","Neutral","forEach","f","sentiment","feedbackThemes","similarFeedback","slice","UserResearchNetwork","_s","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","setGraphData","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","showConnectionModal","setShowConnectionModal","showFeedbackModal","setShowFeedbackModal","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","insights","setInsights","analyticsData","setAnalyticsData","selectedNodeInsights","setSelectedNodeInsights","isLoadingInsights","setIsLoadingInsights","insightError","setInsightError","timer","setTimeout","clearTimeout","current","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","length","recalculateFeedbackCounts","cleanupMiniMap","createMiniMap","console","log","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","call","Array","isArray","normalizedLinks","validLinks","sourceExists","some","targetExists","warn","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","forceCenter","forceCollide","stop","data","enter","find","sourceType","targetType","Math","max","drag","dragstarted","dragged","dragended","stopPropagation","fx","fy","x","y","handleNodeClick","text","title","i","tick","active","alphaTarget","restart","zoomIdentity","translate","scale","miniMapSize","min","miniMapMargin","miniMapContainer","miniMapNodes","miniX","random","miniY","miniMapLinks","miniMapSimulation","radius","miniNodes","baseColor","color","brighter","viewportRect","style","pointer","centerX","centerY","transition","duration","feedbackCounts","themes","personas","features","sourceNode","targetNode","updatedNodes","prevData","importData","file","files","then","importedData","processedNodes","label","analytics","svgWidth","svgHeight","catch","message","mockClassifyFeedback","lowerText","toLowerCase","mockGenerateFeatureIdeas","processImportedFeedback","newGraph","nodeMap","item","personaId","Date","now","Object","keys","personaNode","push","processChunks","chunkSize","chunks","chunk","substring","result","themeId","themeNode","linkExists","err","Promise","resolve","significantThemes","values","sort","a","b","featureIdeas","idea","featureId","featureNode","description","existingLink","l","toString","fallback","tempSimulation","handleAddNode","trim","alert","newNode","contextData","handleConnectionSubmit","existingConnection","newLink","connectNodes","targets","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","resetVisualization","confirm","handleAddFeedback","newFeedbackItem","timestamp","toISOString","prev","zoomIn","currentTransform","zoomTransform","k","zoomOut","fitToScreen","minX","Infinity","minY","maxX","maxY","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","handleDataImported","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","e","results","index","backgroundColor","accept","disabled","parseInt","ref","marginRight","minHeight","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","isFeatureView","persona","sentimentDistribution","totalFeedback","themeDistribution","count","themeData","sentimentByTheme","total","round","roleDistribution","role","roleData","sentimentByRole","insight","aNegPct","bNegPct","negativePercentage","toFixed","step","parseFloat","rows","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzePersona, analyzeTheme, analyzeFeedback } from '../services/openaiService';\n\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n  .domain([\"theme\", \"feedback\", \"persona\"])\n  .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [\n    { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n    { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n    { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n    { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n    { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n    { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n  ],\n  links: [\n    { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n    { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n    { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n    { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n  ]\n};\n\n// Add this helper function for finding related nodes\nconst findRelatedNodes = (nodeId) => {\n  if (!graphData || !graphData.nodes || !graphData.links) return [];\n  \n  // Find all linked node IDs\n  const linkedNodeIds = graphData.links\n    .filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === nodeId || targetId === nodeId;\n    })\n    .map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === nodeId ? targetId : sourceId;\n    });\n  \n  // Return all linked nodes\n  return graphData.nodes.filter(node => linkedNodeIds.includes(node.id));\n};\n\n// Add this function to get node-specific data\nconst getNodeContextualData = (node) => {\n  if (!node || !graphData) return null;\n  \n  // Find related nodes\n  const relatedNodes = findRelatedNodes(node.id);\n  \n  switch (node.type) {\n    case 'persona':\n      // Find feedback from this persona\n      const personaFeedback = graphData.nodes.filter(n => \n        n.type === 'feedback' && n.user_role === node.name\n      );\n      \n      // Find connected themes\n      const connectedThemes = relatedNodes.filter(n => n.type === 'theme');\n      \n      return {\n        node,\n        relatedFeedback: personaFeedback,\n        connectedThemes,\n        stats: node.sentimentStats || { positive: 0, negative: 0, neutral: 0 }\n      };\n      \n    case 'theme':\n      // Find feedback for this theme\n      const themeFeedback = graphData.nodes.filter(n => \n        n.type === 'feedback' && n.theme === node.name\n      );\n      \n      // Find connected personas\n      const connectedPersonas = relatedNodes.filter(n => n.type === 'persona');\n      \n      // Calculate sentiment distribution\n      const sentimentCounts = { Positive: 0, Negative: 0, Neutral: 0 };\n      themeFeedback.forEach(f => {\n        sentimentCounts[f.sentiment || 'Neutral']++;\n      });\n      \n      return {\n        node,\n        relatedFeedback: themeFeedback,\n        connectedPersonas,\n        sentimentCounts\n      };\n      \n    case 'feedback':\n      // Find connected themes\n      const feedbackThemes = relatedNodes.filter(n => n.type === 'theme');\n      \n      // Find similar feedback (same theme)\n      const similarFeedback = node.theme ? \n        graphData.nodes.filter(n => \n          n.type === 'feedback' && \n          n.id !== node.id && \n          n.theme === node.theme\n        ).slice(0, 5) : [];\n      \n      return {\n        node,\n        connectedThemes: feedbackThemes,\n        similarFeedback\n      };\n      \n    default:\n      return { node };\n  }\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n  \n  // State\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  \n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  \n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  \n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  \n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables in the component\n  const [selectedNodeInsights, setSelectedNodeInsights] = useState(null);\n  const [isLoadingInsights, setIsLoadingInsights] = useState(false);\n  const [insightError, setInsightError] = useState(null);\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width > 0) {\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    \n    console.log(\"Rendering with data:\", graphData);\n    \n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n    \n    // Set up zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    svg.call(zoom);\n    zoomRef.current = zoom;\n    \n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || \n        !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n        graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n    \n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    \n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    \n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n    \n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(validLinks)\n        .id(d => d.id)\n        .distance(100)\n        .strength(1)) // Stronger link force for better connections\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide(30));\n    \n    simulationRef.current = simulation;\n    \n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n    \n    // Create the links\n    const link = g.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(validLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", d => {\n        // Get the source and target nodes\n        const source = nodes.find(n => n.id === d.source);\n        const target = nodes.find(n => n.id === d.target);\n        \n        if (!source || !target) return \"#999\";\n        \n        const sourceType = source.type;\n        const targetType = target.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        \n        return \"#999\"; // Default gray\n      })\n      .attr(\"stroke-opacity\", 0.6)\n      .attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n    \n    // Create the nodes\n    const node = g.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        \n        if (selectedNode && selectedNode.id === d.id) {\n          // If clicking the same node again, release it\n          d.fx = null;\n          d.fy = null;\n          setSelectedNode(null);\n        } else {\n          // If clicking a new node, fix its position\n          d.fx = d.x;\n          d.fy = d.y;\n          setSelectedNode(d);\n          handleNodeClick(d);\n        }\n      });\n    \n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 15;\n        return 10; // Smaller feedback nodes\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2);\n    \n    // Add labels with better positioning\n    node.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return 30 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 25;\n        return 22; // Position feedback labels\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n      .attr(\"fill\", \"#333\");\n    \n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\")\n      .text(d => d.type === \"feedback\" ? d.title : d.name);\n    \n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n    \n    // Update link positions immediately with node positions from simulation ticks\n    link\n      .attr(\"x1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.y : 0;\n      });\n    \n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => {\n          // Handle both ID and object references\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.y : 0;\n        });\n      \n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      \n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n    \n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(\n      dimensions.width / 2 - dimensions.width * 0.5,\n      dimensions.height / 2 - dimensions.height * 0.5\n    ).scale(0.8));\n    \n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // MiniMap implementation\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current) return () => {};\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9)\n      .attr(\"stroke\", \"#3182CE\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"rx\", 6);\n    \n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    const miniMapLinks = graphData.links.map(link => ({\n      source: typeof link.source === 'object' ? link.source.id : link.source,\n      target: typeof link.target === 'object' ? link.target.id : link.target\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5))\n      .force(\"charge\", d3.forceManyBody().strength(-20))\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(4));\n    \n    // Add mini-map links\n    miniMapContainer.selectAll(\".mini-link\")\n      .data(miniMapLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"mini-link\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3);\n      })\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1);\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 15)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"fill\", \"#2D3748\")\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniMapContainer.selectAll(\".mini-link\")\n      .attr(\"x1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniX : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniY : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniX : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniY : 0;\n      });\n    \n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add click behavior\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    console.log(\"Starting import from file:\", file.name);\n    \n    // Use our async utility function\n    importFeedbackData(file)\n      .then(importedData => {\n        console.log(\"Processed import data:\", importedData);\n        \n        // Ensure node structure is compatible with visualization\n        const processedNodes = importedData.nodes.map(node => {\n          // Make sure each node has the essential properties\n          return {\n            ...node,\n            // Ensure these critical properties exist\n            id: node.id,\n            name: node.name || node.label || \"Unnamed\",\n            type: node.type || \"theme\",\n            // Add appropriate properties based on type\n            ...(node.type === 'theme' ? { feedbackCount: node.feedbackCount || 5 } : {}),\n            ...(node.type === 'feature' ? { priority: node.priority || 'Medium' } : {})\n          };\n        });\n        \n        setGraphData({ \n          nodes: processedNodes, \n          links: importedData.links || []\n        });\n        setInsights(importedData.insights || []);\n        setAnalyticsData(importedData.analytics || null);\n        setLoading(false);\n        \n        // Reset any selections and force a re-center\n        setSelectedNode(null);\n        // Use a timeout without directly referencing fitToScreen\n        setTimeout(() => {\n          if (zoomRef.current) {\n            const svg = d3.select(svgRef.current);\n            const svgWidth = svg.node().getBoundingClientRect().width;\n            const svgHeight = svg.node().getBoundingClientRect().height;\n            \n            svg.transition()\n              .duration(750)\n              .call(zoomRef.current.transform, \n                d3.zoomIdentity\n                  .translate(svgWidth / 2, svgHeight / 2)\n                  .scale(0.8)\n              );\n          }\n        }, 300);\n      })\n      .catch(error => {\n        console.error(\"Error importing feedback data:\", error);\n        setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n        setLoading(false);\n      });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = (text) => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return { theme: 'Stability Issues' };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return { theme: 'Performance' };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return { theme: 'Mobile Experience' };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || \n              lowerText.includes('layout') || lowerText.includes('look')) {\n      return { theme: 'User Interface' };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return { theme: 'Reporting & Analytics' };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return { theme: 'Data Export & Import' };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return { theme: 'Search & Navigation' };\n    }\n    \n    return { theme: 'General Feedback' };\n  };\n  \n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = (theme) => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{ \n        name: 'Crash Prevention & Recovery', \n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{ \n        name: 'Performance Optimization', \n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{ \n        name: 'Responsive Design Overhaul', \n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{ \n        name: 'UI Modernization', \n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{ \n        name: 'Custom Report Builder', \n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{ \n        name: 'Enhanced Export Options', \n        priority: 'High'\n      }];\n    } else {\n      return [{ \n        name: 'User Experience Improvements', \n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback((feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    \n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n    \n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n    \n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n    \n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      \n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n    \n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n      \n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n      \n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i+1} of ${chunks.length}...`);\n        \n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          \n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            \n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                \n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => \n                  (link.source === personaNode.id && link.target === themeNode.id) ||\n                  (link.source === themeNode.id && link.target === personaNode.id)\n                );\n                \n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n        \n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({...newGraph});\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n      \n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes)\n        .filter(theme => theme.feedbackCount >= 2)\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 5); // Top 5 themes\n      \n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      \n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n          \n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          \n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          \n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              \n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n              \n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n              \n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                \n                if ((sourceId === theme.id || targetId === theme.id)) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  \n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => \n                      (l.source === personaId && l.target === featureId) ||\n                      (l.source === featureId && l.target === personaId)\n                    );\n                    \n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n      \n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n        \n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          \n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n          \n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n      \n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      \n      setGraphData(newGraph);\n      \n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          \n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes)\n            .force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100))\n            .force(\"charge\", d3.forceManyBody().strength(-300))\n            .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n            .force(\"collide\", d3.forceCollide(40));\n          \n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          \n          tempSimulation.stop();\n        }\n        \n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n    \n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    \n    let newNode;\n    \n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    \n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      \n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = async (node) => {\n    setSelectedNode(node);\n    setSelectedNodeInsights(null);\n    setInsightError(null);\n    setIsLoadingInsights(true);\n    \n    try {\n      // Get contextual data for the selected node\n      const contextData = getNodeContextualData(node);\n      \n      // If no contextual data, don't proceed\n      if (!contextData) {\n        setIsLoadingInsights(false);\n        return;\n      }\n      \n      // Generate AI insights based on node type\n      let aiInsights;\n      \n      switch (node.type) {\n        case 'persona':\n          aiInsights = await analyzePersona(\n            node, \n            contextData.relatedFeedback, \n            contextData.connectedThemes\n          );\n          break;\n          \n        case 'theme':\n          aiInsights = await analyzeTheme(\n            node, \n            contextData.relatedFeedback, \n            contextData.connectedPersonas\n          );\n          break;\n          \n        case 'feedback':\n          aiInsights = await analyzeFeedback(\n            node, \n            contextData.similarFeedback\n          );\n          break;\n          \n        default:\n          aiInsights = null;\n      }\n      \n      // Set the insights with both context data and AI analysis\n      setSelectedNodeInsights({\n        contextData,\n        aiInsights\n      });\n    } catch (error) {\n      console.error(\"Error generating insights for node:\", error);\n      setInsightError(\"Could not generate insights for this node\");\n    } finally {\n      setIsLoadingInsights(false);\n    }\n  };\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n    \n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      return (sourceId === connectionSource.id && targetId === connectionTarget) || \n             (sourceId === connectionTarget && targetId === connectionSource.id);\n    });\n    \n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      \n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    \n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n    \n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle new feedback submission\n  const handleAddFeedback = useCallback(async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    // Create a new feedback item\n    const newFeedbackItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add to feedback items\n    setFeedbackItems(prev => [...prev, newFeedbackItem]);\n    \n    // Process with AI\n    setIsAIProcessing(true);\n    try {\n      const result = await classifyFeedback(newFeedback);\n      \n      if (result && result.theme) {\n        // Process the feedback and update the graph\n        \n        // Check if the persona exists\n        let personaNode = graphData.nodes.find(node => \n          node.type === \"persona\" && node.name === newFeedbackRole\n        );\n        \n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}`;\n          personaNode = {\n            id: personaId,\n            name: newFeedbackRole,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          // Add persona to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, personaNode],\n            links: [...prev.links]\n          }));\n        } else {\n          // Update persona feedback count\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => \n              node.id === personaNode.id \n                ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                : node\n            ),\n            links: [...prev.links]\n          }));\n        }\n        \n        // Check if theme exists\n        let themeNode = graphData.nodes.find(node => \n          node.type === \"theme\" && node.name === result.theme\n        );\n        \n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n          \n          // Add theme to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, themeNode],\n            links: [\n              ...prev.links,\n              // Add link between persona and theme\n              {\n                source: personaNode.id,\n                target: themeId,\n                strength: 0.7\n              }\n            ]\n          }));\n        } else {\n          // Update theme and check for link\n          const link = graphData.links.find(link => {\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            \n            return (sourceId === personaNode.id && targetId === themeNode.id) ||\n                   (sourceId === themeNode.id && targetId === personaNode.id);\n          });\n          \n          if (!link) {\n            // Create link if it doesn't exist\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => \n                node.id === themeNode.id \n                  ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                  : node\n              ),\n              links: [\n                ...prev.links,\n                {\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                }\n              ]\n            }));\n          } else {\n            // Just update the theme\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => \n                node.id === themeNode.id \n                  ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                  : node\n              ),\n              links: [...prev.links]\n            }));\n          }\n        }\n      }\n      \n      // Reset form\n      setNewFeedback('');\n      setNewFeedbackRole('');\n      setShowFeedbackModal(false);\n      \n    } catch (error) {\n      console.error(\"Error processing feedback:\", error);\n      setAIError(\"Failed to process feedback. Please try again.\");\n    } finally {\n      setIsAIProcessing(false);\n    }\n  }, [newFeedback, newFeedbackRole, graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  }, []);\n\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      \n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  const handleDataImported = (importedData) => {\n    if (importedData) {\n      setGraphData({ \n        nodes: importedData.nodes || [], \n        links: importedData.links || [] \n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Error screen\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Header and controls */}\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search bar */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={resetVisualization}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={connectNodes}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('feedback')}\n            >\n              Feedback\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main visualization container */}\n      <div className=\"flex flex-1 relative\">\n        <div \n          ref={containerRef} \n          className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n          style={{\n            marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n            minHeight: '500px'\n          }}\n        >\n          <svg \n            ref={svgRef} \n            width=\"100%\" \n            height=\"100%\"\n            className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n            style={{ minHeight: '500px' }}\n            onClick={() => setSelectedNode(null)}\n          />\n          \n          {/* Add Legend */}\n          <Legend colorScale={colorScale} />\n          \n          {/* Zoom controls */}\n          <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomIn}\n            >\n              <span className=\"text-xl\">+</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={zoomOut}\n            >\n              <span className=\"text-xl\">-</span>\n            </button>\n            <button \n              className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n              onClick={fitToScreen}\n            >\n              <span className=\"text-xl\">⊡</span>\n            </button>\n          </div>\n        </div>\n        \n        {/* AI Insights Panel */}\n        {showAIInsightsPanel && aiInsights && (\n          <div \n            className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n            style={{ \n              width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n              maxWidth: '40%'\n            }}\n          >\n            {/* Collapse/Expand Button */}\n            <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n              <button \n                onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n                title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                    isPanelCollapsed \n                      ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                      : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                  } />\n                </svg>\n              </button>\n              \n              {isPanelCollapsed && (\n                <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona}` : \n                   aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n                </div>\n              )}\n              \n              <button \n                onClick={() => setShowAIInsightsPanel(false)}\n                className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n                title=\"Close panel\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            {/* Panel Content - Only shown when expanded */}\n            {!isPanelCollapsed && (\n              <div className=\"flex-1 overflow-y-auto p-6\">\n                <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">AI Feedback Insights</h2>\n                \n                {/* Sentiment Overview Section */}\n                {analyticsData && (\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Sentiment Overview</h3>\n                    <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                      <div className=\"flex items-center justify-around mb-2\">\n                        <div className=\"text-center\">\n                          <div className=\"text-green-500 text-2xl font-bold\">\n                            {analyticsData.sentimentDistribution.Positive}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">Positive</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-red-500 text-2xl font-bold\">\n                            {analyticsData.sentimentDistribution.Negative}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">Negative</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-gray-500 text-2xl font-bold\">\n                            {analyticsData.sentimentDistribution.Neutral}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">Neutral</div>\n                        </div>\n                      </div>\n                      \n                      {/* Sentiment Bar */}\n                      <div className=\"w-full h-4 bg-gray-200 rounded-full overflow-hidden flex\">\n                        <div \n                          className=\"bg-green-500 h-full\" \n                          style={{ \n                            width: `${(analyticsData.sentimentDistribution.Positive / analyticsData.totalFeedback) * 100}%` \n                          }}\n                        ></div>\n                        <div \n                          className=\"bg-red-500 h-full\" \n                          style={{ \n                            width: `${(analyticsData.sentimentDistribution.Negative / analyticsData.totalFeedback) * 100}%` \n                          }}\n                        ></div>\n                        <div \n                          className=\"bg-gray-400 h-full\" \n                          style={{ \n                            width: `${(analyticsData.sentimentDistribution.Neutral / analyticsData.totalFeedback) * 100}%` \n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Theme Analysis Section */}\n                {analyticsData && (\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Theme Analysis</h3>\n                    <div className=\"space-y-4\">\n                      {Object.entries(analyticsData.themeDistribution)\n                        .sort((a, b) => b[1] - a[1])\n                        .slice(0, 5)\n                        .map(([theme, count]) => {\n                          const themeData = analyticsData.sentimentByTheme[theme] || { Positive: 0, Negative: 0, Neutral: 0 };\n                          const total = themeData.Positive + themeData.Negative + themeData.Neutral;\n                          return (\n                            <div key={theme} className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                              <div className=\"flex justify-between items-center mb-2\">\n                                <h4 className=\"font-medium text-gray-800\">{theme}</h4>\n                                <span className=\"text-sm text-gray-500\">{count} items</span>\n                              </div>\n                              \n                              {/* Sentiment Distribution for Theme */}\n                              <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden flex mb-2\">\n                                <div \n                                  className=\"bg-green-500 h-full\" \n                                  style={{ width: `${(themeData.Positive / total) * 100}%` }}\n                                ></div>\n                                <div \n                                  className=\"bg-red-500 h-full\" \n                                  style={{ width: `${(themeData.Negative / total) * 100}%` }}\n                                ></div>\n                                <div \n                                  className=\"bg-gray-400 h-full\" \n                                  style={{ width: `${(themeData.Neutral / total) * 100}%` }}\n                                ></div>\n                              </div>\n                              \n                              <div className=\"flex text-xs text-gray-500 justify-between\">\n                                <span>{Math.round((themeData.Positive / total) * 100)}% Positive</span>\n                                <span>{Math.round((themeData.Negative / total) * 100)}% Negative</span>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  </div>\n                )}\n                \n                {/* User Role Analysis Section */}\n                {analyticsData && Object.keys(analyticsData.roleDistribution).length > 0 && (\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">User Role Analysis</h3>\n                    <div className=\"space-y-4\">\n                      {Object.entries(analyticsData.roleDistribution)\n                        .sort((a, b) => b[1] - a[1])\n                        .map(([role, count]) => {\n                          const roleData = analyticsData.sentimentByRole[role] || { Positive: 0, Negative: 0, Neutral: 0 };\n                          const total = roleData.Positive + roleData.Negative + roleData.Neutral;\n                          return (\n                            <div key={role} className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                              <div className=\"flex justify-between items-center mb-2\">\n                                <h4 className=\"font-medium text-gray-800\">{role}</h4>\n                                <span className=\"text-sm text-gray-500\">{count} feedback items</span>\n                              </div>\n                              \n                              {/* Sentiment Distribution for Role */}\n                              <div className=\"w-full h-3 bg-gray-200 rounded-full overflow-hidden flex mb-2\">\n                                <div \n                                  className=\"bg-green-500 h-full\" \n                                  style={{ width: `${(roleData.Positive / total) * 100}%` }}\n                                ></div>\n                                <div \n                                  className=\"bg-red-500 h-full\" \n                                  style={{ width: `${(roleData.Negative / total) * 100}%` }}\n                                ></div>\n                                <div \n                                  className=\"bg-gray-400 h-full\" \n                                  style={{ width: `${(roleData.Neutral / total) * 100}%` }}\n                                ></div>\n                              </div>\n                              \n                              <div className=\"flex text-xs text-gray-500 justify-between\">\n                                <span>{Math.round((roleData.Positive / total) * 100)}% Positive</span>\n                                <span>{Math.round((roleData.Negative / total) * 100)}% Negative</span>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  </div>\n                )}\n                \n                {/* AI Generated Insights */}\n                <div className=\"mb-8\">\n                  <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Key Insights</h3>\n                  <div className=\"space-y-4\">\n                    {aiInsights && aiInsights.insights && aiInsights.insights.map(insight => (\n                      <div key={insight.id} className=\"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\">\n                        <h4 className=\"font-medium text-gray-800 mb-1\">{insight.title}</h4>\n                        <p className=\"text-gray-700 text-sm\">{insight.description}</p>\n                        \n                        {/* Display sentiment for theme insights if available */}\n                        {insight.sentiment && (\n                          <div className=\"mt-2 pt-2 border-t border-blue-200\">\n                            <div className=\"flex items-center justify-between text-xs\">\n                              <span className=\"text-green-600\">\n                                {insight.sentiment.Positive} positive\n                              </span>\n                              <span className=\"text-red-600\">\n                                {insight.sentiment.Negative} negative  \n                              </span>\n                              <span className=\"text-gray-500\">\n                                {insight.sentiment.Neutral} neutral\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Recommended Actions Section */}\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Recommended Actions</h3>\n                  \n                  {analyticsData && (\n                    <div className=\"space-y-4\">\n                      {/* Find theme with highest negative sentiment */}\n                      {Object.entries(analyticsData.sentimentByTheme)\n                        .sort((a, b) => {\n                          const aNegPct = a[1].Negative / (a[1].Positive + a[1].Negative + a[1].Neutral);\n                          const bNegPct = b[1].Negative / (b[1].Positive + b[1].Negative + b[1].Neutral);\n                          return bNegPct - aNegPct;\n                        })\n                        .slice(0, 1)\n                        .map(([theme, sentiment]) => {\n                          const total = sentiment.Positive + sentiment.Negative + sentiment.Neutral;\n                          const negativePercentage = Math.round((sentiment.Negative / total) * 100);\n                          \n                          return (\n                            <div key={theme} className=\"bg-orange-50 p-4 rounded-lg shadow-sm border-l-4 border-orange-500\">\n                              <h4 className=\"font-medium text-gray-800 mb-1\">Address \"{theme}\" Issues</h4>\n                              <p className=\"text-gray-700 text-sm\">\n                                {negativePercentage}% of feedback about {theme} is negative. \n                                Prioritize improvements in this area to improve user satisfaction.\n                              </p>\n                            </div>\n                          );\n                        })}\n                      \n                      {/* Find user role with highest negative sentiment */}\n                      {Object.entries(analyticsData.sentimentByRole)\n                        .sort((a, b) => {\n                          const aNegPct = a[1].Negative / (a[1].Positive + a[1].Negative + a[1].Neutral);\n                          const bNegPct = b[1].Negative / (b[1].Positive + b[1].Negative + b[1].Neutral);\n                          return bNegPct - aNegPct;\n                        })\n                        .slice(0, 1)\n                        .map(([role, sentiment]) => {\n                          const total = sentiment.Positive + sentiment.Negative + sentiment.Neutral;\n                          const negativePercentage = Math.round((sentiment.Negative / total) * 100);\n                          \n                          return (\n                            <div key={role} className=\"bg-purple-50 p-4 rounded-lg shadow-sm border-l-4 border-purple-500\">\n                              <h4 className=\"font-medium text-gray-800 mb-1\">Improve {role} Experience</h4>\n                              <p className=\"text-gray-700 text-sm\">\n                                {negativePercentage}% of feedback from {role} users is negative.\n                                Consider targeted improvements for this user segment.\n                              </p>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddNode}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleConnectionSubmit}\n                disabled={!connectionTarget}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* Display AI Insights in sidebar when available */}\n      {insights.length > 0 && !showAIInsightsPanel && (\n        <button\n          onClick={() => {\n            setAIInsights({ results: [], insights: insights });\n            setShowAIInsightsPanel(true);\n          }}\n          className=\"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\"\n        >\n          View AI Insights ({insights.length})\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}