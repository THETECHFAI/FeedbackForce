{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { ForceGraph2D } from 'react-force-graph';\nimport './UserResearchNetwork.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [aiInsights, setAiInsights] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [themes, setThemes] = useState([]);\n  const fileInputRef = useRef(null);\n\n  // Function to handle file import\n  const handleFileImport = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        processData(jsonData);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Process the imported JSON data\n  const processData = feedbackData => {\n    // Generate themes based on feedback content\n    const extractedThemes = extractThemes(feedbackData);\n    setThemes(extractedThemes);\n\n    // Create nodes from feedback items\n    const nodes = feedbackData.map((item, index) => {\n      // Assign a theme to each feedback item\n      const itemThemes = assignThemesToFeedback(item.text, extractedThemes);\n      const primaryTheme = itemThemes.length > 0 ? itemThemes[0] : 'Unclassified';\n      return {\n        id: item.id || `node-${index}`,\n        name: item.id || `Feedback ${index + 1}`,\n        val: 1,\n        text: item.text,\n        user_role: item.user_role,\n        timestamp: item.timestamp,\n        theme: primaryTheme,\n        allThemes: itemThemes,\n        color: getColorForTheme(primaryTheme)\n      };\n    });\n\n    // Create links between related nodes\n    const links = createLinks(nodes);\n\n    // Generate AI insights\n    const insights = generateAiInsights(feedbackData, extractedThemes);\n    setGraphData({\n      nodes,\n      links\n    });\n    setAiInsights(insights);\n    setLoading(false);\n  };\n\n  // Extract potential themes from feedback data\n  const extractThemes = feedbackData => {\n    // Simple keyword-based theme extraction\n    const keywords = {\n      'Performance': ['slow', 'fast', 'speed', 'load', 'time', 'performance', 'lag'],\n      'UI/UX': ['layout', 'design', 'interface', 'look', 'ui', 'ux', 'user interface'],\n      'Features': ['feature', 'functionality', 'tool', 'option', 'capability'],\n      'Usability': ['easy', 'difficult', 'intuitive', 'confusing', 'simple', 'complex'],\n      'Data': ['data', 'information', 'stats', 'metrics', 'numbers', 'charts']\n    };\n\n    // Count occurrences of each theme\n    const themeCounts = {};\n    feedbackData.forEach(item => {\n      const lowerText = item.text.toLowerCase();\n      Object.entries(keywords).forEach(([theme, words]) => {\n        if (words.some(word => lowerText.includes(word))) {\n          themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n        }\n      });\n    });\n\n    // Return themes that appear in the data\n    return Object.keys(themeCounts).filter(theme => themeCounts[theme] > 0);\n  };\n\n  // Assign themes to a specific feedback item\n  const assignThemesToFeedback = (text, availableThemes) => {\n    const keywords = {\n      'Performance': ['slow', 'fast', 'speed', 'load', 'time', 'performance', 'lag'],\n      'UI/UX': ['layout', 'design', 'interface', 'look', 'ui', 'ux', 'user interface'],\n      'Features': ['feature', 'functionality', 'tool', 'option', 'capability'],\n      'Usability': ['easy', 'difficult', 'intuitive', 'confusing', 'simple', 'complex'],\n      'Data': ['data', 'information', 'stats', 'metrics', 'numbers', 'charts']\n    };\n    const matchedThemes = [];\n    const lowerText = text.toLowerCase();\n    availableThemes.forEach(theme => {\n      if (keywords[theme] && keywords[theme].some(word => lowerText.includes(word))) {\n        matchedThemes.push(theme);\n      }\n    });\n    return matchedThemes.length > 0 ? matchedThemes : ['Miscellaneous'];\n  };\n\n  // Create links between related nodes\n  const createLinks = nodes => {\n    const links = [];\n\n    // Connect nodes that share themes\n    for (let i = 0; i < nodes.length; i++) {\n      for (let j = i + 1; j < nodes.length; j++) {\n        const node1 = nodes[i];\n        const node2 = nodes[j];\n\n        // Check for theme overlap\n        const sharedThemes = node1.allThemes.filter(theme => node2.allThemes.includes(theme));\n        if (sharedThemes.length > 0) {\n          links.push({\n            source: node1.id,\n            target: node2.id,\n            value: sharedThemes.length,\n            theme: sharedThemes[0]\n          });\n        }\n      }\n    }\n    return links;\n  };\n\n  // Generate insights from the feedback data\n  const generateAiInsights = (feedbackData, themes) => {\n    // Simple insights generation\n    const totalFeedback = feedbackData.length;\n    let insightText = `### AI Analysis of ${totalFeedback} Feedback Items\\n\\n`;\n\n    // Add theme distribution\n    insightText += \"#### Key Themes Identified:\\n\";\n    themes.forEach(theme => {\n      const count = feedbackData.filter(item => assignThemesToFeedback(item.text, [theme]).includes(theme)).length;\n      const percentage = Math.round(count / totalFeedback * 100);\n      insightText += `- **${theme}**: ${count} items (${percentage}%)\\n`;\n    });\n\n    // Add role distribution\n    const roles = {};\n    feedbackData.forEach(item => {\n      if (item.user_role) {\n        roles[item.user_role] = (roles[item.user_role] || 0) + 1;\n      }\n    });\n    insightText += \"\\n#### Feedback by User Role:\\n\";\n    Object.entries(roles).forEach(([role, count]) => {\n      const percentage = Math.round(count / totalFeedback * 100);\n      insightText += `- **${role}**: ${count} items (${percentage}%)\\n`;\n    });\n    return insightText;\n  };\n\n  // Get color for a theme\n  const getColorForTheme = theme => {\n    const themeColors = {\n      'Performance': '#ff6b6b',\n      'UI/UX': '#48dbfb',\n      'Features': '#1dd1a1',\n      'Usability': '#feca57',\n      'Data': '#5f27cd',\n      'Miscellaneous': '#c8d6e5'\n    };\n    return themeColors[theme] || '#c8d6e5';\n  };\n\n  // Handle file drop\n  const handleFileDrop = event => {\n    event.preventDefault();\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      const file = event.dataTransfer.items[0].getAsFile();\n      if (file.type === \"application/json\") {\n        const reader = new FileReader();\n        reader.onload = e => {\n          try {\n            const jsonData = JSON.parse(e.target.result);\n            processData(jsonData);\n          } catch (error) {\n            console.error(\"Error parsing JSON:\", error);\n          }\n        };\n        reader.readAsText(file);\n      }\n    }\n  };\n  const preventDefaults = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  useEffect(() => {\n    // For drag and drop functionality\n    const dropArea = document.getElementById('drop-area');\n    if (dropArea) {\n      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n        dropArea.addEventListener(eventName, preventDefaults, false);\n      });\n      dropArea.addEventListener('drop', handleFileDrop, false);\n      return () => {\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          dropArea.removeEventListener(eventName, preventDefaults, false);\n        });\n        dropArea.removeEventListener('drop', handleFileDrop, false);\n      };\n    }\n  }, []);\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-research-network\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Feedback Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"drop-area\",\n        className: \"drop-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & drop your feedback JSON file here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".json\",\n          onChange: handleFileImport,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileInputRef.current.click(),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), themes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"themes-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Themes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-items\",\n          children: themes.map(theme => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"theme-color\",\n              style: {\n                backgroundColor: getColorForTheme(theme)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"theme-name\",\n              children: theme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, theme, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n        graphData: graphData,\n        nodeLabel: \"text\",\n        nodeColor: node => node.color,\n        nodeRelSize: 6,\n        linkWidth: link => 1 + link.value * 0.5,\n        linkColor: link => getColorForTheme(link.theme),\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-panel\",\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedNode.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback-text\",\n          children: selectedNode.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), selectedNode.user_role && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), \" \", selectedNode.user_role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), selectedNode.timestamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feedback-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), \" \", new Date(selectedNode.timestamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-themes\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Themes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), selectedNode.allThemes.map(theme => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"theme-tag\",\n            style: {\n              backgroundColor: getColorForTheme(theme)\n            },\n            children: theme\n          }, theme, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-insights\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: aiInsights.replace(/\\n/g, \"<br />\")\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"6/eLL8ivh+VgB+eiR5Y5b63BbWU=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","ForceGraph2D","jsxDEV","_jsxDEV","UserResearchNetwork","_s","graphData","setGraphData","nodes","links","selectedNode","setSelectedNode","aiInsights","setAiInsights","loading","setLoading","themes","setThemes","fileInputRef","handleFileImport","event","file","target","files","reader","FileReader","onload","e","jsonData","JSON","parse","result","processData","error","console","readAsText","feedbackData","extractedThemes","extractThemes","map","item","index","itemThemes","assignThemesToFeedback","text","primaryTheme","length","id","name","val","user_role","timestamp","theme","allThemes","color","getColorForTheme","createLinks","insights","generateAiInsights","keywords","themeCounts","forEach","lowerText","toLowerCase","Object","entries","words","some","word","includes","keys","filter","availableThemes","matchedThemes","push","i","j","node1","node2","sharedThemes","source","value","totalFeedback","insightText","count","percentage","Math","round","roles","role","themeColors","handleFileDrop","preventDefault","dataTransfer","items","getAsFile","type","preventDefaults","stopPropagation","dropArea","document","getElementById","eventName","addEventListener","removeEventListener","handleNodeClick","node","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","style","display","onClick","current","click","backgroundColor","nodeLabel","nodeColor","nodeRelSize","linkWidth","link","linkColor","onNodeClick","Date","toLocaleString","dangerouslySetInnerHTML","__html","replace","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { ForceGraph2D } from 'react-force-graph';\nimport './UserResearchNetwork.css';\n\nconst UserResearchNetwork = () => {\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [aiInsights, setAiInsights] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [themes, setThemes] = useState([]);\n  const fileInputRef = useRef(null);\n  \n  // Function to handle file import\n  const handleFileImport = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const jsonData = JSON.parse(e.target.result);\n        processData(jsonData);\n      } catch (error) {\n        console.error(\"Error parsing JSON:\", error);\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  // Process the imported JSON data\n  const processData = (feedbackData) => {\n    // Generate themes based on feedback content\n    const extractedThemes = extractThemes(feedbackData);\n    setThemes(extractedThemes);\n    \n    // Create nodes from feedback items\n    const nodes = feedbackData.map((item, index) => {\n      // Assign a theme to each feedback item\n      const itemThemes = assignThemesToFeedback(item.text, extractedThemes);\n      const primaryTheme = itemThemes.length > 0 ? itemThemes[0] : 'Unclassified';\n      \n      return {\n        id: item.id || `node-${index}`,\n        name: item.id || `Feedback ${index + 1}`,\n        val: 1,\n        text: item.text,\n        user_role: item.user_role,\n        timestamp: item.timestamp,\n        theme: primaryTheme,\n        allThemes: itemThemes,\n        color: getColorForTheme(primaryTheme)\n      };\n    });\n    \n    // Create links between related nodes\n    const links = createLinks(nodes);\n    \n    // Generate AI insights\n    const insights = generateAiInsights(feedbackData, extractedThemes);\n    \n    setGraphData({ nodes, links });\n    setAiInsights(insights);\n    setLoading(false);\n  };\n  \n  // Extract potential themes from feedback data\n  const extractThemes = (feedbackData) => {\n    // Simple keyword-based theme extraction\n    const keywords = {\n      'Performance': ['slow', 'fast', 'speed', 'load', 'time', 'performance', 'lag'],\n      'UI/UX': ['layout', 'design', 'interface', 'look', 'ui', 'ux', 'user interface'],\n      'Features': ['feature', 'functionality', 'tool', 'option', 'capability'],\n      'Usability': ['easy', 'difficult', 'intuitive', 'confusing', 'simple', 'complex'],\n      'Data': ['data', 'information', 'stats', 'metrics', 'numbers', 'charts']\n    };\n    \n    // Count occurrences of each theme\n    const themeCounts = {};\n    \n    feedbackData.forEach(item => {\n      const lowerText = item.text.toLowerCase();\n      \n      Object.entries(keywords).forEach(([theme, words]) => {\n        if (words.some(word => lowerText.includes(word))) {\n          themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n        }\n      });\n    });\n    \n    // Return themes that appear in the data\n    return Object.keys(themeCounts).filter(theme => themeCounts[theme] > 0);\n  };\n  \n  // Assign themes to a specific feedback item\n  const assignThemesToFeedback = (text, availableThemes) => {\n    const keywords = {\n      'Performance': ['slow', 'fast', 'speed', 'load', 'time', 'performance', 'lag'],\n      'UI/UX': ['layout', 'design', 'interface', 'look', 'ui', 'ux', 'user interface'],\n      'Features': ['feature', 'functionality', 'tool', 'option', 'capability'],\n      'Usability': ['easy', 'difficult', 'intuitive', 'confusing', 'simple', 'complex'],\n      'Data': ['data', 'information', 'stats', 'metrics', 'numbers', 'charts']\n    };\n    \n    const matchedThemes = [];\n    const lowerText = text.toLowerCase();\n    \n    availableThemes.forEach(theme => {\n      if (keywords[theme] && keywords[theme].some(word => lowerText.includes(word))) {\n        matchedThemes.push(theme);\n      }\n    });\n    \n    return matchedThemes.length > 0 ? matchedThemes : ['Miscellaneous'];\n  };\n  \n  // Create links between related nodes\n  const createLinks = (nodes) => {\n    const links = [];\n    \n    // Connect nodes that share themes\n    for (let i = 0; i < nodes.length; i++) {\n      for (let j = i + 1; j < nodes.length; j++) {\n        const node1 = nodes[i];\n        const node2 = nodes[j];\n        \n        // Check for theme overlap\n        const sharedThemes = node1.allThemes.filter(theme => \n          node2.allThemes.includes(theme)\n        );\n        \n        if (sharedThemes.length > 0) {\n          links.push({\n            source: node1.id,\n            target: node2.id,\n            value: sharedThemes.length,\n            theme: sharedThemes[0]\n          });\n        }\n      }\n    }\n    \n    return links;\n  };\n  \n  // Generate insights from the feedback data\n  const generateAiInsights = (feedbackData, themes) => {\n    // Simple insights generation\n    const totalFeedback = feedbackData.length;\n    \n    let insightText = `### AI Analysis of ${totalFeedback} Feedback Items\\n\\n`;\n    \n    // Add theme distribution\n    insightText += \"#### Key Themes Identified:\\n\";\n    themes.forEach(theme => {\n      const count = feedbackData.filter(item => \n        assignThemesToFeedback(item.text, [theme]).includes(theme)\n      ).length;\n      \n      const percentage = Math.round((count / totalFeedback) * 100);\n      insightText += `- **${theme}**: ${count} items (${percentage}%)\\n`;\n    });\n    \n    // Add role distribution\n    const roles = {};\n    feedbackData.forEach(item => {\n      if (item.user_role) {\n        roles[item.user_role] = (roles[item.user_role] || 0) + 1;\n      }\n    });\n    \n    insightText += \"\\n#### Feedback by User Role:\\n\";\n    Object.entries(roles).forEach(([role, count]) => {\n      const percentage = Math.round((count / totalFeedback) * 100);\n      insightText += `- **${role}**: ${count} items (${percentage}%)\\n`;\n    });\n    \n    return insightText;\n  };\n  \n  // Get color for a theme\n  const getColorForTheme = (theme) => {\n    const themeColors = {\n      'Performance': '#ff6b6b',\n      'UI/UX': '#48dbfb',\n      'Features': '#1dd1a1',\n      'Usability': '#feca57',\n      'Data': '#5f27cd',\n      'Miscellaneous': '#c8d6e5'\n    };\n    \n    return themeColors[theme] || '#c8d6e5';\n  };\n  \n  // Handle file drop\n  const handleFileDrop = (event) => {\n    event.preventDefault();\n    \n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      const file = event.dataTransfer.items[0].getAsFile();\n      if (file.type === \"application/json\") {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          try {\n            const jsonData = JSON.parse(e.target.result);\n            processData(jsonData);\n          } catch (error) {\n            console.error(\"Error parsing JSON:\", error);\n          }\n        };\n        reader.readAsText(file);\n      }\n    }\n  };\n  \n  const preventDefaults = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  \n  useEffect(() => {\n    // For drag and drop functionality\n    const dropArea = document.getElementById('drop-area');\n    if (dropArea) {\n      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n        dropArea.addEventListener(eventName, preventDefaults, false);\n      });\n      \n      dropArea.addEventListener('drop', handleFileDrop, false);\n      \n      return () => {\n        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n          dropArea.removeEventListener(eventName, preventDefaults, false);\n        });\n        \n        dropArea.removeEventListener('drop', handleFileDrop, false);\n      };\n    }\n  }, []);\n  \n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n  };\n  \n  return (\n    <div className=\"user-research-network\">\n      <div className=\"controls-panel\">\n        <h2>User Feedback Network</h2>\n        <div id=\"drop-area\" className=\"drop-area\">\n          <p>Drag & drop your feedback JSON file here</p>\n          <p>or</p>\n          <input\n            type=\"file\"\n            accept=\".json\"\n            onChange={handleFileImport}\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n          />\n          <button onClick={() => fileInputRef.current.click()}>\n            Select File\n          </button>\n        </div>\n        \n        {themes.length > 0 && (\n          <div className=\"themes-legend\">\n            <h3>Themes</h3>\n            <div className=\"theme-items\">\n              {themes.map(theme => (\n                <div className=\"theme-item\" key={theme}>\n                  <span \n                    className=\"theme-color\" \n                    style={{ backgroundColor: getColorForTheme(theme) }}\n                  ></span>\n                  <span className=\"theme-name\">{theme}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"graph-container\">\n        {loading ? (\n          <div className=\"loading-indicator\">Loading...</div>\n        ) : (\n          <ForceGraph2D\n            graphData={graphData}\n            nodeLabel=\"text\"\n            nodeColor={node => node.color}\n            nodeRelSize={6}\n            linkWidth={link => 1 + link.value * 0.5}\n            linkColor={link => getColorForTheme(link.theme)}\n            onNodeClick={handleNodeClick}\n          />\n        )}\n      </div>\n      \n      <div className=\"details-panel\">\n        {selectedNode ? (\n          <div className=\"node-details\">\n            <h3>{selectedNode.name}</h3>\n            <p className=\"feedback-text\">{selectedNode.text}</p>\n            {selectedNode.user_role && (\n              <p className=\"feedback-meta\">\n                <strong>Role:</strong> {selectedNode.user_role}\n              </p>\n            )}\n            {selectedNode.timestamp && (\n              <p className=\"feedback-meta\">\n                <strong>Date:</strong> {new Date(selectedNode.timestamp).toLocaleString()}\n              </p>\n            )}\n            <div className=\"feedback-themes\">\n              <strong>Themes:</strong>\n              {selectedNode.allThemes.map(theme => (\n                <span \n                  key={theme} \n                  className=\"theme-tag\"\n                  style={{ backgroundColor: getColorForTheme(theme) }}\n                >\n                  {theme}\n                </span>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"ai-insights\">\n            <h3>AI Insights</h3>\n            <div dangerouslySetInnerHTML={{ __html: aiInsights.replace(/\\n/g, \"<br />\") }} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}