{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n\n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n\n      // Update the mini-map viewport to show the current view\n      if (showMiniMap) {\n        const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n        const viewportRect = svg.select(\".mini-map-viewport\");\n        if (!viewportRect.empty()) {\n          const {\n            x,\n            y,\n            k\n          } = event.transform;\n\n          // Calculate the viewport rectangle in the mini-map\n          const vpWidth = miniMapSize / k;\n          const vpHeight = miniMapSize / k;\n          const vpX = -x / dimensions.width * miniMapSize;\n          const vpY = -y / dimensions.height * miniMapSize;\n\n          // Update the viewport rectangle\n          viewportRect.attr(\"x\", Math.max(0, vpX)).attr(\"y\", Math.max(0, vpY)).attr(\"width\", Math.min(miniMapSize, vpWidth)).attr(\"height\", Math.min(miniMapSize, vpHeight));\n        }\n      }\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n\n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n\n    // Create links\n    const linkElements = g.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"stroke\", d => {\n      // Determine color based on the types of nodes being connected\n      const sourceNode = nodeMap[d.source];\n      const targetNode = nodeMap[d.target];\n      if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n\n      const sourceType = sourceNode.type;\n      const targetType = targetNode.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n\n      return \"#CBD5E0\"; // Default gray\n    }).attr(\"stroke-width\", d => Math.max(1, d.strength * 5)).attr(\"stroke-opacity\", 0.6);\n\n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      setSelectedNode(d);\n      handleNodeClick(d);\n    });\n\n    // Add circles to nodes\n    nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 0.8;\n      if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n      if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n      if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n      return 0.3;\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"text-anchor\", \"middle\").attr(\"dy\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight + 15;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22 + 15;\n        return 20 + 15;\n      }\n      return 22 + 15;\n    }).attr(\"font-size\", \"12px\").attr(\"fill\", \"#4A5568\").attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 1;\n      if (highlightMode === 'themes' && d.type === 'theme') return 1;\n      if (highlightMode === 'features' && d.type === 'feature') return 1;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1;\n      return 0.5;\n    });\n\n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)).force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n\n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50;\n      nodes.forEach(node => {\n        // Add some random movement if simulation is running\n        if (isSimulationRunning) {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        }\n\n        // Update positions\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n\n    // Update the simulation on tick\n    simulation.on(\"tick\", () => {\n      // Apply the boundary force\n      simulation.force(\"boundary\")();\n\n      // Update positions\n      linkElements.attr(\"x1\", d => {\n        const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n        return target ? target.y : 0;\n      });\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Pause or resume the simulation based on state\n    if (!isSimulationRunning) {\n      simulation.alpha(0).stop();\n    } else {\n      simulation.alpha(0.3).restart();\n    }\n\n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n\n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n\n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Update the importData function to handle both formats\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        }\n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        }\n        // Invalid format\n        else {\n          setError(\"Invalid data format. The file should contain either:\" + \"\\n1. A 'feedback' array with user feedback items, or\" + \"\\n2. 'nodes' and 'links' arrays for direct graph data\");\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    setIsAIProcessing(true);\n    setAIError(null);\n    try {\n      // Process each feedback item\n      const results = [];\n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n\n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      setAIInsights(updatedInsights);\n\n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === item.user_role);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n\n        // Find the result for this item\n        const result = results.find(r => r.text === item.text && r.user_role === item.user_role);\n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n\n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n\n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n\n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = node => {\n    if (!node) return;\n\n    // Set the selected node\n    setSelectedNode(node);\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => link.source === node.id || link.target === node.id || typeof link.source === 'object' && link.source.id === node.id || typeof link.target === 'object' && link.target.id === node.id);\n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => result.theme === node.name);\n      }\n\n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text)).then(ideas => {\n          if (ideas && ideas.length > 0) {\n            setAIInsights(prev => ({\n              ...prev,\n              featureIdeas: ideas\n            }));\n          }\n        }).catch(error => {\n          console.error(\"Error generating feature ideas:\", error);\n        });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => {\n            var _aiInsights$results, _aiInsights$results$f;\n            return {\n              feedbackIndex: index,\n              text: item.text,\n              user_role: item.user_role,\n              theme: (aiInsights === null || aiInsights === void 0 ? void 0 : (_aiInsights$results = aiInsights.results) === null || _aiInsights$results === void 0 ? void 0 : (_aiInsights$results$f = _aiInsights$results.find(r => r.text === item.text)) === null || _aiInsights$results$f === void 0 ? void 0 : _aiInsights$results$f.theme) || \"Unknown\"\n            };\n          });\n        }\n      }\n    }\n\n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n\n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n\n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n\n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n\n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n\n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n\n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id,\n            // Use ID reference instead of object\n            target: themeId,\n            // Use ID reference instead of object\n            strength: 0.7\n          };\n\n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n\n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id,\n              // Use ID reference instead of object\n              target: themeNode.id,\n              // Use ID reference instead of object\n              strength: 0.7\n            };\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n\n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...((aiInsights === null || aiInsights === void 0 ? void 0 : aiInsights.results) || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n\n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n\n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9) // Semi-transparent background\n    .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n    .attr(\"stroke-width\", 2) // Thicker border\n    .attr(\"rx\", 6); // Rounded corners\n\n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n    .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n    .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n    .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n\n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n\n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n\n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 4.5) // Even larger radius for better visibility\n    .attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3); // Brighter colors\n    }).attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n    .attr(\"stroke-width\", 1.5); // Thicker stroke\n\n    // Add a label with better visibility\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 20).attr(\"font-size\", \"14px\") // Larger font\n    .attr(\"font-weight\", \"bold\") // Bold text\n    .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n    .text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) {\n      // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", miniMapSize - 12).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"11px\").attr(\"font-weight\", \"medium\").attr(\"fill\", \"#4A5568\").text(\"Click to navigate\");\n\n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n\n    // Theme legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"theme\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 8).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Themes\");\n\n    // Feature legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 70).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"feature\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 78).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Features\");\n\n    // Persona legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 140).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"persona\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 148).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Personas\");\n\n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    return miniMapSimulation;\n  };\n\n  // Update the transformFeedbackToGraph function with intelligent analysis\n  const transformFeedbackToGraph = async feedbackItems => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Start with empty graph structure\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n\n      // Create maps to track existing nodes by ID\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        feedback: {}\n      };\n\n      // Step 1: First pass - process all feedback to extract personas and raw feedback nodes\n      for (const item of feedbackItems) {\n        // Generate an ID if not present\n        const feedbackId = item.id || `feedback-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n\n        // Create feedback node\n        const feedbackNode = {\n          id: feedbackId,\n          name: item.text.length > 30 ? item.text.substring(0, 30) + '...' : item.text,\n          fullText: item.text,\n          type: \"feedback\",\n          timestamp: item.timestamp || new Date().toISOString()\n        };\n        newGraph.nodes.push(feedbackNode);\n        nodeMap.feedback[feedbackId] = feedbackNode;\n\n        // Create or update persona node\n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment feedback count for existing persona\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n\n        // Create link between persona and feedback\n        newGraph.links.push({\n          source: nodeMap.personas[item.user_role].id,\n          target: feedbackId,\n          strength: 0.6\n        });\n      }\n\n      // Step 2: Batch process all feedback with AI to identify themes\n      console.log(\"Processing feedback batch with AI...\");\n\n      // Create a batch analysis request to classify all feedback at once\n      const batchAnalysisPrompt = `\n        Analyze the following user feedback items and:\n        1. Identify common themes across all feedback\n        2. Classify each feedback item into one or more themes\n        3. Suggest connections between related themes\n        \n        Feedback items:\n        ${feedbackItems.map((item, i) => `${i + 1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n      try {\n        // Call OpenAI for batch analysis\n        const batchAnalysisResult = await analyzeMultipleFeedback(feedbackItems);\n        console.log(\"Batch analysis result:\", batchAnalysisResult);\n\n        // Step 3: Create theme nodes from the analysis\n        if (batchAnalysisResult && batchAnalysisResult.themes) {\n          for (const theme of batchAnalysisResult.themes) {\n            const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n            const themeNode = {\n              id: themeId,\n              name: theme.name,\n              description: theme.description,\n              type: \"theme\",\n              feedbackCount: 0\n            };\n            newGraph.nodes.push(themeNode);\n            nodeMap.themes[theme.name] = themeNode;\n          }\n        }\n\n        // Step 4: Process classifications to connect feedback to themes\n        if (batchAnalysisResult && batchAnalysisResult.classifications) {\n          for (const classification of batchAnalysisResult.classifications) {\n            const feedbackItem = feedbackItems[classification.feedbackIndex];\n            if (!feedbackItem) continue;\n            const feedbackId = feedbackItem.id || `feedback-${Date.now()}-${classification.feedbackIndex}`;\n            const feedbackNode = nodeMap.feedback[feedbackId];\n            if (!feedbackNode) continue;\n\n            // Add sentiment and priority to feedback node\n            feedbackNode.sentiment = classification.sentiment;\n            feedbackNode.priority = classification.priority;\n\n            // Connect to primary theme\n            if (classification.themes && classification.themes.length > 0) {\n              const primaryTheme = classification.themes[0];\n              const themeNode = nodeMap.themes[primaryTheme];\n              if (themeNode) {\n                // Increment theme's feedback count\n                themeNode.feedbackCount += 1;\n\n                // Create link between feedback and theme\n                newGraph.links.push({\n                  source: feedbackId,\n                  target: themeNode.id,\n                  strength: 0.8,\n                  // Strong connection to primary theme\n                  isPrimary: true\n                });\n\n                // Also connect persona to theme\n                const personaNode = nodeMap.personas[feedbackItem.user_role];\n                if (personaNode) {\n                  // Check if link already exists\n                  const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                  if (!linkExists) {\n                    newGraph.links.push({\n                      source: personaNode.id,\n                      target: themeNode.id,\n                      strength: 0.7\n                    });\n                  }\n                }\n              }\n\n              // Connect to secondary themes if any\n              if (classification.themes.length > 1) {\n                for (let i = 1; i < classification.themes.length; i++) {\n                  const secondaryTheme = classification.themes[i];\n                  const secondaryThemeNode = nodeMap.themes[secondaryTheme];\n                  if (secondaryThemeNode) {\n                    // Increment theme's feedback count\n                    secondaryThemeNode.feedbackCount += 1;\n\n                    // Create link between feedback and secondary theme\n                    newGraph.links.push({\n                      source: feedbackId,\n                      target: secondaryThemeNode.id,\n                      strength: 0.5,\n                      // Weaker connection to secondary theme\n                      isSecondary: true\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Step 5: Create connections between related themes\n        if (batchAnalysisResult && batchAnalysisResult.themeConnections) {\n          for (const connection of batchAnalysisResult.themeConnections) {\n            const sourceThemeNode = nodeMap.themes[connection.source];\n            const targetThemeNode = nodeMap.themes[connection.target];\n            if (sourceThemeNode && targetThemeNode) {\n              newGraph.links.push({\n                source: sourceThemeNode.id,\n                target: targetThemeNode.id,\n                strength: connection.strength,\n                reason: connection.reason\n              });\n            }\n          }\n        }\n\n        // Step 6: Generate feature suggestions based on themes\n        const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 3);\n        if (significantThemes.length > 0) {\n          try {\n            const featureSuggestions = await generateFeatureSuggestions(significantThemes.map(theme => ({\n              name: theme.name,\n              description: theme.description,\n              feedbackCount: theme.feedbackCount\n            })), feedbackItems.map(item => item.text));\n            if (featureSuggestions && featureSuggestions.length > 0) {\n              // Add feature nodes\n              for (const feature of featureSuggestions) {\n                const featureId = `feature-${Date.now()}-${newGraph.nodes.length}`;\n                const featureNode = {\n                  id: featureId,\n                  name: feature.name,\n                  description: feature.description,\n                  type: \"feature\",\n                  priority: feature.priority || \"Medium\",\n                  implementationDetails: feature.implementationDetails || \"\"\n                };\n                newGraph.nodes.push(featureNode);\n\n                // Connect feature to related themes\n                if (feature.relatedThemes) {\n                  for (const themeName of feature.relatedThemes) {\n                    const themeNode = nodeMap.themes[themeName];\n                    if (themeNode) {\n                      newGraph.links.push({\n                        source: featureId,\n                        target: themeNode.id,\n                        strength: 0.7\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          } catch (error) {\n            console.error(\"Error generating feature suggestions:\", error);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in batch analysis:\", error);\n        setError(\"Error analyzing feedback. Falling back to basic processing.\");\n\n        // Fallback: Process each feedback individually\n        for (const item of feedbackItems) {\n          try {\n            const result = await classifyFeedback(item.text);\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n              } else {\n                // Increment feedback count for existing theme\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Create link between persona and theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          } catch (innerError) {\n            console.error(\"Error classifying individual feedback:\", innerError);\n          }\n        }\n      }\n\n      // Update the graph data\n      setGraphData(newGraph);\n\n      // Process all feedback with AI for insights\n      processFeedbackBatch(feedbackItems);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback data. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  // Add this new function to analyze multiple feedback items at once\n  const analyzeMultipleFeedback = async feedbackItems => {\n    try {\n      // Create a system message that explains the task\n      const systemMessage = `\n        You are an AI assistant that specializes in analyzing user feedback for product teams.\n        Your task is to analyze multiple feedback items, identify common themes, and classify each feedback.\n        You should also identify potential connections between related themes.\n      `;\n\n      // Create a user message with the feedback items\n      const userMessage = `\n        Please analyze these ${feedbackItems.length} user feedback items:\n        \n        ${feedbackItems.map((item, i) => `${i + 1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Identify 3-7 common themes across all feedback.\n        Classify each feedback item into one or more themes.\n        Suggest connections between related themes.\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n\n      // Call the OpenAI API\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo\",\n          messages: [{\n            role: \"system\",\n            content: systemMessage\n          }, {\n            role: \"user\",\n            content: userMessage\n          }],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n\n      // Extract the JSON object from the response\n      try {\n        // Find JSON in the response (it might be wrapped in markdown code blocks)\n        const jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || content.match(/```\\n([\\s\\S]*?)\\n```/) || content.match(/{[\\s\\S]*?}/);\n        const jsonString = jsonMatch ? jsonMatch[1] || jsonMatch[0] : content;\n        return JSON.parse(jsonString);\n      } catch (parseError) {\n        console.error(\"Error parsing OpenAI response:\", parseError);\n        console.log(\"Raw response:\", content);\n        throw new Error(\"Failed to parse the AI response\");\n      }\n    } catch (error) {\n      console.error(\"Error calling OpenAI API:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to generate feature suggestions based on themes\n  const generateFeatureSuggestions = async (themes, feedbackTexts) => {\n    try {\n      // Create a system message that explains the task\n      const systemMessage = `\n        You are an AI product manager that specializes in converting user feedback into actionable feature ideas.\n        Your task is to analyze themes from user feedback and suggest concrete feature improvements.\n      `;\n\n      // Create a user message with the themes and sample feedback\n      const userMessage = `\n        Based on the following themes identified from user feedback:\n        \n        ${themes.map(theme => `- ${theme.name} (${theme.feedbackCount} mentions): ${theme.description || 'No description'}`).join('\\n')}\n        \n        And these sample feedback items:\n        ${feedbackTexts.slice(0, 5).map((text, i) => `${i + 1}. \"${text}\"`).join('\\n')}\n        \n        Suggest 2-4 concrete feature ideas that would address these themes.\n        \n        For each feature idea, provide:\n        1. A clear, concise name\n        2. A brief description\n        3. Priority level (High/Medium/Low)\n        4. Related themes it addresses\n        5. Brief implementation details\n        \n        Respond with a JSON array of feature objects:\n        [\n          {\n            \"name\": \"Feature Name\",\n            \"description\": \"Feature description\",\n            \"priority\": \"High/Medium/Low\",\n            \"relatedThemes\": [\"Theme Name\"],\n            \"implementationDetails\": \"Brief technical implementation notes\"\n          }\n        ]\n      `;\n\n      // Call the OpenAI API\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo\",\n          messages: [{\n            role: \"system\",\n            content: systemMessage\n          }, {\n            role: \"user\",\n            content: userMessage\n          }],\n          temperature: 0.7,\n          max_tokens: 1500\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      const content = data.choices[0].message.content;\n\n      // Extract the JSON array from the response\n      try {\n        // Find JSON in the response (it might be wrapped in markdown code blocks)\n        const jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || content.match(/```\\n([\\s\\S]*?)\\n```/) || content.match(/\\[([\\s\\S]*?)\\]/);\n        const jsonString = jsonMatch ? jsonMatch[1] || jsonMatch[0] : content;\n        return JSON.parse(jsonString);\n      } catch (parseError) {\n        console.error(\"Error parsing OpenAI response:\", parseError);\n        console.log(\"Raw response:\", content);\n        throw new Error(\"Failed to parse the AI response\");\n      }\n    } catch (error) {\n      console.error(\"Error calling OpenAI API:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to download a sample template\n  const downloadSampleTemplate = () => {\n    const sampleData = {\n      feedback: [{\n        id: \"feedback-1\",\n        text: \"The application is too slow when loading large datasets\",\n        user_role: \"Data Analyst\",\n        timestamp: \"2023-07-15T14:30:00Z\"\n      }, {\n        id: \"feedback-2\",\n        text: \"I love the new dashboard layout, it makes finding information much easier\",\n        user_role: \"Product Manager\",\n        timestamp: \"2023-07-16T09:45:00Z\"\n      }, {\n        id: \"feedback-3\",\n        text: \"The mobile app is missing key features that are available on the desktop version\",\n        user_role: \"Field Sales Rep\",\n        timestamp: \"2023-07-17T11:20:00Z\"\n      }]\n    };\n    const dataStr = JSON.stringify(sampleData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-template.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2026,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2027,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2025,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2035,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2036,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2037,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2034,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceNode = graphData.nodes.find(n => n.id === link.source);\n      const targetNode = graphData.nodes.find(n => n.id === link.target);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2163,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2195,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2200,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2194,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2185,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: () => {\n              if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                setGraphData(initialData);\n              }\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: () => {\n              if (selectedNode) {\n                initiateConnection(selectedNode);\n              }\n            },\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2359,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2383,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2401,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2397,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2413,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2421,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2422,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2423,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2416,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2412,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!newNodeName.trim()) {\n                alert(\"Please enter a name\");\n                return;\n              }\n              const newNode = {\n                id: `${modalType}-${Date.now()}`,\n                name: newNodeName,\n                type: modalType,\n                ...(modalType === 'theme' ? {\n                  feedbackCount: newNodeFeedbackCount\n                } : {}),\n                ...(modalType === 'feature' ? {\n                  priority: newNodePriority\n                } : {})\n              };\n              setGraphData({\n                nodes: [...graphData.nodes, newNode],\n                links: [...graphData.links]\n              });\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2378,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2377,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2486,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2500,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2502,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!connectionTarget) {\n                alert(\"Please select a target node\");\n                return;\n              }\n\n              // Check if connection already exists\n              const connectionExists = graphData.links.some(link => link.source === connectionSource.id && link.target === connectionTarget || link.source === connectionTarget && link.target === connectionSource.id);\n              if (connectionExists) {\n                alert(\"This connection already exists\");\n                return;\n              }\n              const newLink = {\n                source: connectionSource.id,\n                target: connectionTarget,\n                strength: connectionStrength\n              };\n              setGraphData({\n                nodes: [...graphData.nodes],\n                links: [...graphData.links, newLink]\n              });\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2477,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2476,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2588,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2591,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2600,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2631,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2630,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2624,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2613,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2639,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2582,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2581,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2664,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2663,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2658,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2673,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2686,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2685,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2680,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2657,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2695,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2694,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2706,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2707,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2705,\n            columnNumber: 19\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2716,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2723,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2724,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2719,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2717,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2715,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2740,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2743,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2741,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2739,\n            columnNumber: 21\n          }, this), aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"AI Feature Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2757,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: aiInsights.featureIdeas.map((idea, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-2 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-blue-800\",\n                  children: idea.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2761,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-blue-600 mt-1\",\n                  children: idea.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2762,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2760,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2758,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2756,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2776,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2777,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2775,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2786,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2787,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2785,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2774,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2797,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2804,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2805,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2800,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2798,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2796,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2817,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2820,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2818,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2816,\n            columnNumber: 21\n          }, this), aiInsights.implementationDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Implementation Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2834,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded text-sm\",\n              children: aiInsights.implementationDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2835,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2833,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2847,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2848,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2846,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Common Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2857,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2864,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2865,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2860,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2858,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2856,\n            columnNumber: 21\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Relevant Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2877,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2884,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2885,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2880,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2878,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2876,\n            columnNumber: 21\n          }, this), aiInsights.personaInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"User Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2901,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-3 rounded text-sm text-orange-800\",\n              children: aiInsights.personaInsights\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2902,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2900,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2913,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: result.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2918,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2920,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2921,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2919,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2917,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2927,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2693,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2649,\n      columnNumber: 9\n    }, this), showModal && modalType === 'import' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Import Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2938,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-2\",\n            children: \"You can import data in two formats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2941,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"list-decimal pl-5 mb-3 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Simple feedback format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2946,\n                columnNumber: 19\n              }, this), \" A JSON file with a \\\"feedback\\\" array containing user feedback items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2945,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Advanced graph format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2949,\n                columnNumber: 19\n              }, this), \" A JSON file with \\\"nodes\\\" and \\\"links\\\" arrays for direct graph manipulation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2948,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2944,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadSampleTemplate,\n              className: \"text-blue-600 text-sm hover:underline flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-4 w-4 mr-1\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2959,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2958,\n                columnNumber: 19\n              }, this), \"Download Sample Template\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2954,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2953,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2940,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2\",\n            children: \"Select JSON File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2967,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: importData,\n            className: \"w-full p-2 border border-gray-300 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2968,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2966,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-100 text-red-800 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold mb-1\",\n            children: \"Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2978,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"whitespace-pre-line text-sm\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2979,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2977,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowModal(false);\n              setError(null);\n            },\n            className: \"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 mr-2\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2984,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2983,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2937,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2936,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2153,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"dygJmNUMwE2q5R3r35WBpLGwd7o=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","current","console","log","createMiniMap","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","miniMapSize","Math","min","viewportRect","empty","x","y","k","vpWidth","vpHeight","vpX","vpY","max","call","map","node","nodeMap","forEach","link","linkElements","data","enter","d","sourceNode","targetNode","sourceType","targetType","nodeGroup","drag","dragstarted","dragged","dragended","stopPropagation","handleNodeClick","text","simulation","forceSimulation","force","forceLink","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","padding","vx","random","vy","alpha","stop","restart","centerView","fitToScreen","active","alphaTarget","fx","fy","length","recalculateFeedbackCounts","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","file","files","reader","FileReader","onload","e","importedData","parse","result","feedback","Array","isArray","transformFeedbackToGraph","err","readAsText","importSimplifiedData","processFeedbackBatch","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","clearTimeout","addTheme","filter","n","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","find","l","push","targetId","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","Set","zoomIn","currentTransform","zoomTransform","transition","duration","zoomIdentity","translate","scale","zoomOut","centerX","centerY","minX","Infinity","minY","maxX","maxY","contentWidth","contentHeight","toggleMiniMap","newShowMiniMap","miniMapSimulation","results","i","item","theme","feedbackIndex","user_role","updatedInsights","personaNode","personaId","Date","now","toString","substr","updatedNodes","prevData","r","themeNode","themeId","newLink","linkExists","some","connectedLinks","connectedNodeIds","connectedNodes","insights","connectedFeatures","connectedPersonas","then","ideas","prev","featureIdeas","catch","isFeatureView","connectedThemes","implementationDetails","persona","personaFeedback","index","_aiInsights$results","_aiInsights$results$f","focusOnNode","handleAddFeedback","feedbackId","newFeedbackItem","timestamp","toISOString","updatedFeedbackItems","miniMapMargin","miniMapContainer","miniMapNodes","miniX","miniY","miniNodes","baseColor","color","brighter","tick","style","pointer","legendY","legendX","legendSpacing","newGraph","personas","themes","feedbackNode","substring","fullText","Object","keys","batchAnalysisPrompt","join","batchAnalysisResult","analyzeMultipleFeedback","description","classifications","classification","feedbackItem","sentiment","primaryTheme","isPrimary","secondaryTheme","secondaryThemeNode","isSecondary","themeConnections","connection","sourceThemeNode","targetThemeNode","reason","significantThemes","values","sort","a","b","slice","featureSuggestions","generateFeatureSuggestions","feature","featureId","featureNode","relatedThemes","themeName","innerError","systemMessage","userMessage","response","fetch","method","headers","process","env","REACT_APP_OPENAI_API_KEY","body","model","messages","role","content","temperature","max_tokens","ok","Error","status","statusText","json","choices","message","jsonMatch","match","jsonString","parseError","feedbackTexts","downloadSampleTemplate","sampleData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","togglePanelCollapse","initiateConnection","handleSearchResultClick","feedbackCounts","features","placeholder","value","onChange","toLowerCase","backgroundColor","accept","confirm","title","disabled","parseInt","ref","marginRight","trim","newNode","toFixed","step","parseFloat","connectionExists","rows","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","idea","personaInsights","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n        \n        // Update the mini-map viewport to show the current view\n        if (showMiniMap) {\n          const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n          const viewportRect = svg.select(\".mini-map-viewport\");\n          \n          if (!viewportRect.empty()) {\n            const { x, y, k } = event.transform;\n            \n            // Calculate the viewport rectangle in the mini-map\n            const vpWidth = miniMapSize / k;\n            const vpHeight = miniMapSize / k;\n            const vpX = (-x / dimensions.width) * miniMapSize;\n            const vpY = (-y / dimensions.height) * miniMapSize;\n            \n            // Update the viewport rectangle\n            viewportRect\n              .attr(\"x\", Math.max(0, vpX))\n              .attr(\"y\", Math.max(0, vpY))\n              .attr(\"width\", Math.min(miniMapSize, vpWidth))\n              .attr(\"height\", Math.min(miniMapSize, vpHeight));\n          }\n        }\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n    \n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n    \n    // Create links\n    const linkElements = g.selectAll(\".link\")\n      .data(links)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"stroke\", d => {\n        // Determine color based on the types of nodes being connected\n        const sourceNode = nodeMap[d.source];\n        const targetNode = nodeMap[d.target];\n        \n        if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n        \n        const sourceType = sourceNode.type;\n        const targetType = targetNode.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        \n        return \"#CBD5E0\"; // Default gray\n      })\n      .attr(\"stroke-width\", d => Math.max(1, d.strength * 5))\n      .attr(\"stroke-opacity\", 0.6);\n    \n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        setSelectedNode(d);\n        handleNodeClick(d);\n      });\n    \n    // Add circles to nodes\n    nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 0.8;\n        if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n        if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n        if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n        return 0.3;\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", d => {\n        if (d.type === \"theme\") return (20 + (d.feedbackCount / feedbackWeight)) + 15;\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22 + 15;\n          return 20 + 15;\n        }\n        return 22 + 15;\n      })\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#4A5568\")\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 1;\n        if (highlightMode === 'themes' && d.type === 'theme') return 1;\n        if (highlightMode === 'features' && d.type === 'feature') return 1;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1;\n        return 0.5;\n      });\n    \n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05))\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n    \n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50;\n      nodes.forEach(node => {\n        // Add some random movement if simulation is running\n        if (isSimulationRunning) {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        }\n        \n        // Update positions\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n    \n    // Update the simulation on tick\n    simulation.on(\"tick\", () => {\n      // Apply the boundary force\n      simulation.force(\"boundary\")();\n      \n      // Update positions\n      linkElements\n        .attr(\"x1\", d => {\n          const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n          return target ? target.y : 0;\n        });\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Pause or resume the simulation based on state\n    if (!isSimulationRunning) {\n      simulation.alpha(0).stop();\n    } else {\n      simulation.alpha(0.3).restart();\n    }\n    \n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n    \n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n    \n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  // Update the importData function to handle both formats\n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it's the simple feedback format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Transform the simple format to nodes/links format\n          transformFeedbackToGraph(importedData.feedback);\n        } \n        // Check if it's the original format with nodes and links\n        else if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } \n        // Invalid format\n        else {\n          setError(\n            \"Invalid data format. The file should contain either:\" +\n            \"\\n1. A 'feedback' array with user feedback items, or\" +\n            \"\\n2. 'nodes' and 'links' arrays for direct graph data\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Error parsing the file:\", err);\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    \n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    try {\n      // Process each feedback item\n      const results = [];\n      \n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        \n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n      \n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      \n      setAIInsights(updatedInsights);\n      \n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => \n          node.type === \"persona\" && node.name === item.user_role\n        );\n        \n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          \n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n        \n        // Find the result for this item\n        const result = results.find(r => \n          r.text === item.text && r.user_role === item.user_role\n        );\n        \n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => \n            node.type === \"theme\" && node.name === result.theme\n          );\n          \n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n            \n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n            \n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            \n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n            \n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => \n              (link.source === personaNode.id && link.target === themeNode.id) ||\n              (link.source === themeNode.id && link.target === personaNode.id)\n            );\n            \n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              \n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      \n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = (node) => {\n    if (!node) return;\n    \n    // Set the selected node\n    setSelectedNode(node);\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => \n      link.source === node.id || link.target === node.id ||\n      (typeof link.source === 'object' && link.source.id === node.id) ||\n      (typeof link.target === 'object' && link.target.id === node.id)\n    );\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => \n          result.theme === node.name\n        );\n      }\n      \n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text))\n          .then(ideas => {\n            if (ideas && ideas.length > 0) {\n              setAIInsights(prev => ({\n                ...prev,\n                featureIdeas: ideas\n              }));\n            }\n          })\n          .catch(error => {\n            console.error(\"Error generating feature ideas:\", error);\n          });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => \n          item.user_role === node.name\n        );\n        \n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role,\n            theme: aiInsights?.results?.find(r => r.text === item.text)?.theme || \"Unknown\"\n          }));\n        }\n      }\n    }\n    \n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => \n      node.type === \"persona\" && node.name === newFeedbackRole\n    );\n    \n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n      \n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n      \n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      \n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n    \n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n    \n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      \n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => \n          node.type === \"theme\" && node.name === result.theme\n        );\n        \n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n          \n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n          \n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id, // Use ID reference instead of object\n            target: themeId, // Use ID reference instead of object\n            strength: 0.7\n          };\n          \n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n          \n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => \n            (link.source === personaNode.id && link.target === themeNode.id) ||\n            (link.source === themeNode.id && link.target === personaNode.id)\n          );\n          \n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id, // Use ID reference instead of object\n              target: themeNode.id, // Use ID reference instead of object\n              strength: 0.7\n            };\n            \n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n        \n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...(aiInsights?.results || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        \n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n    \n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n    \n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9) // Semi-transparent background\n      .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n      .attr(\"stroke-width\", 2) // Thicker border\n      .attr(\"rx\", 6); // Rounded corners\n    \n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n      .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n      .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n    \n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n      \n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n    \n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 4.5) // Even larger radius for better visibility\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3); // Brighter colors\n      })\n      .attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n      .attr(\"stroke-width\", 1.5); // Thicker stroke\n    \n    // Add a label with better visibility\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 20)\n      .attr(\"font-size\", \"14px\") // Larger font\n      .attr(\"font-weight\", \"bold\") // Bold text\n      .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) { // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", miniMapSize / 2)\n      .attr(\"y\", miniMapSize - 12)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"11px\")\n      .attr(\"font-weight\", \"medium\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Click to navigate\");\n    \n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n    \n    // Theme legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"theme\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 8)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Themes\");\n    \n    // Feature legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 70)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"feature\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 78)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Features\");\n    \n    // Persona legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 140)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"persona\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 148)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Personas\");\n    \n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    \n    return miniMapSimulation;\n  };\n\n  // Update the transformFeedbackToGraph function with intelligent analysis\n  const transformFeedbackToGraph = async (feedbackItems) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Start with empty graph structure\n      const newGraph = {\n        nodes: [],\n        links: []\n      };\n      \n      // Create maps to track existing nodes by ID\n      const nodeMap = {\n        personas: {},\n        themes: {},\n        feedback: {}\n      };\n      \n      // Step 1: First pass - process all feedback to extract personas and raw feedback nodes\n      for (const item of feedbackItems) {\n        // Generate an ID if not present\n        const feedbackId = item.id || `feedback-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        \n        // Create feedback node\n        const feedbackNode = {\n          id: feedbackId,\n          name: item.text.length > 30 ? item.text.substring(0, 30) + '...' : item.text,\n          fullText: item.text,\n          type: \"feedback\",\n          timestamp: item.timestamp || new Date().toISOString()\n        };\n        \n        newGraph.nodes.push(feedbackNode);\n        nodeMap.feedback[feedbackId] = feedbackNode;\n        \n        // Create or update persona node\n        if (!nodeMap.personas[item.user_role]) {\n          const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n          const personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          newGraph.nodes.push(personaNode);\n          nodeMap.personas[item.user_role] = personaNode;\n        } else {\n          // Increment feedback count for existing persona\n          nodeMap.personas[item.user_role].feedbackCount += 1;\n        }\n        \n        // Create link between persona and feedback\n        newGraph.links.push({\n          source: nodeMap.personas[item.user_role].id,\n          target: feedbackId,\n          strength: 0.6\n        });\n      }\n      \n      // Step 2: Batch process all feedback with AI to identify themes\n      console.log(\"Processing feedback batch with AI...\");\n      \n      // Create a batch analysis request to classify all feedback at once\n      const batchAnalysisPrompt = `\n        Analyze the following user feedback items and:\n        1. Identify common themes across all feedback\n        2. Classify each feedback item into one or more themes\n        3. Suggest connections between related themes\n        \n        Feedback items:\n        ${feedbackItems.map((item, i) => `${i+1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n      \n      try {\n        // Call OpenAI for batch analysis\n        const batchAnalysisResult = await analyzeMultipleFeedback(feedbackItems);\n        console.log(\"Batch analysis result:\", batchAnalysisResult);\n        \n        // Step 3: Create theme nodes from the analysis\n        if (batchAnalysisResult && batchAnalysisResult.themes) {\n          for (const theme of batchAnalysisResult.themes) {\n            const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n            const themeNode = {\n              id: themeId,\n              name: theme.name,\n              description: theme.description,\n              type: \"theme\",\n              feedbackCount: 0\n            };\n            newGraph.nodes.push(themeNode);\n            nodeMap.themes[theme.name] = themeNode;\n          }\n        }\n        \n        // Step 4: Process classifications to connect feedback to themes\n        if (batchAnalysisResult && batchAnalysisResult.classifications) {\n          for (const classification of batchAnalysisResult.classifications) {\n            const feedbackItem = feedbackItems[classification.feedbackIndex];\n            if (!feedbackItem) continue;\n            \n            const feedbackId = feedbackItem.id || `feedback-${Date.now()}-${classification.feedbackIndex}`;\n            const feedbackNode = nodeMap.feedback[feedbackId];\n            \n            if (!feedbackNode) continue;\n            \n            // Add sentiment and priority to feedback node\n            feedbackNode.sentiment = classification.sentiment;\n            feedbackNode.priority = classification.priority;\n            \n            // Connect to primary theme\n            if (classification.themes && classification.themes.length > 0) {\n              const primaryTheme = classification.themes[0];\n              const themeNode = nodeMap.themes[primaryTheme];\n              \n              if (themeNode) {\n                // Increment theme's feedback count\n                themeNode.feedbackCount += 1;\n                \n                // Create link between feedback and theme\n                newGraph.links.push({\n                  source: feedbackId,\n                  target: themeNode.id,\n                  strength: 0.8, // Strong connection to primary theme\n                  isPrimary: true\n                });\n                \n                // Also connect persona to theme\n                const personaNode = nodeMap.personas[feedbackItem.user_role];\n                if (personaNode) {\n                  // Check if link already exists\n                  const linkExists = newGraph.links.some(link => \n                    (link.source === personaNode.id && link.target === themeNode.id) ||\n                    (link.source === themeNode.id && link.target === personaNode.id)\n                  );\n                  \n                  if (!linkExists) {\n                    newGraph.links.push({\n                      source: personaNode.id,\n                      target: themeNode.id,\n                      strength: 0.7\n                    });\n                  }\n                }\n              }\n              \n              // Connect to secondary themes if any\n              if (classification.themes.length > 1) {\n                for (let i = 1; i < classification.themes.length; i++) {\n                  const secondaryTheme = classification.themes[i];\n                  const secondaryThemeNode = nodeMap.themes[secondaryTheme];\n                  \n                  if (secondaryThemeNode) {\n                    // Increment theme's feedback count\n                    secondaryThemeNode.feedbackCount += 1;\n                    \n                    // Create link between feedback and secondary theme\n                    newGraph.links.push({\n                      source: feedbackId,\n                      target: secondaryThemeNode.id,\n                      strength: 0.5, // Weaker connection to secondary theme\n                      isSecondary: true\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n        \n        // Step 5: Create connections between related themes\n        if (batchAnalysisResult && batchAnalysisResult.themeConnections) {\n          for (const connection of batchAnalysisResult.themeConnections) {\n            const sourceThemeNode = nodeMap.themes[connection.source];\n            const targetThemeNode = nodeMap.themes[connection.target];\n            \n            if (sourceThemeNode && targetThemeNode) {\n              newGraph.links.push({\n                source: sourceThemeNode.id,\n                target: targetThemeNode.id,\n                strength: connection.strength,\n                reason: connection.reason\n              });\n            }\n          }\n        }\n        \n        // Step 6: Generate feature suggestions based on themes\n        const significantThemes = Object.values(nodeMap.themes)\n          .filter(theme => theme.feedbackCount >= 2)\n          .sort((a, b) => b.feedbackCount - a.feedbackCount)\n          .slice(0, 3);\n        \n        if (significantThemes.length > 0) {\n          try {\n            const featureSuggestions = await generateFeatureSuggestions(\n              significantThemes.map(theme => ({\n                name: theme.name,\n                description: theme.description,\n                feedbackCount: theme.feedbackCount\n              })),\n              feedbackItems.map(item => item.text)\n            );\n            \n            if (featureSuggestions && featureSuggestions.length > 0) {\n              // Add feature nodes\n              for (const feature of featureSuggestions) {\n                const featureId = `feature-${Date.now()}-${newGraph.nodes.length}`;\n                const featureNode = {\n                  id: featureId,\n                  name: feature.name,\n                  description: feature.description,\n                  type: \"feature\",\n                  priority: feature.priority || \"Medium\",\n                  implementationDetails: feature.implementationDetails || \"\"\n                };\n                \n                newGraph.nodes.push(featureNode);\n                \n                // Connect feature to related themes\n                if (feature.relatedThemes) {\n                  for (const themeName of feature.relatedThemes) {\n                    const themeNode = nodeMap.themes[themeName];\n                    if (themeNode) {\n                      newGraph.links.push({\n                        source: featureId,\n                        target: themeNode.id,\n                        strength: 0.7\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          } catch (error) {\n            console.error(\"Error generating feature suggestions:\", error);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in batch analysis:\", error);\n        setError(\"Error analyzing feedback. Falling back to basic processing.\");\n        \n        // Fallback: Process each feedback individually\n        for (const item of feedbackItems) {\n          try {\n            const result = await classifyFeedback(item.text);\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n              } else {\n                // Increment feedback count for existing theme\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Create link between persona and theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              const linkExists = newGraph.links.some(link => \n                (link.source === personaNode.id && link.target === themeNode.id) ||\n                (link.source === themeNode.id && link.target === personaNode.id)\n              );\n              \n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n              }\n            }\n          } catch (innerError) {\n            console.error(\"Error classifying individual feedback:\", innerError);\n          }\n        }\n      }\n      \n      // Update the graph data\n      setGraphData(newGraph);\n      \n      // Process all feedback with AI for insights\n      processFeedbackBatch(feedbackItems);\n      \n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error transforming feedback to graph:\", error);\n      setError(\"Error processing feedback data. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  // Add this new function to analyze multiple feedback items at once\n  const analyzeMultipleFeedback = async (feedbackItems) => {\n    try {\n      // Create a system message that explains the task\n      const systemMessage = `\n        You are an AI assistant that specializes in analyzing user feedback for product teams.\n        Your task is to analyze multiple feedback items, identify common themes, and classify each feedback.\n        You should also identify potential connections between related themes.\n      `;\n      \n      // Create a user message with the feedback items\n      const userMessage = `\n        Please analyze these ${feedbackItems.length} user feedback items:\n        \n        ${feedbackItems.map((item, i) => `${i+1}. \"${item.text}\" (from ${item.user_role})`).join('\\n')}\n        \n        Identify 3-7 common themes across all feedback.\n        Classify each feedback item into one or more themes.\n        Suggest connections between related themes.\n        \n        Respond with a JSON object containing:\n        {\n          \"themes\": [\n            {\"name\": \"Theme Name\", \"description\": \"Brief description of theme\"}\n          ],\n          \"classifications\": [\n            {\"feedbackIndex\": 0, \"themes\": [\"Primary Theme\", \"Secondary Theme\"], \"sentiment\": \"positive/negative/neutral\", \"priority\": 1-10}\n          ],\n          \"themeConnections\": [\n            {\"source\": \"Theme A\", \"target\": \"Theme B\", \"strength\": 0.1-1.0, \"reason\": \"Why these themes are related\"}\n          ]\n        }\n      `;\n      \n      // Call the OpenAI API\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo\",\n          messages: [\n            { role: \"system\", content: systemMessage },\n            { role: \"user\", content: userMessage }\n          ],\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      const content = data.choices[0].message.content;\n      \n      // Extract the JSON object from the response\n      try {\n        // Find JSON in the response (it might be wrapped in markdown code blocks)\n        const jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                          content.match(/```\\n([\\s\\S]*?)\\n```/) || \n                          content.match(/{[\\s\\S]*?}/);\n        \n        const jsonString = jsonMatch ? jsonMatch[1] || jsonMatch[0] : content;\n        return JSON.parse(jsonString);\n      } catch (parseError) {\n        console.error(\"Error parsing OpenAI response:\", parseError);\n        console.log(\"Raw response:\", content);\n        throw new Error(\"Failed to parse the AI response\");\n      }\n    } catch (error) {\n      console.error(\"Error calling OpenAI API:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to generate feature suggestions based on themes\n  const generateFeatureSuggestions = async (themes, feedbackTexts) => {\n    try {\n      // Create a system message that explains the task\n      const systemMessage = `\n        You are an AI product manager that specializes in converting user feedback into actionable feature ideas.\n        Your task is to analyze themes from user feedback and suggest concrete feature improvements.\n      `;\n      \n      // Create a user message with the themes and sample feedback\n      const userMessage = `\n        Based on the following themes identified from user feedback:\n        \n        ${themes.map(theme => `- ${theme.name} (${theme.feedbackCount} mentions): ${theme.description || 'No description'}`).join('\\n')}\n        \n        And these sample feedback items:\n        ${feedbackTexts.slice(0, 5).map((text, i) => `${i+1}. \"${text}\"`).join('\\n')}\n        \n        Suggest 2-4 concrete feature ideas that would address these themes.\n        \n        For each feature idea, provide:\n        1. A clear, concise name\n        2. A brief description\n        3. Priority level (High/Medium/Low)\n        4. Related themes it addresses\n        5. Brief implementation details\n        \n        Respond with a JSON array of feature objects:\n        [\n          {\n            \"name\": \"Feature Name\",\n            \"description\": \"Feature description\",\n            \"priority\": \"High/Medium/Low\",\n            \"relatedThemes\": [\"Theme Name\"],\n            \"implementationDetails\": \"Brief technical implementation notes\"\n          }\n        ]\n      `;\n      \n      // Call the OpenAI API\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4-turbo\",\n          messages: [\n            { role: \"system\", content: systemMessage },\n            { role: \"user\", content: userMessage }\n          ],\n          temperature: 0.7,\n          max_tokens: 1500\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      const content = data.choices[0].message.content;\n      \n      // Extract the JSON array from the response\n      try {\n        // Find JSON in the response (it might be wrapped in markdown code blocks)\n        const jsonMatch = content.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                          content.match(/```\\n([\\s\\S]*?)\\n```/) || \n                          content.match(/\\[([\\s\\S]*?)\\]/);\n        \n        const jsonString = jsonMatch ? jsonMatch[1] || jsonMatch[0] : content;\n        return JSON.parse(jsonString);\n      } catch (parseError) {\n        console.error(\"Error parsing OpenAI response:\", parseError);\n        console.log(\"Raw response:\", content);\n        throw new Error(\"Failed to parse the AI response\");\n      }\n    } catch (error) {\n      console.error(\"Error calling OpenAI API:\", error);\n      throw error;\n    }\n  };\n\n  // Add this function to download a sample template\n  const downloadSampleTemplate = () => {\n    const sampleData = {\n      feedback: [\n        {\n          id: \"feedback-1\",\n          text: \"The application is too slow when loading large datasets\",\n          user_role: \"Data Analyst\",\n          timestamp: \"2023-07-15T14:30:00Z\"\n        },\n        {\n          id: \"feedback-2\",\n          text: \"I love the new dashboard layout, it makes finding information much easier\",\n          user_role: \"Product Manager\",\n          timestamp: \"2023-07-16T09:45:00Z\"\n        },\n        {\n          id: \"feedback-3\",\n          text: \"The mobile app is missing key features that are available on the desktop version\",\n          user_role: \"Field Sales Rep\",\n          timestamp: \"2023-07-17T11:20:00Z\"\n        }\n      ]\n    };\n    \n    const dataStr = JSON.stringify(sampleData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-template.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceNode = graphData.nodes.find(n => n.id === link.source);\n      const targetNode = graphData.nodes.find(n => n.id === link.target);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                  setGraphData(initialData);\n                }\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={() => {\n                if (selectedNode) {\n                  initiateConnection(selectedNode);\n                }\n              }}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!newNodeName.trim()) {\n                    alert(\"Please enter a name\");\n                    return;\n                  }\n                  \n                  const newNode = {\n                    id: `${modalType}-${Date.now()}`,\n                    name: newNodeName,\n                    type: modalType,\n                    ...(modalType === 'theme' ? { feedbackCount: newNodeFeedbackCount } : {}),\n                    ...(modalType === 'feature' ? { priority: newNodePriority } : {})\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes, newNode],\n                    links: [...graphData.links]\n                  });\n                  \n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!connectionTarget) {\n                    alert(\"Please select a target node\");\n                    return;\n                  }\n                  \n                  // Check if connection already exists\n                  const connectionExists = graphData.links.some(link => \n                    (link.source === connectionSource.id && link.target === connectionTarget) ||\n                    (link.source === connectionTarget && link.target === connectionSource.id)\n                  );\n                  \n                  if (connectionExists) {\n                    alert(\"This connection already exists\");\n                    return;\n                  }\n                  \n                  const newLink = {\n                    source: connectionSource.id,\n                    target: connectionTarget,\n                    strength: connectionStrength\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes],\n                    links: [...graphData.links, newLink]\n                  });\n                  \n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* AI Generated Feature Ideas */}\n                  {aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">AI Feature Suggestions</div>\n                      <div className=\"space-y-2\">\n                        {aiInsights.featureIdeas.map((idea, index) => (\n                          <div key={index} className=\"bg-blue-50 p-2 rounded\">\n                            <div className=\"font-medium text-blue-800\">{idea.name}</div>\n                            <div className=\"text-sm text-blue-600 mt-1\">{idea.description}</div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Implementation Details */}\n                  {aiInsights.implementationDetails && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Implementation Details</div>\n                      <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                        {aiInsights.implementationDetails}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Common Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Relevant Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Persona Insights */}\n                  {aiInsights.personaInsights && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">User Insights</div>\n                      <div className=\"bg-orange-50 p-3 rounded text-sm text-orange-800\">\n                        {aiInsights.personaInsights}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                        <span>{result.user_role}</span>\n                        <span>{result.theme}</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Import Data Modal */}\n      {showModal && modalType === 'import' && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4\">Import Data</h2>\n            \n            <div className=\"mb-4\">\n              <p className=\"text-gray-600 mb-2\">\n                You can import data in two formats:\n              </p>\n              <ol className=\"list-decimal pl-5 mb-3 text-sm\">\n                <li className=\"mb-1\">\n                  <strong>Simple feedback format:</strong> A JSON file with a \"feedback\" array containing user feedback items\n                </li>\n                <li className=\"mb-1\">\n                  <strong>Advanced graph format:</strong> A JSON file with \"nodes\" and \"links\" arrays for direct graph manipulation\n                </li>\n              </ol>\n              \n              <div className=\"flex justify-between mb-4\">\n                <button\n                  onClick={downloadSampleTemplate}\n                  className=\"text-blue-600 text-sm hover:underline flex items-center\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\" />\n                  </svg>\n                  Download Sample Template\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 mb-2\">Select JSON File</label>\n              <input \n                type=\"file\" \n                accept=\".json\"\n                onChange={importData}\n                className=\"w-full p-2 border border-gray-300 rounded\"\n              />\n            </div>\n            \n            {error && (\n              <div className=\"mb-4 p-3 bg-red-100 text-red-800 rounded\">\n                <p className=\"font-semibold mb-1\">Error:</p>\n                <p className=\"whitespace-pre-line text-sm\">{error}</p>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end\">\n              <button \n                onClick={() => {\n                  setShowModal(false);\n                  setError(null);\n                }}\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 mr-2\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}