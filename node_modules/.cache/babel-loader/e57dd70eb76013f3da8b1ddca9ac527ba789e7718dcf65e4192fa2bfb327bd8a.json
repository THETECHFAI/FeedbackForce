{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzeSentiment } from '../services/openaiService';\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\nimport Navigation from './Navigation';\nimport Header from './Header';\nimport AppHeader from './AppHeader';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feedback-positive\", \"feedback-neutral\", \"feedback-negative\", \"feedback\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#A0AEC0\", \"#E53E3E\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Gray, Red, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  var _analyticsData$sentim, _analyticsData$sentim2, _analyticsData$sentim3, _aiInsights$personas, _aiInsights$sentiment, _aiInsights$sentiment2, _aiInsights$sentiment3, _aiInsights$sentiment4, _aiInsights$themes, _aiInsights$sentiment5, _aiInsights$sentiment6, _aiInsights$sentiment7, _aiInsights$sentiment8, _aiInsights$sentiment9;\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState({\n    results: []\n  });\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables back\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Add a state to track if data has been imported\n  const [hasImportedData, setHasImportedData] = useState(false);\n\n  // Add these debug effect hooks at the top level\n  useEffect(() => {\n    console.log(\"showAIInsightsPanel value changed:\", showAIInsightsPanel);\n  }, [showAIInsightsPanel]);\n  useEffect(() => {\n    if (showAIInsightsPanel && aiInsights) {\n      console.log(\"AI Insights Panel content:\", aiInsights);\n    }\n  }, [showAIInsightsPanel, aiInsights]);\n\n  // MiniMap implementation - define this before any useEffects that use it\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current || !graphData.nodes || graphData.nodes.length === 0) return () => {};\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9).attr(\"stroke\", \"#3182CE\").attr(\"stroke-width\", 2).attr(\"rx\", 6);\n\n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create links array with proper source/target references\n    const miniMapLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return {\n        source: sourceId,\n        target: targetId\n      };\n    }).filter(link => {\n      // Filter out links with invalid source or target\n      return miniMapNodes.some(n => n.id === link.source) && miniMapNodes.some(n => n.id === link.target);\n    });\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5)).force(\"charge\", d3.forceManyBody().strength(-20)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(4));\n\n    // Add mini-map links\n    const miniLinks = miniMapContainer.selectAll(\".mini-link\").data(miniMapLinks).enter().append(\"line\").attr(\"class\", \"mini-link\").attr(\"stroke\", \"#ccc\").attr(\"stroke-width\", 0.5);\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3).attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 15).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"fill\", \"#2D3748\").text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniLinks.attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    }).attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    }).attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    }).attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click behavior\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData, colorScale]);\n\n  // Simulate loading data on initial render - without createMiniMap dependency\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Add a separate effect to create the mini-map after loading\n  useEffect(() => {\n    if (!loading && showMiniMap && svgRef.current) {\n      const timer = setTimeout(() => {\n        createMiniMap();\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [loading, showMiniMap, dimensions]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    // Only create minimap if the SVG ref exists, dimensions are valid, and showMiniMap is true\n    if (svgRef.current && dimensions.width > 0 && dimensions.height > 0 && showMiniMap) {\n      // Remove any existing mini-map first to prevent duplicates\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    } else {\n      // Clean up any existing mini-map if showMiniMap is false\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height, selectedNode]);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n\n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n\n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100).strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(30));\n    simulationRef.current = simulation;\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(validLinks).enter().append(\"line\").attr(\"stroke-width\", d => Math.max(2, d.strength * 6)).attr(\"stroke\", \"#ccc\").attr(\"opacity\", d => {\n      // Apply opacity to links based on highlight mode\n      if (highlightMode === 'none') return 0.8; // Default opacity\n\n      // Get source and target node objects\n      const sourceNode = typeof d.source === 'object' ? d.source : nodes.find(n => n.id === d.source);\n      const targetNode = typeof d.target === 'object' ? d.target : nodes.find(n => n.id === d.target);\n      if (!sourceNode || !targetNode) return 0.2; // Fade out if invalid link\n\n      // Highlight links between nodes of the highlighted type\n      if (highlightMode === 'themes' && (sourceNode.type === 'theme' || targetNode.type === 'theme')) {\n        return 1.0;\n      }\n      if (highlightMode === 'feedback' && (sourceNode.type === 'feedback' || targetNode.type === 'feedback')) {\n        return 1.0;\n      }\n      if (highlightMode === 'personas' && (sourceNode.type === 'persona' || targetNode.type === 'persona')) {\n        return 1.0;\n      }\n      return 0.2; // Fade out non-highlighted links\n    });\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      // Prevent text selection\n      event.preventDefault();\n      document.getSelection().removeAllRanges();\n\n      // Call the node click handler\n      handleNodeClick(d, event);\n    });\n\n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 15;\n      return 10; // Smaller feedback nodes\n    }).attr(\"fill\", d => {\n      // Update this section to use sentiment-based coloring for feedback nodes\n      if (d.type === \"feedback\") {\n        if (d.sentiment === \"Positive\") return colorScale(\"feedback-positive\");\n        if (d.sentiment === \"Negative\") return colorScale(\"feedback-negative\");\n        return colorScale(\"feedback-neutral\"); // Default to neutral if sentiment is not set or is \"Neutral\"\n      }\n      return colorScale(d.type);\n    }).attr(\"stroke\", d => {\n      // Add a special stroke to highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') {\n          return \"#FFD700\"; // Gold stroke for highlighted theme nodes\n        }\n        if (highlightMode === 'feedback' && d.type === 'feedback') {\n          return \"#FFD700\"; // Gold stroke for highlighted feedback nodes\n        }\n        if (highlightMode === 'personas' && d.type === 'persona') {\n          return \"#FFD700\"; // Gold stroke for highlighted persona nodes\n        }\n      }\n      return \"#fff\"; // Default white stroke\n    }).attr(\"stroke-width\", d => {\n      // Thicker stroke for highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') return 3;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 3;\n        if (highlightMode === 'personas' && d.type === 'persona') return 3;\n      }\n      return 2; // Default stroke width\n    }).attr(\"opacity\", d => {\n      // Apply opacity to nodes based on highlight mode\n      if (highlightMode === 'none') return 1.0; // Full opacity if no highlighting\n\n      // Highlight specific node types\n      if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n      if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n      return 0.3; // Fade out non-highlighted nodes\n    });\n\n    // Add labels with better positioning\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / 2;\n      if (d.type === \"persona\") return 25;\n      return 22; // Position feedback labels\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n    .attr(\"fill\", d => {\n      // Make text more visible for highlighted nodes\n      if (highlightMode !== 'none') {\n        if (highlightMode === 'themes' && d.type === 'theme') return \"#000\";\n        if (highlightMode === 'feedback' && d.type === 'feedback') return \"#000\";\n        if (highlightMode === 'personas' && d.type === 'persona') return \"#000\";\n        return \"#999\"; // Faded text for non-highlighted nodes\n      }\n      return \"#333\"; // Default text color\n    }).attr(\"opacity\", d => {\n      // Match opacity with the node circles\n      if (highlightMode === 'none') return 1.0;\n      if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n      if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n      return 0.3;\n    });\n\n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\").text(d => d.type === \"feedback\" ? d.title : d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, highlightMode, selectedNode]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Starting import from file:\", file.name);\n\n    // Use our async utility function\n    importFeedbackData(file).then(async importedData => {\n      console.log(\"Processed import data:\", importedData);\n\n      // Process feedback nodes for sentiment analysis\n      const feedbackNodes = importedData.nodes.filter(node => node.type === 'feedback' && !node.sentiment);\n\n      // If we have feedback nodes without sentiment, analyze them\n      if (feedbackNodes.length > 0) {\n        setIsAIProcessing(true);\n\n        // Process in batches to avoid overwhelming the API\n        const batchSize = 5;\n        for (let i = 0; i < feedbackNodes.length; i += batchSize) {\n          const batch = feedbackNodes.slice(i, i + batchSize);\n\n          // Process each node in the batch\n          await Promise.all(batch.map(async node => {\n            try {\n              const feedbackText = node.text || node.fullText || node.name || \"\";\n              const result = await analyzeSentiment(feedbackText);\n              node.sentiment = result.sentiment;\n            } catch (error) {\n              console.warn(`Error analyzing sentiment for node ${node.id}:`, error);\n              node.sentiment = \"Neutral\"; // Fallback\n            }\n          }));\n        }\n        setIsAIProcessing(false);\n      }\n\n      // Ensure node structure is compatible with visualization\n      const processedNodes = importedData.nodes.map(node => {\n        // Make sure each node has the essential properties\n        return {\n          ...node,\n          // Ensure these critical properties exist\n          id: node.id,\n          name: node.name || node.label || \"Unnamed\",\n          type: node.type || \"theme\",\n          // Add appropriate properties based on type\n          ...(node.type === 'theme' ? {\n            feedbackCount: node.feedbackCount || 5\n          } : {}),\n          ...(node.type === 'feature' ? {\n            priority: node.priority || 'Medium'\n          } : {})\n        };\n      });\n\n      // Update analytics data with sentiment distribution\n      const sentimentCounts = processedNodes.filter(node => node.type === 'feedback' && node.sentiment).reduce((counts, node) => {\n        counts[node.sentiment] = (counts[node.sentiment] || 0) + 1;\n        return counts;\n      }, {});\n      const updatedAnalytics = {\n        ...importedData.analytics,\n        sentimentDistribution: sentimentCounts\n      };\n      setGraphData({\n        nodes: processedNodes,\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n      setAnalyticsData(updatedAnalytics);\n      setLoading(false);\n\n      // Reset any selections and force a re-center\n      setSelectedNode(null);\n      setTimeout(() => {\n        if (zoomRef.current) {\n          const svg = d3.select(svgRef.current);\n          const svgWidth = svg.node().getBoundingClientRect().width;\n          const svgHeight = svg.node().getBoundingClientRect().height;\n          svg.transition().duration(750).call(zoomRef.current.transform, d3.zoomIdentity.translate(svgWidth / 2, svgHeight / 2).scale(0.8));\n        }\n      }, 300);\n\n      // Set hasImportedData to true when data is successfully imported\n      setHasImportedData(true);\n    }).catch(error => {\n      console.error(\"Error importing feedback data:\", error);\n      setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n      setLoading(false);\n    });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = text => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return {\n        theme: 'Stability Issues'\n      };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return {\n        theme: 'Performance'\n      };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return {\n        theme: 'Mobile Experience'\n      };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || lowerText.includes('layout') || lowerText.includes('look')) {\n      return {\n        theme: 'User Interface'\n      };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return {\n        theme: 'Reporting & Analytics'\n      };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return {\n        theme: 'Data Export & Import'\n      };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return {\n        theme: 'Search & Navigation'\n      };\n    }\n    return {\n      theme: 'General Feedback'\n    };\n  };\n\n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = theme => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{\n        name: 'Crash Prevention & Recovery',\n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{\n        name: 'Performance Optimization',\n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{\n        name: 'Responsive Design Overhaul',\n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{\n        name: 'UI Modernization',\n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{\n        name: 'Custom Report Builder',\n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{\n        name: 'Enhanced Export Options',\n        priority: 'High'\n      }];\n    } else {\n      return [{\n        name: 'User Experience Improvements',\n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback(feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n\n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n\n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n\n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n\n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n\n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n\n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i + 1} of ${chunks.length}...`);\n\n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n\n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({\n            ...newGraph\n          });\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n\n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5); // Top 5 themes\n\n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n\n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n\n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n\n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                if (sourceId === theme.id || targetId === theme.id) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => l.source === personaId && l.target === featureId || l.source === featureId && l.target === personaId);\n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n\n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n\n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n\n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n\n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      setGraphData(newGraph);\n\n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n\n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes).force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          tempSimulation.stop();\n        }\n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n\n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Update the handleNodeClick function to properly handle all node types with complete data\n  const handleNodeClick = useCallback((node, event) => {\n    if (!node) return;\n\n    // Prevent text selection and set up the node selection\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n      }\n    }\n    console.log(\"Node clicked, setting panel visible:\", node);\n    setSelectedNode(node);\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    if (node.type === 'theme') {\n      // Theme node view - collect all relevant data\n      const connectedFeedback = connectedNodes.filter(n => n.type === \"feedback\" || n.type.startsWith(\"feedback\"));\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      const sentimentCount = {\n        Positive: connectedFeedback.filter(n => n.sentiment === \"Positive\" || n.type === \"feedback-positive\").length,\n        Negative: connectedFeedback.filter(n => n.sentiment === \"Negative\" || n.type === \"feedback-negative\").length,\n        Neutral: connectedFeedback.filter(n => n.sentiment === \"Neutral\" || n.type !== \"feedback-positive\" && n.type !== \"feedback-negative\").length\n      };\n\n      // Example feedback for this theme (get full text)\n      const exampleFeedback = connectedFeedback.slice(0, 3).map(f => ({\n        text: f.fullText || f.originalText || f.completeText || f.text || f.content || f.feedback || f.description || f.name || \"\",\n        sentiment: f.sentiment || (f.type === \"feedback-positive\" ? \"Positive\" : f.type === \"feedback-negative\" ? \"Negative\" : \"Neutral\")\n      }));\n      setAIInsights({\n        isThemeView: true,\n        isPersonaView: false,\n        isFeedbackView: false,\n        theme: node.name,\n        feedbackCount: connectedFeedback.length,\n        sentimentDistribution: sentimentCount,\n        personas: connectedPersonas.map(p => p.name),\n        exampleFeedback: exampleFeedback,\n        insights: node.insights || insights.filter(i => {\n          var _i$relatedThemes;\n          return (_i$relatedThemes = i.relatedThemes) === null || _i$relatedThemes === void 0 ? void 0 : _i$relatedThemes.includes(node.name);\n        }) || []\n      });\n    } else if (node.type === 'persona') {\n      // Persona node view - collect all related themes and feedback\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n\n      // Find all feedback indirectly connected to this persona through themes\n      let relatedFeedback = [];\n\n      // First get directly connected feedback\n      const directFeedback = connectedNodes.filter(n => n.type === \"feedback\" || n.type.startsWith(\"feedback\"));\n      relatedFeedback = [...directFeedback];\n\n      // Then get feedback connected through themes\n      for (const theme of connectedThemes) {\n        const themeLinks = graphData.links.filter(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          return sourceId === theme.id || targetId === theme.id;\n        });\n        const themeFeedbackIds = themeLinks.map(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          const connectedId = sourceId === theme.id ? targetId : sourceId;\n          return connectedId;\n        });\n        const themeFeedback = graphData.nodes.filter(n => themeFeedbackIds.includes(n.id) && (n.type === \"feedback\" || n.type.startsWith(\"feedback\")) && !relatedFeedback.some(f => f.id === n.id));\n        relatedFeedback = [...relatedFeedback, ...themeFeedback];\n      }\n\n      // Get sentiment distribution for this persona's feedback\n      const sentimentCount = {\n        Positive: relatedFeedback.filter(n => n.sentiment === \"Positive\" || n.type === \"feedback-positive\").length,\n        Negative: relatedFeedback.filter(n => n.sentiment === \"Negative\" || n.type === \"feedback-negative\").length,\n        Neutral: relatedFeedback.filter(n => n.sentiment === \"Neutral\" || n.type !== \"feedback-positive\" && n.type !== \"feedback-negative\").length\n      };\n\n      // Example feedback for this persona (get full text)\n      const exampleFeedback = relatedFeedback.slice(0, 3).map(f => ({\n        text: f.fullText || f.originalText || f.completeText || f.text || f.content || f.feedback || f.description || f.name || \"\",\n        sentiment: f.sentiment || (f.type === \"feedback-positive\" ? \"Positive\" : f.type === \"feedback-negative\" ? \"Negative\" : \"Neutral\")\n      }));\n      setAIInsights({\n        isThemeView: false,\n        isPersonaView: true,\n        isFeedbackView: false,\n        persona: node.name,\n        feedbackCount: relatedFeedback.length,\n        themes: connectedThemes.map(t => t.name),\n        sentimentDistribution: sentimentCount,\n        exampleFeedback: exampleFeedback,\n        insights: node.insights || insights.filter(i => {\n          var _i$relatedPersonas;\n          return (_i$relatedPersonas = i.relatedPersonas) === null || _i$relatedPersonas === void 0 ? void 0 : _i$relatedPersonas.includes(node.name);\n        }) || []\n      });\n    } else if (node.type.startsWith('feedback') || node.type === 'feedback') {\n      console.log(\"Feedback node clicked:\", node);\n\n      // Use node.title as the full feedback text\n      let fullText = node.title || \"No feedback text available\";\n\n      // If node.title isn't available, try other sources\n      if (!node.title) {\n        // Try standard fields\n        fullText = node.text || node.content || node.name || \"No feedback text available\";\n\n        // Check feedbackItems if available\n        if (feedbackItems && feedbackItems.length > 0) {\n          const matchingItem = feedbackItems.find(item => item.id === node.id);\n          if (matchingItem && matchingItem.text) {\n            fullText = matchingItem.text;\n          }\n        }\n      }\n\n      // Get related themes\n      const relatedThemes = connectedNodes.filter(n => n.type === \"theme\").map(n => n.name);\n      setAIInsights({\n        isThemeView: false,\n        isPersonaView: false,\n        isFeedbackView: true,\n        text: fullText,\n        sentiment: node.sentiment || 'Neutral',\n        persona: node.user_role || node.persona || node.user || \"Unknown user\",\n        themes: node.theme ? [node.theme] : node.themes || relatedThemes || [],\n        id: node.id || \"Unknown\",\n        date: node.timestamp || node.date || \"Unknown\",\n        insights: node.insights || []\n      });\n    }\n\n    // Make sure to call this at the end of all node types\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n  const handleDataImported = importedData => {\n    if (importedData) {\n      setGraphData({\n        nodes: importedData.nodes || [],\n        links: importedData.links || []\n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add these functions back\n  const exportData = useCallback(() => {\n    // Prepare complete export with all AI data\n    const completeExportData = {\n      // Include the graph structure\n      nodes: graphData.nodes.map(node => ({\n        ...node,\n        // If there are any D3-specific properties that shouldn't be exported, filter them out here\n        fx: undefined,\n        fy: undefined,\n        index: undefined,\n        vx: undefined,\n        vy: undefined,\n        x: undefined,\n        y: undefined\n      })),\n      links: graphData.links.map(link => {\n        // Ensure links use id strings rather than object references\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        return {\n          source: sourceId,\n          target: targetId,\n          strength: link.strength || 0.5\n        };\n      }),\n      // Include all AI-generated insights\n      insights: insights || [],\n      // Include analytics data with sentiment distribution\n      analytics: {\n        ...analyticsData,\n        // Ensure sentiment distribution is included\n        sentimentDistribution: (analyticsData === null || analyticsData === void 0 ? void 0 : analyticsData.sentimentDistribution) || {\n          Positive: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Positive').length,\n          Negative: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Negative').length,\n          Neutral: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Neutral').length\n        },\n        exportDate: new Date().toISOString(),\n        exportVersion: \"1.0\"\n      },\n      // Include raw feedback data if available\n      feedbackItems: feedbackItems || []\n    };\n\n    // Convert to JSON string with nice formatting\n    const dataStr = JSON.stringify(completeExportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    console.log(\"Exported data with AI insights and sentiment analysis\");\n  }, [graphData, insights, analyticsData, feedbackItems]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Function to handle when data is imported\n  const handleDataImport = data => {\n    // Your existing import handling logic\n    // ...\n\n    // Set hasImportedData to true when data is successfully imported\n    setHasImportedData(true);\n  };\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1561,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Then in the return statement, replace the existing AI panel with the improved one\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      showSearchResults: showSearchResults,\n      searchResults: searchResults,\n      setSearchResults: setSearchResults,\n      setSelectedNode: setSelectedNode,\n      handleNodeClick: handleNodeClick,\n      setShowSearchResults: setShowSearchResults,\n      graphData: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1587,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n              onClick: exportData,\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n              children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".json\",\n                className: \"hidden\",\n                onChange: importData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n              onClick: resetVisualization,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1622,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"View:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1631,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n              onClick: centerView,\n              children: \"Center View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n              onClick: toggleMiniMap,\n              children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n              onClick: fitToScreen,\n              title: \"Fit all nodes to screen\",\n              children: \"Fit to Screen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1644,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Highlight:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1654,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('none'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1656,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('themes'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1664,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('feedback'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1672,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setHighlightMode('personas'),\n                className: `px-3 py-1 text-sm rounded ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n                children: \"User Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1680,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1655,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1604,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: containerRef,\n          className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n          style: {\n            marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n            minHeight: '500px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: svgRef,\n            width: \"100%\",\n            height: \"100%\",\n            className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n            style: {\n              minHeight: '500px'\n            },\n            onClick: () => setSelectedNode(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1703,\n            columnNumber: 13\n          }, this), !hasImportedData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 flex items-center justify-center p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-lg p-8 max-w-3xl mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-2xl font-bold text-gray-800 mb-6 text-center\",\n                children: \"Getting Started with Feedback Force\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1716,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1721,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1720,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-blue-600 mb-2\",\n                      children: \"Prepare Your Data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1724,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 mb-2\",\n                      children: \"Format your feedback as JSON following this structure:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1725,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                      className: \"bg-gray-100 p-4 rounded text-sm overflow-x-auto\",\n                      children: `{\n  \"id\": \"feedback-id\",\n  \"text\": \"The actual feedback comment text\",\n  \"user_role\": \"User role (e.g. Admin)\",\n  \"timestamp\": \"xxx\"\n}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1726,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1723,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1719,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1739,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1738,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-blue-600 mb-2\",\n                      children: \"Import Your Data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1742,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700\",\n                      children: \"Click the \\\"Import\\\" button to upload your JSON feedback file\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1743,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1741,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1737,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1749,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1748,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-blue-600 mb-2\",\n                      children: \"Visualize\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1752,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700\",\n                      children: \"Use \\\"Center View,\\\" \\\"Mini-Map,\\\" or \\\"Fit to Screen\\\" to explore your feedback network\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1753,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1751,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1747,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1759,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1758,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-blue-600 mb-2\",\n                      children: \"Analyze\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1762,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700\",\n                      children: \"Apply filters with Highlight, Themes, and User Role options to discover patterns\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1763,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1761,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1757,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1715,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1714,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            colorScale: colorScale,\n            showSentiment: true,\n            sentimentColors: {\n              positive: colorScale(\"feedback-positive\"),\n              neutral: colorScale(\"feedback-neutral\"),\n              negative: colorScale(\"feedback-negative\")\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: zoomIn,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1788,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1784,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: zoomOut,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1794,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1790,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n              onClick: fitToScreen,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl\",\n                children: \"\\u22A1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1800,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1783,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 11\n        }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`,\n          style: {\n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex flex-col ${isPanelCollapsed ? 'w-full' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"absolute left-0 top-16 bg-white shadow-md p-2 rounded-l-md\",\n              onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n              children: isPanelCollapsed ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M9 5l7 7-7 7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1823,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1822,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"w-4 h-4\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M15 19l-7-7 7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1826,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1825,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1817,\n              columnNumber: 17\n            }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col h-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center p-4 border-b border-gray-200\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-lg font-bold text-gray-800\",\n                  children: \"AI Insights\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1835,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-gray-500 hover:text-red-500\",\n                  onClick: () => setShowAIInsightsPanel(false),\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"w-5 h-5\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M6 18L18 6M6 6l12 12\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1841,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1840,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1836,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1834,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 overflow-y-auto p-4 pb-20\",\n                children: [isAIProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center items-center h-full\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1851,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1850,\n                  columnNumber: 25\n                }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-red-50 p-4 rounded-lg border border-red-200 mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-lg font-semibold text-red-800 mb-2\",\n                    children: \"Error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1858,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-red-700\",\n                    children: aiError\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1859,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1857,\n                  columnNumber: 25\n                }, this), !isAIProcessing && !aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-6\",\n                  children: [analyticsData && analyticsData.sentimentDistribution && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-6 pb-6 border-b border-gray-200\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-gray-700 mb-4 text-center\",\n                      children: \"Sentiment Overview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1869,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-50 p-4 rounded-lg shadow-sm\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center justify-around mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-green-500 text-2xl font-bold\",\n                            children: ((_analyticsData$sentim = analyticsData.sentimentDistribution) === null || _analyticsData$sentim === void 0 ? void 0 : _analyticsData$sentim.Positive) || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1873,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xs text-gray-500\",\n                            children: \"Positive\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1876,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1872,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-red-500 text-2xl font-bold\",\n                            children: ((_analyticsData$sentim2 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim2 === void 0 ? void 0 : _analyticsData$sentim2.Negative) || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1879,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xs text-gray-500\",\n                            children: \"Negative\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1882,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1878,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-gray-500 text-2xl font-bold\",\n                            children: ((_analyticsData$sentim3 = analyticsData.sentimentDistribution) === null || _analyticsData$sentim3 === void 0 ? void 0 : _analyticsData$sentim3.Neutral) || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1885,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xs text-gray-500\",\n                            children: \"Neutral\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1888,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1884,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1871,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1870,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1868,\n                    columnNumber: 29\n                  }, this), aiInsights.isThemeView && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-4 h-4 rounded-full mr-2\",\n                        style: {\n                          backgroundColor: colorScale('theme')\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1899,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-lg font-semibold text-gray-700\",\n                        children: [\"Theme: \", aiInsights.theme]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1900,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1898,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-3 gap-2 mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-blue-600\",\n                            children: aiInsights.feedbackCount || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1906,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Feedback\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1907,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1905,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-purple-600\",\n                            children: ((_aiInsights$personas = aiInsights.personas) === null || _aiInsights$personas === void 0 ? void 0 : _aiInsights$personas.length) || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1911,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Users\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1912,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1910,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-teal-600\",\n                            children: [Math.round((((_aiInsights$sentiment = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment === void 0 ? void 0 : _aiInsights$sentiment.Positive) || 0) / Math.max(1, (((_aiInsights$sentiment2 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment2 === void 0 ? void 0 : _aiInsights$sentiment2.Positive) || 0) + (((_aiInsights$sentiment3 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment3 === void 0 ? void 0 : _aiInsights$sentiment3.Negative) || 0) + (((_aiInsights$sentiment4 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment4 === void 0 ? void 0 : _aiInsights$sentiment4.Neutral) || 0)) * 100) || 0, \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1916,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Positive\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1922,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1915,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1904,\n                        columnNumber: 33\n                      }, this), aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Sentiment Distribution\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1929,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex h-6 rounded-full overflow-hidden\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-green-500\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1931,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-red-500\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1937,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-gray-400\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1943,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1930,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Positive, \" Positive\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1951,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Negative, \" Negative\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1952,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Neutral, \" Neutral\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1953,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1950,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1928,\n                        columnNumber: 35\n                      }, this), aiInsights.personas && aiInsights.personas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Associated User Roles\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1961,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex flex-wrap gap-2\",\n                          children: aiInsights.personas.map((persona, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm\",\n                            children: persona\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1964,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1962,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1960,\n                        columnNumber: 35\n                      }, this), aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Example Feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1975,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-3\",\n                          children: aiInsights.exampleFeedback.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-white p-3 rounded border border-gray-200\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-sm text-gray-700 italic mb-2\",\n                              children: [\"\\\"\", item.text, \"\\\"\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1979,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `text-xs px-2 py-1 rounded-full inline-block ${item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-700'}`,\n                              children: item.sentiment\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1980,\n                              columnNumber: 43\n                            }, this)]\n                          }, idx, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1978,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1976,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1974,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1903,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1897,\n                    columnNumber: 29\n                  }, this), aiInsights.isPersonaView && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-4 h-4 rounded-full mr-2\",\n                        style: {\n                          backgroundColor: colorScale('persona')\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2000,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-lg font-semibold text-gray-700\",\n                        children: [\"User Role: \", aiInsights.persona]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2001,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1999,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-3 gap-2 mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-blue-600\",\n                            children: aiInsights.feedbackCount || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2007,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Feedback\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2008,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2006,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-purple-600\",\n                            children: ((_aiInsights$themes = aiInsights.themes) === null || _aiInsights$themes === void 0 ? void 0 : _aiInsights$themes.length) || 0\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2012,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Themes\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2013,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2011,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-center p-1 bg-white rounded border border-gray-200\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-xl font-bold text-teal-600\",\n                            children: [Math.round((((_aiInsights$sentiment5 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment5 === void 0 ? void 0 : _aiInsights$sentiment5.Positive) || 0) / Math.max(1, (((_aiInsights$sentiment6 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment6 === void 0 ? void 0 : _aiInsights$sentiment6.Positive) || 0) + (((_aiInsights$sentiment7 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment7 === void 0 ? void 0 : _aiInsights$sentiment7.Negative) || 0) + (((_aiInsights$sentiment8 = aiInsights.sentimentDistribution) === null || _aiInsights$sentiment8 === void 0 ? void 0 : _aiInsights$sentiment8.Neutral) || 0)) * 100) || 0, \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2017,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"text-[10px] text-gray-500 whitespace-normal overflow-hidden\",\n                            children: \"Positive\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2023,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2016,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2005,\n                        columnNumber: 33\n                      }, this), aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Sentiment Distribution\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2030,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex h-6 rounded-full overflow-hidden\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-green-500\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2032,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-red-500\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2038,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-gray-400\",\n                            style: {\n                              width: `${aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount) * 100}%`\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2044,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2031,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex justify-between text-xs text-gray-500 mt-1\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Positive, \" Positive\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2052,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Negative, \" Negative\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2053,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [aiInsights.sentimentDistribution.Neutral, \" Neutral\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2054,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2051,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2029,\n                        columnNumber: 35\n                      }, this), aiInsights.themes && aiInsights.themes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Associated Themes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2062,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex flex-wrap gap-2\",\n                          children: aiInsights.themes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\",\n                            children: theme\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2065,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2063,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2061,\n                        columnNumber: 35\n                      }, this), aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Example Feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2076,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-3\",\n                          children: aiInsights.exampleFeedback.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-white p-3 rounded border border-gray-200\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"text-sm text-gray-700 italic mb-2\",\n                              children: [\"\\\"\", item.text, \"\\\"\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2080,\n                              columnNumber: 43\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `text-xs px-2 py-1 rounded-full inline-block ${item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-700'}`,\n                              children: item.sentiment\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2081,\n                              columnNumber: 43\n                            }, this)]\n                          }, idx, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2079,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2077,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2075,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2004,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1998,\n                    columnNumber: 29\n                  }, this), aiInsights.isFeedbackView && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-4 h-4 rounded-full mr-2\",\n                        style: {\n                          backgroundColor: colorScale(`feedback-${((_aiInsights$sentiment9 = aiInsights.sentiment) === null || _aiInsights$sentiment9 === void 0 ? void 0 : _aiInsights$sentiment9.toLowerCase()) || 'neutral'}`)\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2101,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-lg font-semibold text-gray-700\",\n                        children: \"Feedback Item\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2104,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2100,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Feedback\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2110,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-white p-4 rounded border border-gray-200 max-h-80 overflow-y-auto\",\n                          children: /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"text-gray-700 whitespace-pre-wrap break-words text-sm leading-relaxed\",\n                            children: aiInsights.text\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2112,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2111,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2109,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Sentiment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2120,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `inline-block px-3 py-1 rounded-full ${aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-700'}`,\n                          children: aiInsights.sentiment || 'Neutral'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2121,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2119,\n                        columnNumber: 33\n                      }, this), aiInsights.persona && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"From User\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2133,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm inline-block\",\n                          children: aiInsights.persona\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2134,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2132,\n                        columnNumber: 35\n                      }, this), aiInsights.themes && aiInsights.themes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-sm font-medium text-gray-700 mb-2\",\n                          children: \"Related Themes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2143,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex flex-wrap gap-2\",\n                          children: aiInsights.themes.map((theme, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\",\n                            children: theme\n                          }, idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2146,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2144,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2142,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex justify-between text-xs text-gray-500 mt-4 pt-4 border-t border-gray-200\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [\"ID: \", aiInsights.id || 'Unknown']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2156,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [\"Date: \", aiInsights.date || 'Unknown']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2157,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2155,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2107,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2099,\n                    columnNumber: 29\n                  }, this), aiInsights.insights && aiInsights.insights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-8\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-semibold text-gray-700 mb-3\",\n                      children: \"Key Insights\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2166,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-4\",\n                      children: aiInsights.insights.map(insight => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\",\n                        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                          className: \"font-medium text-gray-800 mb-1\",\n                          children: insight.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2170,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-gray-700 text-sm\",\n                          children: insight.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2171,\n                          columnNumber: 37\n                        }, this)]\n                      }, insight.id || Math.random(), true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2169,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2167,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2165,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1865,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1847,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1832,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 13\n        }, this), insights.length > 0 && !showAIInsightsPanel && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setAIInsights({\n              results: [],\n              insights: insights\n            });\n            setShowAIInsightsPanel(true);\n          },\n          className: \"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\",\n          children: [\"View AI Insights (\", insights.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1600,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1586,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"dBk8eddAWaCnME3T333ZQhaCLcc=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","d3","classifyFeedback","generateFeatureIdeas","analyzeSentiment","FeedbackImporter","processFeedbackData","importFeedbackData","Legend","Navigation","Header","AppHeader","jsxDEV","_jsxDEV","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","UserResearchNetwork","_s","_analyticsData$sentim","_analyticsData$sentim2","_analyticsData$sentim3","_aiInsights$personas","_aiInsights$sentiment","_aiInsights$sentiment2","_aiInsights$sentiment3","_aiInsights$sentiment4","_aiInsights$themes","_aiInsights$sentiment5","_aiInsights$sentiment6","_aiInsights$sentiment7","_aiInsights$sentiment8","_aiInsights$sentiment9","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","graphData","setGraphData","selectedNode","setSelectedNode","highlightMode","setHighlightMode","loading","setLoading","error","setError","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","results","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","insights","setInsights","analyticsData","setAnalyticsData","showMiniMap","setShowMiniMap","hasImportedData","setHasImportedData","console","log","createMiniMap","current","length","svg","select","selectAll","remove","miniMapSize","Math","min","miniMapMargin","miniMapContainer","append","attr","miniMapNodes","map","node","miniX","random","miniY","miniMapLinks","link","sourceId","targetId","filter","some","n","miniMapSimulation","forceSimulation","force","forceLink","d","distance","forceManyBody","forceCenter","forceCollide","radius","miniLinks","data","enter","miniNodes","baseColor","color","brighter","text","viewportRect","stop","i","tick","find","style","on","event","x","y","pointer","centerX","centerY","transform","zoomIdentity","translate","scale","transition","duration","call","timer","setTimeout","clearTimeout","cleanupMiniMap","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","recalculateFeedbackCounts","g","zoom","scaleExtent","Array","isArray","normalizedLinks","validLinks","sourceExists","targetExists","warn","simulation","max","sourceNode","targetNode","drag","dragstarted","dragged","dragended","preventDefault","document","getSelection","removeAllRanges","handleNodeClick","sentiment","title","active","alphaTarget","restart","fx","fy","feedbackCounts","themes","personas","features","forEach","updatedNodes","prevData","importData","file","files","then","importedData","feedbackNodes","batchSize","batch","slice","Promise","all","feedbackText","fullText","result","processedNodes","label","sentimentCounts","reduce","counts","updatedAnalytics","analytics","sentimentDistribution","svgWidth","svgHeight","catch","message","mockClassifyFeedback","lowerText","toLowerCase","includes","theme","mockGenerateFeatureIdeas","processImportedFeedback","newGraph","nodeMap","item","user_role","personaId","Date","now","Object","keys","personaNode","push","processChunks","chunkSize","chunks","chunk","substring","themeId","themeNode","linkExists","err","resolve","significantThemes","values","sort","a","b","relatedFeedback","featureIdeas","idea","featureId","featureNode","description","existingLink","l","toString","fallback","tempSimulation","stopPropagation","connectedLinks","connectedNodeIds","connectedNodes","connectedFeedback","startsWith","connectedPersonas","sentimentCount","Positive","Negative","Neutral","exampleFeedback","f","originalText","completeText","content","feedback","isThemeView","isPersonaView","isFeedbackView","p","_i$relatedThemes","relatedThemes","connectedThemes","directFeedback","themeLinks","themeFeedbackIds","connectedId","themeFeedback","persona","t","_i$relatedPersonas","relatedPersonas","matchingItem","user","date","timestamp","zoomIn","currentTransform","zoomTransform","k","zoomOut","fitToScreen","minX","Infinity","minY","maxX","maxY","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","handleDataImported","exportData","completeExportData","undefined","index","vx","vy","exportDate","toISOString","exportVersion","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","createElement","setAttribute","click","resetVisualization","confirm","handleDataImport","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","accept","onChange","ref","marginRight","minHeight","showSentiment","sentimentColors","positive","neutral","negative","maxWidth","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","backgroundColor","round","idx","insight","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas, analyzeSentiment } from '../services/openaiService';\n\nimport FeedbackImporter from './FeedbackImporter';\nimport { processFeedbackData, importFeedbackData } from '../utils/importData';\nimport Legend from './Legend';\nimport Navigation from './Navigation';\nimport Header from './Header';\nimport AppHeader from './AppHeader';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n  .domain([\"theme\", \"feedback-positive\", \"feedback-neutral\", \"feedback-negative\", \"feedback\", \"persona\"])\n  .range([\"#3182CE\", \"#38A169\", \"#A0AEC0\", \"#E53E3E\", \"#38A169\", \"#DD6B20\"]); // Blue, Green, Gray, Red, Green, Orange\n\n// Initial data structure\nconst initialData = {\n  nodes: [\n    { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n    { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n    { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n    { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n    { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n    { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n  ],\n  links: [\n    { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n    { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n    { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n    { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n  ]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n  \n  // State\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [graphData, setGraphData] = useState({ nodes: [], links: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  \n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState({ results: [] });\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n  \n  const [insights, setInsights] = useState([]);\n  const [analyticsData, setAnalyticsData] = useState(null);\n\n  // Add these state variables back\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Add a state to track if data has been imported\n  const [hasImportedData, setHasImportedData] = useState(false);\n\n  // Add these debug effect hooks at the top level\n  useEffect(() => {\n    console.log(\"showAIInsightsPanel value changed:\", showAIInsightsPanel);\n  }, [showAIInsightsPanel]);\n\n  useEffect(() => {\n    if (showAIInsightsPanel && aiInsights) {\n      console.log(\"AI Insights Panel content:\", aiInsights);\n    }\n  }, [showAIInsightsPanel, aiInsights]);\n\n  // MiniMap implementation - define this before any useEffects that use it\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current || !graphData.nodes || graphData.nodes.length === 0) return () => {};\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9)\n      .attr(\"stroke\", \"#3182CE\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"rx\", 6);\n    \n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create links array with proper source/target references\n    const miniMapLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      return {\n        source: sourceId,\n        target: targetId\n      };\n    }).filter(link => {\n      // Filter out links with invalid source or target\n      return miniMapNodes.some(n => n.id === link.source) && \n             miniMapNodes.some(n => n.id === link.target);\n    });\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5))\n      .force(\"charge\", d3.forceManyBody().strength(-20))\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(4));\n    \n    // Add mini-map links\n    const miniLinks = miniMapContainer.selectAll(\".mini-link\")\n      .data(miniMapLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"mini-link\")\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"stroke-width\", 0.5);\n    \n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 3)\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3);\n      })\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1);\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 15)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"fill\", \"#2D3748\")\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniLinks\n      .attr(\"x1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniX : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = miniMapNodes.find(n => n.id === d.source);\n        return source ? source.miniY : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniX : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = miniMapNodes.find(n => n.id === d.target);\n        return target ? target.miniY : 0;\n      });\n    \n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add click behavior\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData, colorScale]);\n\n  // Simulate loading data on initial render - without createMiniMap dependency\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Add a separate effect to create the mini-map after loading\n  useEffect(() => {\n    if (!loading && showMiniMap && svgRef.current) {\n      const timer = setTimeout(() => {\n        createMiniMap();\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [loading, showMiniMap, dimensions]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    // Only create minimap if the SVG ref exists, dimensions are valid, and showMiniMap is true\n    if (svgRef.current && dimensions.width > 0 && dimensions.height > 0 && showMiniMap) {\n      // Remove any existing mini-map first to prevent duplicates\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      \n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    } else {\n      // Clean up any existing mini-map if showMiniMap is false\n      d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height, selectedNode]);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n    \n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    \n    console.log(\"Rendering with data:\", graphData);\n    \n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n    \n    // Set up zoom behavior\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n    \n    svg.call(zoom);\n    zoomRef.current = zoom;\n    \n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || \n        !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n        graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n    \n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n    \n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    \n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n    \n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(validLinks)\n        .id(d => d.id)\n        .distance(100)\n        .strength(1)) // Stronger link force for better connections\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide(30));\n    \n    simulationRef.current = simulation;\n    \n    // Create the links\n    const link = g.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(validLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", d => Math.max(2, d.strength * 6))\n      .attr(\"stroke\", \"#ccc\")\n      .attr(\"opacity\", d => {\n        // Apply opacity to links based on highlight mode\n        if (highlightMode === 'none') return 0.8;  // Default opacity\n        \n        // Get source and target node objects\n        const sourceNode = typeof d.source === 'object' ? d.source : nodes.find(n => n.id === d.source);\n        const targetNode = typeof d.target === 'object' ? d.target : nodes.find(n => n.id === d.target);\n        \n        if (!sourceNode || !targetNode) return 0.2;  // Fade out if invalid link\n        \n        // Highlight links between nodes of the highlighted type\n        if (highlightMode === 'themes' && \n            (sourceNode.type === 'theme' || targetNode.type === 'theme')) {\n          return 1.0;\n        }\n        \n        if (highlightMode === 'feedback' && \n            (sourceNode.type === 'feedback' || targetNode.type === 'feedback')) {\n          return 1.0;\n        }\n        \n        if (highlightMode === 'personas' && \n            (sourceNode.type === 'persona' || targetNode.type === 'persona')) {\n          return 1.0;\n        }\n        \n        return 0.2;  // Fade out non-highlighted links\n      });\n    \n    // Create the nodes\n    const node = g.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended))\n      .on(\"click\", (event, d) => {\n        // Prevent text selection\n        event.preventDefault();\n        document.getSelection().removeAllRanges();\n        \n        // Call the node click handler\n        handleNodeClick(d, event);\n      });\n    \n    // Add circles to nodes with appropriate colors\n    node.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 15;\n        return 10; // Smaller feedback nodes\n      })\n      .attr(\"fill\", d => {\n        // Update this section to use sentiment-based coloring for feedback nodes\n        if (d.type === \"feedback\") {\n          if (d.sentiment === \"Positive\") return colorScale(\"feedback-positive\");\n          if (d.sentiment === \"Negative\") return colorScale(\"feedback-negative\");\n          return colorScale(\"feedback-neutral\"); // Default to neutral if sentiment is not set or is \"Neutral\"\n        }\n        return colorScale(d.type);\n      })\n      .attr(\"stroke\", d => {\n        // Add a special stroke to highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') {\n            return \"#FFD700\"; // Gold stroke for highlighted theme nodes\n          }\n          if (highlightMode === 'feedback' && d.type === 'feedback') {\n            return \"#FFD700\"; // Gold stroke for highlighted feedback nodes\n          }\n          if (highlightMode === 'personas' && d.type === 'persona') {\n            return \"#FFD700\"; // Gold stroke for highlighted persona nodes\n          }\n        }\n        return \"#fff\"; // Default white stroke\n      })\n      .attr(\"stroke-width\", d => {\n        // Thicker stroke for highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') return 3;\n          if (highlightMode === 'feedback' && d.type === 'feedback') return 3;\n          if (highlightMode === 'personas' && d.type === 'persona') return 3;\n        }\n        return 2; // Default stroke width\n      })\n      .attr(\"opacity\", d => {\n        // Apply opacity to nodes based on highlight mode\n        if (highlightMode === 'none') return 1.0;  // Full opacity if no highlighting\n        \n        // Highlight specific node types\n        if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n        \n        return 0.3;  // Fade out non-highlighted nodes\n      });\n    \n    // Add labels with better positioning\n    node.append(\"text\")\n      .text(d => d.name)\n      .attr(\"x\", 0)\n      .attr(\"y\", d => {\n        if (d.type === \"theme\") return 30 + (d.feedbackCount / 2);\n        if (d.type === \"persona\") return 25;\n        return 22; // Position feedback labels\n      })\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", d => d.type === \"feedback\" ? \"10px\" : \"12px\") // Smaller text for feedback\n      .attr(\"fill\", d => {\n        // Make text more visible for highlighted nodes\n        if (highlightMode !== 'none') {\n          if (highlightMode === 'themes' && d.type === 'theme') return \"#000\";\n          if (highlightMode === 'feedback' && d.type === 'feedback') return \"#000\";\n          if (highlightMode === 'personas' && d.type === 'persona') return \"#000\";\n          return \"#999\"; // Faded text for non-highlighted nodes\n        }\n        return \"#333\"; // Default text color\n      })\n      .attr(\"opacity\", d => {\n        // Match opacity with the node circles\n        if (highlightMode === 'none') return 1.0;\n        \n        if (highlightMode === 'themes' && d.type === 'theme') return 1.0;\n        if (highlightMode === 'feedback' && d.type === 'feedback') return 1.0;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1.0;\n        \n        return 0.3;\n      });\n    \n    // Add title for tooltip that shows full feedback text\n    node.append(\"title\")\n      .text(d => d.type === \"feedback\" ? d.title : d.name);\n    \n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n    \n    // Update link positions immediately with node positions from simulation ticks\n    link\n      .attr(\"x1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const source = nodes.find(n => n.id === d.source);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const target = nodes.find(n => n.id === d.target);\n        return target ? target.y : 0;\n      });\n    \n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => {\n          // Handle both ID and object references\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n          const source = nodes.find(n => n.id === sourceId);\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n          const target = nodes.find(n => n.id === targetId);\n          return target ? target.y : 0;\n        });\n      \n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      \n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n    \n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(\n      dimensions.width / 2 - dimensions.width * 0.5,\n      dimensions.height / 2 - dimensions.height * 0.5\n    ).scale(0.8));\n    \n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, highlightMode, selectedNode]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n    \n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      \n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      \n      if (!sourceNode || !targetNode) return;\n      \n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n      \n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      }\n      else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n    \n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n      }\n      return node;\n    });\n    \n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    console.log(\"Starting import from file:\", file.name);\n    \n    // Use our async utility function\n    importFeedbackData(file)\n      .then(async (importedData) => {\n        console.log(\"Processed import data:\", importedData);\n        \n        // Process feedback nodes for sentiment analysis\n        const feedbackNodes = importedData.nodes.filter(node => \n          node.type === 'feedback' && !node.sentiment\n        );\n        \n        // If we have feedback nodes without sentiment, analyze them\n        if (feedbackNodes.length > 0) {\n          setIsAIProcessing(true);\n          \n          // Process in batches to avoid overwhelming the API\n          const batchSize = 5;\n          for (let i = 0; i < feedbackNodes.length; i += batchSize) {\n            const batch = feedbackNodes.slice(i, i + batchSize);\n            \n            // Process each node in the batch\n            await Promise.all(batch.map(async (node) => {\n              try {\n                const feedbackText = node.text || node.fullText || node.name || \"\";\n                const result = await analyzeSentiment(feedbackText);\n                node.sentiment = result.sentiment;\n              } catch (error) {\n                console.warn(`Error analyzing sentiment for node ${node.id}:`, error);\n                node.sentiment = \"Neutral\"; // Fallback\n              }\n            }));\n          }\n          \n          setIsAIProcessing(false);\n        }\n        \n        // Ensure node structure is compatible with visualization\n        const processedNodes = importedData.nodes.map(node => {\n          // Make sure each node has the essential properties\n          return {\n            ...node,\n            // Ensure these critical properties exist\n            id: node.id,\n            name: node.name || node.label || \"Unnamed\",\n            type: node.type || \"theme\",\n            // Add appropriate properties based on type\n            ...(node.type === 'theme' ? { feedbackCount: node.feedbackCount || 5 } : {}),\n            ...(node.type === 'feature' ? { priority: node.priority || 'Medium' } : {})\n          };\n        });\n        \n        // Update analytics data with sentiment distribution\n        const sentimentCounts = processedNodes\n          .filter(node => node.type === 'feedback' && node.sentiment)\n          .reduce((counts, node) => {\n            counts[node.sentiment] = (counts[node.sentiment] || 0) + 1;\n            return counts;\n          }, {});\n        \n        const updatedAnalytics = {\n          ...importedData.analytics,\n          sentimentDistribution: sentimentCounts\n        };\n        \n        setGraphData({ \n          nodes: processedNodes, \n          links: importedData.links || []\n        });\n        setInsights(importedData.insights || []);\n        setAnalyticsData(updatedAnalytics);\n        setLoading(false);\n        \n        // Reset any selections and force a re-center\n        setSelectedNode(null);\n        setTimeout(() => {\n          if (zoomRef.current) {\n            const svg = d3.select(svgRef.current);\n            const svgWidth = svg.node().getBoundingClientRect().width;\n            const svgHeight = svg.node().getBoundingClientRect().height;\n            \n            svg.transition()\n              .duration(750)\n              .call(zoomRef.current.transform, \n                d3.zoomIdentity\n                  .translate(svgWidth / 2, svgHeight / 2)\n                  .scale(0.8)\n              );\n          }\n        }, 300);\n        \n        // Set hasImportedData to true when data is successfully imported\n        setHasImportedData(true);\n      })\n      .catch(error => {\n        console.error(\"Error importing feedback data:\", error);\n        setError(`Error importing file: ${error.message || \"Unknown error\"}`);\n        setLoading(false);\n      });\n  }, []); // Remove fitToScreen from dependencies\n\n  // Helper function for keyword-based theme classification (used as fallback)\n  const mockClassifyFeedback = (text) => {\n    // Simple keyword-based classification\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n      return { theme: 'Stability Issues' };\n    } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n      return { theme: 'Performance' };\n    } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n      return { theme: 'Mobile Experience' };\n    } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || \n              lowerText.includes('layout') || lowerText.includes('look')) {\n      return { theme: 'User Interface' };\n    } else if (lowerText.includes('report') || lowerText.includes('dashboard')) {\n      return { theme: 'Reporting & Analytics' };\n    } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf')) {\n      return { theme: 'Data Export & Import' };\n    } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n      return { theme: 'Search & Navigation' };\n    }\n    \n    return { theme: 'General Feedback' };\n  };\n  \n  // Helper function for feature generation (used as fallback)\n  const mockGenerateFeatureIdeas = (theme) => {\n    // Generate simple feature ideas based on theme\n    if (theme === 'Stability Issues') {\n      return [{ \n        name: 'Crash Prevention & Recovery', \n        priority: 'High'\n      }];\n    } else if (theme === 'Performance') {\n      return [{ \n        name: 'Performance Optimization', \n        priority: 'High'\n      }];\n    } else if (theme === 'Mobile Experience') {\n      return [{ \n        name: 'Responsive Design Overhaul', \n        priority: 'High'\n      }];\n    } else if (theme === 'User Interface') {\n      return [{ \n        name: 'UI Modernization', \n        priority: 'Medium'\n      }];\n    } else if (theme === 'Reporting & Analytics') {\n      return [{ \n        name: 'Custom Report Builder', \n        priority: 'High'\n      }];\n    } else if (theme === 'Data Export & Import') {\n      return [{ \n        name: 'Enhanced Export Options', \n        priority: 'High'\n      }];\n    } else {\n      return [{ \n        name: 'User Experience Improvements', \n        priority: 'Medium'\n      }];\n    }\n  };\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback((feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    \n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n    \n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n    \n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n    \n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      \n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n    \n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n      \n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n      \n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i+1} of ${chunks.length}...`);\n        \n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          \n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            \n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            \n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                \n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n              \n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              \n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => \n                  (link.source === personaNode.id && link.target === themeNode.id) ||\n                  (link.source === themeNode.id && link.target === personaNode.id)\n                );\n                \n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n        \n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({...newGraph});\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n      \n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes)\n        .filter(theme => theme.feedbackCount >= 2)\n        .sort((a, b) => b.feedbackCount - a.feedbackCount)\n        .slice(0, 5); // Top 5 themes\n      \n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      \n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n          \n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          \n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          \n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              \n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n              \n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n              \n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                \n                if ((sourceId === theme.id || targetId === theme.id)) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  \n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => \n                      (l.source === personaId && l.target === featureId) ||\n                      (l.source === featureId && l.target === personaId)\n                    );\n                    \n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n      \n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n        \n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          \n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n          \n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n      \n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      \n      setGraphData(newGraph);\n      \n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n          \n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes)\n            .force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100))\n            .force(\"charge\", d3.forceManyBody().strength(-300))\n            .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n            .force(\"collide\", d3.forceCollide(40));\n          \n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          \n          tempSimulation.stop();\n        }\n        \n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n    \n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Update the handleNodeClick function to properly handle all node types with complete data\n  const handleNodeClick = useCallback((node, event) => {\n    if (!node) return;\n    \n    // Prevent text selection and set up the node selection\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n      }\n    }\n    \n    console.log(\"Node clicked, setting panel visible:\", node);\n    setSelectedNode(node);\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    if (node.type === 'theme') {\n      // Theme node view - collect all relevant data\n      const connectedFeedback = connectedNodes.filter(n => n.type === \"feedback\" || n.type.startsWith(\"feedback\"));\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      \n      const sentimentCount = {\n        Positive: connectedFeedback.filter(n => n.sentiment === \"Positive\" || n.type === \"feedback-positive\").length,\n        Negative: connectedFeedback.filter(n => n.sentiment === \"Negative\" || n.type === \"feedback-negative\").length,\n        Neutral: connectedFeedback.filter(n => n.sentiment === \"Neutral\" || \n                                            (n.type !== \"feedback-positive\" && n.type !== \"feedback-negative\")).length\n      };\n      \n      // Example feedback for this theme (get full text)\n      const exampleFeedback = connectedFeedback.slice(0, 3).map(f => ({\n        text: f.fullText || f.originalText || f.completeText || f.text || f.content || \n              f.feedback || f.description || f.name || \"\",\n        sentiment: f.sentiment || \n                  (f.type === \"feedback-positive\" ? \"Positive\" : \n                   f.type === \"feedback-negative\" ? \"Negative\" : \"Neutral\")\n      }));\n      \n      setAIInsights({\n        isThemeView: true,\n        isPersonaView: false,\n        isFeedbackView: false,\n        theme: node.name,\n        feedbackCount: connectedFeedback.length,\n        sentimentDistribution: sentimentCount,\n        personas: connectedPersonas.map(p => p.name),\n        exampleFeedback: exampleFeedback,\n        insights: node.insights || insights.filter(i => i.relatedThemes?.includes(node.name)) || []\n      });\n    } \n    else if (node.type === 'persona') {\n      // Persona node view - collect all related themes and feedback\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      \n      // Find all feedback indirectly connected to this persona through themes\n      let relatedFeedback = [];\n      \n      // First get directly connected feedback\n      const directFeedback = connectedNodes.filter(n => n.type === \"feedback\" || n.type.startsWith(\"feedback\"));\n      relatedFeedback = [...directFeedback];\n      \n      // Then get feedback connected through themes\n      for (const theme of connectedThemes) {\n        const themeLinks = graphData.links.filter(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          return (sourceId === theme.id || targetId === theme.id);\n        });\n        \n        const themeFeedbackIds = themeLinks.map(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          const connectedId = sourceId === theme.id ? targetId : sourceId;\n          return connectedId;\n        });\n        \n        const themeFeedback = graphData.nodes.filter(n => \n          themeFeedbackIds.includes(n.id) && \n          (n.type === \"feedback\" || n.type.startsWith(\"feedback\")) && \n          !relatedFeedback.some(f => f.id === n.id)\n        );\n        \n        relatedFeedback = [...relatedFeedback, ...themeFeedback];\n      }\n      \n      // Get sentiment distribution for this persona's feedback\n      const sentimentCount = {\n        Positive: relatedFeedback.filter(n => n.sentiment === \"Positive\" || n.type === \"feedback-positive\").length,\n        Negative: relatedFeedback.filter(n => n.sentiment === \"Negative\" || n.type === \"feedback-negative\").length,\n        Neutral: relatedFeedback.filter(n => n.sentiment === \"Neutral\" || \n                                         (n.type !== \"feedback-positive\" && n.type !== \"feedback-negative\")).length\n      };\n      \n      // Example feedback for this persona (get full text)\n      const exampleFeedback = relatedFeedback.slice(0, 3).map(f => ({\n        text: f.fullText || f.originalText || f.completeText || f.text || f.content || \n              f.feedback || f.description || f.name || \"\",\n        sentiment: f.sentiment || \n                  (f.type === \"feedback-positive\" ? \"Positive\" : \n                   f.type === \"feedback-negative\" ? \"Negative\" : \"Neutral\")\n      }));\n      \n      setAIInsights({\n        isThemeView: false,\n        isPersonaView: true,\n        isFeedbackView: false,\n        persona: node.name,\n        feedbackCount: relatedFeedback.length,\n        themes: connectedThemes.map(t => t.name),\n        sentimentDistribution: sentimentCount,\n        exampleFeedback: exampleFeedback,\n        insights: node.insights || insights.filter(i => i.relatedPersonas?.includes(node.name)) || []\n      });\n    }\n    else if (node.type.startsWith('feedback') || node.type === 'feedback') {\n      console.log(\"Feedback node clicked:\", node);\n      \n      // Use node.title as the full feedback text\n      let fullText = node.title || \"No feedback text available\";\n      \n      // If node.title isn't available, try other sources\n      if (!node.title) {\n        // Try standard fields\n        fullText = node.text || node.content || node.name || \"No feedback text available\";\n        \n        // Check feedbackItems if available\n        if (feedbackItems && feedbackItems.length > 0) {\n          const matchingItem = feedbackItems.find(item => item.id === node.id);\n          if (matchingItem && matchingItem.text) {\n            fullText = matchingItem.text;\n          }\n        }\n      }\n      \n      // Get related themes\n      const relatedThemes = connectedNodes\n        .filter(n => n.type === \"theme\")\n        .map(n => n.name);\n      \n      setAIInsights({\n        isThemeView: false,\n        isPersonaView: false,\n        isFeedbackView: true,\n        text: fullText,\n        sentiment: node.sentiment || 'Neutral',\n        persona: node.user_role || node.persona || node.user || \"Unknown user\",\n        themes: node.theme ? [node.theme] : (node.themes || relatedThemes || []),\n        id: node.id || \"Unknown\",\n        date: node.timestamp || node.date || \"Unknown\",\n        insights: node.insights || []\n      });\n    }\n    \n    // Make sure to call this at the end of all node types\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  }, []);\n\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      \n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  const handleDataImported = (importedData) => {\n    if (importedData) {\n      setGraphData({ \n        nodes: importedData.nodes || [], \n        links: importedData.links || [] \n      });\n      setInsights(importedData.insights || []);\n    }\n  };\n\n  // Add these functions back\n  const exportData = useCallback(() => {\n    // Prepare complete export with all AI data\n    const completeExportData = {\n      // Include the graph structure\n      nodes: graphData.nodes.map(node => ({\n        ...node,\n        // If there are any D3-specific properties that shouldn't be exported, filter them out here\n        fx: undefined,\n        fy: undefined,\n        index: undefined,\n        vx: undefined,\n        vy: undefined,\n        x: undefined,\n        y: undefined\n      })),\n      links: graphData.links.map(link => {\n        // Ensure links use id strings rather than object references\n        const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n        const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n        \n        return {\n          source: sourceId,\n          target: targetId,\n          strength: link.strength || 0.5\n        };\n      }),\n      \n      // Include all AI-generated insights\n      insights: insights || [],\n      \n      // Include analytics data with sentiment distribution\n      analytics: {\n        ...analyticsData,\n        // Ensure sentiment distribution is included\n        sentimentDistribution: analyticsData?.sentimentDistribution || {\n          Positive: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Positive').length,\n          Negative: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Negative').length,\n          Neutral: graphData.nodes.filter(n => n.type === 'feedback' && n.sentiment === 'Neutral').length\n        },\n        exportDate: new Date().toISOString(),\n        exportVersion: \"1.0\"\n      },\n      \n      // Include raw feedback data if available\n      feedbackItems: feedbackItems || []\n    };\n\n    // Convert to JSON string with nice formatting\n    const dataStr = JSON.stringify(completeExportData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n    \n    console.log(\"Exported data with AI insights and sentiment analysis\");\n  }, [graphData, insights, analyticsData, feedbackItems]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Function to handle when data is imported\n  const handleDataImport = (data) => {\n    // Your existing import handling logic\n    // ...\n    \n    // Set hasImportedData to true when data is successfully imported\n    setHasImportedData(true);\n  };\n\n  // Loading screen\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Error screen\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  // Then in the return statement, replace the existing AI panel with the improved one\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <AppHeader \n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        showSearchResults={showSearchResults}\n        searchResults={searchResults}\n        setSearchResults={setSearchResults}\n        setSelectedNode={setSelectedNode}\n        handleNodeClick={handleNodeClick}\n        setShowSearchResults={setShowSearchResults}\n        graphData={graphData}\n      />\n      \n      {/* Rest of the component without the header duplicate */}\n      <div className=\"flex flex-col h-full\">\n        {/* Controls and visualization tools */}\n        <div className=\"bg-white p-4 border-b border-gray-200\">\n          {/* Data controls */}\n          <div className=\"flex flex-wrap gap-2 mb-4\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">Data:</span>\n              <button \n                className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n                onClick={exportData}\n              >\n                Export\n              </button>\n              <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n                Import\n                <input \n                  type=\"file\" \n                  accept=\".json\" \n                  className=\"hidden\" \n                  onChange={importData}\n                />\n              </label>\n              <button \n                className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n                onClick={resetVisualization}\n              >\n                Reset\n              </button>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">View:</span>\n              <button \n                className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n                onClick={centerView}\n              >\n                Center View\n              </button>\n              <button \n                className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n                onClick={toggleMiniMap}\n              >\n                {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n              </button>\n              <button \n                className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n                onClick={fitToScreen}\n                title=\"Fit all nodes to screen\"\n              >\n                Fit to Screen\n              </button>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-sm text-gray-600\">Highlight:</span>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setHighlightMode('none')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  None\n                </button>\n                <button\n                  onClick={() => setHighlightMode('themes')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  Themes\n                </button>\n                <button\n                  onClick={() => setHighlightMode('feedback')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'feedback' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  Feedback\n                </button>\n                <button\n                  onClick={() => setHighlightMode('personas')}\n                  className={`px-3 py-1 text-sm rounded ${\n                    highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                  }`}\n                >\n                  User Role\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Main visualization container */}\n        <div className=\"flex flex-1 relative\">\n          <div \n            ref={containerRef} \n            className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n            style={{\n              marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n              minHeight: '500px'\n            }}\n          >\n            <svg \n              ref={svgRef} \n              width=\"100%\" \n              height=\"100%\"\n              className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n              style={{ minHeight: '500px' }}\n              onClick={() => setSelectedNode(null)}\n            />\n            \n            {/* Getting Started Instructions - displayed when no data imported */}\n            {!hasImportedData && (\n              <div className=\"absolute inset-0 flex items-center justify-center p-4\">\n                <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-3xl mx-auto\">\n                  <h2 className=\"text-2xl font-bold text-gray-800 mb-6 text-center\">Getting Started with Feedback Force</h2>\n                  \n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\">\n                        <span className=\"font-bold\">1</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-blue-600 mb-2\">Prepare Your Data</h3>\n                        <p className=\"text-gray-700 mb-2\">Format your feedback as JSON following this structure:</p>\n                        <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\n{`{\n  \"id\": \"feedback-id\",\n  \"text\": \"The actual feedback comment text\",\n  \"user_role\": \"User role (e.g. Admin)\",\n  \"timestamp\": \"xxx\"\n}`}\n                        </pre>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start\">\n                      <div className=\"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\">\n                        <span className=\"font-bold\">2</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-blue-600 mb-2\">Import Your Data</h3>\n                        <p className=\"text-gray-700\">Click the \"Import\" button to upload your JSON feedback file</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start\">\n                      <div className=\"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\">\n                        <span className=\"font-bold\">3</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-blue-600 mb-2\">Visualize</h3>\n                        <p className=\"text-gray-700\">Use \"Center View,\" \"Mini-Map,\" or \"Fit to Screen\" to explore your feedback network</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start\">\n                      <div className=\"bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center mr-4 flex-shrink-0\">\n                        <span className=\"font-bold\">4</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-blue-600 mb-2\">Analyze</h3>\n                        <p className=\"text-gray-700\">Apply filters with Highlight, Themes, and User Role options to discover patterns</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {/* Add Legend */}\n            <Legend \n              colorScale={colorScale} \n              showSentiment={true} \n              sentimentColors={{\n                positive: colorScale(\"feedback-positive\"),\n                neutral: colorScale(\"feedback-neutral\"),\n                negative: colorScale(\"feedback-negative\")\n              }}\n            />\n            \n            {/* Zoom controls */}\n            <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={zoomIn}\n              >\n                <span className=\"text-xl\">+</span>\n              </button>\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={zoomOut}\n              >\n                <span className=\"text-xl\">-</span>\n              </button>\n              <button \n                className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n                onClick={fitToScreen}\n              >\n                <span className=\"text-xl\">⊡</span>\n              </button>\n            </div>\n          </div>\n          \n          {/* AI Insights Panel if enabled */}\n          {showAIInsightsPanel && aiInsights && (\n            <div \n              className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300 flex`}\n              style={{ \n                width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n                maxWidth: '40%'\n              }}\n            >\n              {/* Panel collapse/expand control */}\n              <div className={`flex flex-col ${isPanelCollapsed ? 'w-full' : ''}`}>\n                {/* Collapse toggle button */}\n                <button \n                  className=\"absolute left-0 top-16 bg-white shadow-md p-2 rounded-l-md\"\n                  onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n                >\n                  {isPanelCollapsed ? \n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg> : \n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                    </svg>\n                  }\n                </button>\n                \n                {!isPanelCollapsed && (\n                  <div className=\"flex flex-col h-full\">\n                    {/* Panel header */}\n                    <div className=\"flex justify-between items-center p-4 border-b border-gray-200\">\n                      <h2 className=\"text-lg font-bold text-gray-800\">AI Insights</h2>\n                      <button \n                        className=\"text-gray-500 hover:text-red-500\"\n                        onClick={() => setShowAIInsightsPanel(false)}\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    {/* Scrollable content section */}\n                    <div className=\"flex-1 overflow-y-auto p-4 pb-20\">\n                      {/* Loading indicator */}\n                      {isAIProcessing && (\n                        <div className=\"flex justify-center items-center h-full\">\n                          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n                        </div>\n                      )}\n                      \n                      {/* Error message */}\n                      {aiError && (\n                        <div className=\"bg-red-50 p-4 rounded-lg border border-red-200 mb-4\">\n                          <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Error</h3>\n                          <p className=\"text-red-700\">{aiError}</p>\n                        </div>\n                      )}\n                      \n                      {/* AI Insights Content */}\n                      {!isAIProcessing && !aiError && (\n                        <div className=\"space-y-6\">\n                          {/* Sentiment Overview Section with proper spacing */}\n                          {analyticsData && analyticsData.sentimentDistribution && (\n                            <div className=\"mb-6 pb-6 border-b border-gray-200\">\n                              <h3 className=\"text-lg font-semibold text-gray-700 mb-4 text-center\">Sentiment Overview</h3>\n                              <div className=\"bg-gray-50 p-4 rounded-lg shadow-sm\">\n                                <div className=\"flex items-center justify-around mb-2\">\n                                  <div className=\"text-center\">\n                                    <div className=\"text-green-500 text-2xl font-bold\">\n                                      {analyticsData.sentimentDistribution?.Positive || 0}\n                                    </div>\n                                    <div className=\"text-xs text-gray-500\">Positive</div>\n                                  </div>\n                                  <div className=\"text-center\">\n                                    <div className=\"text-red-500 text-2xl font-bold\">\n                                      {analyticsData.sentimentDistribution?.Negative || 0}\n                                    </div>\n                                    <div className=\"text-xs text-gray-500\">Negative</div>\n                                  </div>\n                                  <div className=\"text-center\">\n                                    <div className=\"text-gray-500 text-2xl font-bold\">\n                                      {analyticsData.sentimentDistribution?.Neutral || 0}\n                                    </div>\n                                    <div className=\"text-xs text-gray-500\">Neutral</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                          \n                          {/* Theme Node Details */}\n                          {aiInsights.isThemeView && (\n                            <div className=\"mb-6\">\n                              <div className=\"flex items-center mb-4\">\n                                <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('theme') }}></div>\n                                <h3 className=\"text-lg font-semibold text-gray-700\">Theme: {aiInsights.theme}</h3>\n                              </div>\n                              \n                              <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                                <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-blue-600\">{aiInsights.feedbackCount || 0}</div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Feedback</div>\n                                  </div>\n                                  \n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-purple-600\">{aiInsights.personas?.length || 0}</div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Users</div>\n                                  </div>\n                                  \n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-teal-600\">\n                                      {Math.round(((aiInsights.sentimentDistribution?.Positive || 0) / \n                                        Math.max(1, ((aiInsights.sentimentDistribution?.Positive || 0) + \n                                         (aiInsights.sentimentDistribution?.Negative || 0) + \n                                         (aiInsights.sentimentDistribution?.Neutral || 0)))) * 100) || 0}%\n                                    </div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Positive</div>\n                                  </div>\n                                </div>\n                                \n                                {/* Sentiment mini-chart */}\n                                {aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Sentiment Distribution</div>\n                                    <div className=\"flex h-6 rounded-full overflow-hidden\">\n                                      <div \n                                        className=\"bg-green-500\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                      <div \n                                        className=\"bg-red-500\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                      <div \n                                        className=\"bg-gray-400\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                    </div>\n                                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                                      <div>{aiInsights.sentimentDistribution.Positive} Positive</div>\n                                      <div>{aiInsights.sentimentDistribution.Negative} Negative</div>\n                                      <div>{aiInsights.sentimentDistribution.Neutral} Neutral</div>\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Associated User Roles */}\n                                {aiInsights.personas && aiInsights.personas.length > 0 && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Associated User Roles</div>\n                                    <div className=\"flex flex-wrap gap-2\">\n                                      {aiInsights.personas.map((persona, idx) => (\n                                        <div key={idx} className=\"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm\">\n                                          {persona}\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Example Feedback */}\n                                {aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && (\n                                  <div>\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Example Feedback</div>\n                                    <div className=\"space-y-3\">\n                                      {aiInsights.exampleFeedback.map((item, idx) => (\n                                        <div key={idx} className=\"bg-white p-3 rounded border border-gray-200\">\n                                          <p className=\"text-sm text-gray-700 italic mb-2\">\"{item.text}\"</p>\n                                          <div className={`text-xs px-2 py-1 rounded-full inline-block ${\n                                            item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                            item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                            'bg-gray-100 text-gray-700'\n                                          }`}>\n                                            {item.sentiment}\n                                          </div>\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )}\n\n                          {/* Persona Node Details */}\n                          {aiInsights.isPersonaView && (\n                            <div className=\"mb-6\">\n                              <div className=\"flex items-center mb-4\">\n                                <div className=\"w-4 h-4 rounded-full mr-2\" style={{ backgroundColor: colorScale('persona') }}></div>\n                                <h3 className=\"text-lg font-semibold text-gray-700\">User Role: {aiInsights.persona}</h3>\n                              </div>\n                              \n                              <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                                <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-blue-600\">{aiInsights.feedbackCount || 0}</div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Feedback</div>\n                                  </div>\n                                  \n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-purple-600\">{aiInsights.themes?.length || 0}</div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Themes</div>\n                                  </div>\n                                  \n                                  <div className=\"text-center p-1 bg-white rounded border border-gray-200\">\n                                    <div className=\"text-xl font-bold text-teal-600\">\n                                      {Math.round(((aiInsights.sentimentDistribution?.Positive || 0) / \n                                        Math.max(1, ((aiInsights.sentimentDistribution?.Positive || 0) + \n                                         (aiInsights.sentimentDistribution?.Negative || 0) + \n                                         (aiInsights.sentimentDistribution?.Neutral || 0)))) * 100) || 0}%\n                                    </div>\n                                    <div className=\"text-[10px] text-gray-500 whitespace-normal overflow-hidden\">Positive</div>\n                                  </div>\n                                </div>\n                                \n                                {/* Sentiment mini-chart */}\n                                {aiInsights.sentimentDistribution && aiInsights.feedbackCount > 0 && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Sentiment Distribution</div>\n                                    <div className=\"flex h-6 rounded-full overflow-hidden\">\n                                      <div \n                                        className=\"bg-green-500\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Positive / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                      <div \n                                        className=\"bg-red-500\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Negative / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                      <div \n                                        className=\"bg-gray-400\" \n                                        style={{ \n                                          width: `${(aiInsights.sentimentDistribution.Neutral / Math.max(1, aiInsights.feedbackCount)) * 100}%` \n                                        }}\n                                      ></div>\n                                    </div>\n                                    <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                                      <div>{aiInsights.sentimentDistribution.Positive} Positive</div>\n                                      <div>{aiInsights.sentimentDistribution.Negative} Negative</div>\n                                      <div>{aiInsights.sentimentDistribution.Neutral} Neutral</div>\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Associated Themes */}\n                                {aiInsights.themes && aiInsights.themes.length > 0 && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Associated Themes</div>\n                                    <div className=\"flex flex-wrap gap-2\">\n                                      {aiInsights.themes.map((theme, idx) => (\n                                        <div key={idx} className=\"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\">\n                                          {theme}\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Example Feedback */}\n                                {aiInsights.exampleFeedback && aiInsights.exampleFeedback.length > 0 && (\n                                  <div>\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Example Feedback</div>\n                                    <div className=\"space-y-3\">\n                                      {aiInsights.exampleFeedback.map((item, idx) => (\n                                        <div key={idx} className=\"bg-white p-3 rounded border border-gray-200\">\n                                          <p className=\"text-sm text-gray-700 italic mb-2\">\"{item.text}\"</p>\n                                          <div className={`text-xs px-2 py-1 rounded-full inline-block ${\n                                            item.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                            item.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                            'bg-gray-100 text-gray-700'\n                                          }`}>\n                                            {item.sentiment}\n                                          </div>\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          )}\n                          \n                          {/* Feedback Node Details */}\n                          {aiInsights.isFeedbackView && (\n                            <div className=\"mb-6\">\n                              <div className=\"flex items-center mb-4\">\n                                <div className=\"w-4 h-4 rounded-full mr-2\" style={{ \n                                  backgroundColor: colorScale(`feedback-${aiInsights.sentiment?.toLowerCase() || 'neutral'}`) \n                                }}></div>\n                                <h3 className=\"text-lg font-semibold text-gray-700\">Feedback Item</h3>\n                              </div>\n                              \n                              <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\n                                {/* Full feedback text */}\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Feedback</div>\n                                  <div className=\"bg-white p-4 rounded border border-gray-200 max-h-80 overflow-y-auto\">\n                                    <p className=\"text-gray-700 whitespace-pre-wrap break-words text-sm leading-relaxed\">\n                                      {aiInsights.text}\n                                    </p>\n                                  </div>\n                                </div>\n                                \n                                {/* Sentiment */}\n                                <div className=\"mb-4\">\n                                  <div className=\"text-sm font-medium text-gray-700 mb-2\">Sentiment</div>\n                                  <div className={`inline-block px-3 py-1 rounded-full ${\n                                    aiInsights.sentiment === 'Positive' ? 'bg-green-100 text-green-800' : \n                                    aiInsights.sentiment === 'Negative' ? 'bg-red-100 text-red-800' : \n                                    'bg-gray-100 text-gray-700'\n                                  }`}>\n                                    {aiInsights.sentiment || 'Neutral'}\n                                  </div>\n                                </div>\n                                \n                                {/* Associated User */}\n                                {aiInsights.persona && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">From User</div>\n                                    <div className=\"bg-orange-50 text-orange-800 px-3 py-1 rounded-full text-sm inline-block\">\n                                      {aiInsights.persona}\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Related Themes */}\n                                {aiInsights.themes && aiInsights.themes.length > 0 && (\n                                  <div className=\"mb-4\">\n                                    <div className=\"text-sm font-medium text-gray-700 mb-2\">Related Themes</div>\n                                    <div className=\"flex flex-wrap gap-2\">\n                                      {aiInsights.themes.map((theme, idx) => (\n                                        <div key={idx} className=\"bg-blue-50 text-blue-800 px-3 py-1 rounded-full text-sm\">\n                                          {theme}\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {/* Metadata */}\n                                <div className=\"flex justify-between text-xs text-gray-500 mt-4 pt-4 border-t border-gray-200\">\n                                  <div>ID: {aiInsights.id || 'Unknown'}</div>\n                                  <div>Date: {aiInsights.date || 'Unknown'}</div>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                          \n                          {/* Key Insights Section */}\n                          {aiInsights.insights && aiInsights.insights.length > 0 && (\n                            <div className=\"mb-8\">\n                              <h3 className=\"text-lg font-semibold text-gray-700 mb-3\">Key Insights</h3>\n                              <div className=\"space-y-4\">\n                                {aiInsights.insights.map(insight => (\n                                  <div key={insight.id || Math.random()} className=\"bg-blue-50 p-4 rounded-lg shadow-sm border-l-4 border-blue-500\">\n                                    <h4 className=\"font-medium text-gray-800 mb-1\">{insight.title}</h4>\n                                    <p className=\"text-gray-700 text-sm\">{insight.description}</p>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {/* AI Insights button */}\n          {insights.length > 0 && !showAIInsightsPanel && (\n            <button\n              onClick={() => {\n                setAIInsights({ results: [], insights: insights });\n                setShowAIInsightsPanel(true);\n              }}\n              className=\"fixed bottom-8 left-8 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700\"\n            >\n              View AI Insights ({insights.length})\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}