{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/FeedbackImporter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { importFeedbackData } from '../utils/importData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackImporter = ({\n  onDataImported\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Only accept JSON files\n      if (!file.name.endsWith('.json')) {\n        throw new Error('Please upload a JSON file');\n      }\n      const importedData = await importFeedbackData(file);\n      onDataImported(importedData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error importing file:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-3\",\n      children: \"Import Feedback Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\",\n        children: [\"Select JSON File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".json\",\n          className: \"hidden\",\n          onChange: handleFileUpload,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-600\",\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Expected format: JSON array of feedback objects with id, text, user_role, and timestamp fields.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackImporter, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = FeedbackImporter;\nexport default FeedbackImporter;\nvar _c;\n$RefreshReg$(_c, \"FeedbackImporter\");","map":{"version":3,"names":["React","useState","importFeedbackData","jsxDEV","_jsxDEV","FeedbackImporter","onDataImported","_s","isLoading","setIsLoading","error","setError","handleFileUpload","event","file","target","files","name","endsWith","Error","importedData","err","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/FeedbackImporter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { importFeedbackData } from '../utils/importData';\n\nconst FeedbackImporter = ({ onDataImported }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Only accept JSON files\n      if (!file.name.endsWith('.json')) {\n        throw new Error('Please upload a JSON file');\n      }\n      \n      const importedData = await importFeedbackData(file);\n      onDataImported(importedData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error importing file:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white rounded shadow\">\n      <h2 className=\"text-lg font-semibold mb-3\">Import Feedback Data</h2>\n      \n      <div className=\"flex items-center space-x-4\">\n        <label className=\"cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\">\n          Select JSON File\n          <input \n            type=\"file\" \n            accept=\".json\" \n            className=\"hidden\" \n            onChange={handleFileUpload} \n            disabled={isLoading}\n          />\n        </label>\n        \n        {isLoading && <span className=\"text-gray-600\">Processing...</span>}\n      </div>\n      \n      {error && (\n        <div className=\"mt-3 text-red-500\">\n          Error: {error}\n        </div>\n      )}\n      \n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p>Expected format: JSON array of feedback objects with id, text, user_role, and timestamp fields.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackImporter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}