{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n\n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n\n      // Update the mini-map viewport to show the current view\n      if (showMiniMap) {\n        const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n        const viewportRect = svg.select(\".mini-map-viewport\");\n        if (!viewportRect.empty()) {\n          const {\n            x,\n            y,\n            k\n          } = event.transform;\n\n          // Calculate the viewport rectangle in the mini-map\n          const vpWidth = miniMapSize / k;\n          const vpHeight = miniMapSize / k;\n          const vpX = -x / dimensions.width * miniMapSize;\n          const vpY = -y / dimensions.height * miniMapSize;\n\n          // Update the viewport rectangle\n          viewportRect.attr(\"x\", Math.max(0, vpX)).attr(\"y\", Math.max(0, vpY)).attr(\"width\", Math.min(miniMapSize, vpWidth)).attr(\"height\", Math.min(miniMapSize, vpHeight));\n        }\n      }\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n\n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n\n    // Create links\n    const linkElements = g.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"stroke\", d => {\n      // Determine color based on the types of nodes being connected\n      const sourceNode = nodeMap[d.source];\n      const targetNode = nodeMap[d.target];\n      if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n\n      const sourceType = sourceNode.type;\n      const targetType = targetNode.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n\n      return \"#CBD5E0\"; // Default gray\n    }).attr(\"stroke-width\", d => Math.max(1, d.strength * 5)).attr(\"stroke-opacity\", 0.6);\n\n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      setSelectedNode(d);\n      handleNodeClick(d);\n    });\n\n    // Add circles to nodes\n    nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 0.8;\n      if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n      if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n      if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n      return 0.3;\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"text-anchor\", \"middle\").attr(\"dy\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight + 15;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22 + 15;\n        return 20 + 15;\n      }\n      return 22 + 15;\n    }).attr(\"font-size\", \"12px\").attr(\"fill\", \"#4A5568\").attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 1;\n      if (highlightMode === 'themes' && d.type === 'theme') return 1;\n      if (highlightMode === 'features' && d.type === 'feature') return 1;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1;\n      return 0.5;\n    });\n\n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)).force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n\n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50;\n      nodes.forEach(node => {\n        // Add some random movement if simulation is running\n        if (isSimulationRunning) {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        }\n\n        // Update positions\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n\n    // Update the simulation on tick\n    simulation.on(\"tick\", () => {\n      // Apply the boundary force\n      simulation.force(\"boundary\")();\n\n      // Update positions\n      linkElements.attr(\"x1\", d => {\n        const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n        return target ? target.y : 0;\n      });\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Pause or resume the simulation based on state\n    if (!isSimulationRunning) {\n      simulation.alpha(0).stop();\n    } else {\n      simulation.alpha(0.3).restart();\n    }\n\n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n\n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n\n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    setIsAIProcessing(true);\n    setAIError(null);\n    try {\n      // Process each feedback item\n      const results = [];\n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n\n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      setAIInsights(updatedInsights);\n\n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === item.user_role);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n\n        // Find the result for this item\n        const result = results.find(r => r.text === item.text && r.user_role === item.user_role);\n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n\n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n\n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n\n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = node => {\n    if (!node) return;\n\n    // Set the selected node\n    setSelectedNode(node);\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => link.source === node.id || link.target === node.id || typeof link.source === 'object' && link.source.id === node.id || typeof link.target === 'object' && link.target.id === node.id);\n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => result.theme === node.name);\n      }\n\n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text)).then(ideas => {\n          if (ideas && ideas.length > 0) {\n            setAIInsights(prev => ({\n              ...prev,\n              featureIdeas: ideas\n            }));\n          }\n        }).catch(error => {\n          console.error(\"Error generating feature ideas:\", error);\n        });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n\n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => {\n            var _aiInsights$results, _aiInsights$results$f;\n            return {\n              feedbackIndex: index,\n              text: item.text,\n              user_role: item.user_role,\n              theme: (aiInsights === null || aiInsights === void 0 ? void 0 : (_aiInsights$results = aiInsights.results) === null || _aiInsights$results === void 0 ? void 0 : (_aiInsights$results$f = _aiInsights$results.find(r => r.text === item.text)) === null || _aiInsights$results$f === void 0 ? void 0 : _aiInsights$results$f.theme) || \"Unknown\"\n            };\n          });\n        }\n      }\n    }\n\n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n\n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n\n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n\n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n\n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n\n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n\n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id,\n            // Use ID reference instead of object\n            target: themeId,\n            // Use ID reference instead of object\n            strength: 0.7\n          };\n\n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n\n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id,\n              // Use ID reference instead of object\n              target: themeNode.id,\n              // Use ID reference instead of object\n              strength: 0.7\n            };\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n\n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...((aiInsights === null || aiInsights === void 0 ? void 0 : aiInsights.results) || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n\n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n\n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9) // Semi-transparent background\n    .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n    .attr(\"stroke-width\", 2) // Thicker border\n    .attr(\"rx\", 6); // Rounded corners\n\n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n    .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n    .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n    .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n\n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n\n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n\n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 4.5) // Even larger radius for better visibility\n    .attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3); // Brighter colors\n    }).attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n    .attr(\"stroke-width\", 1.5); // Thicker stroke\n\n    // Add a label with better visibility\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 20).attr(\"font-size\", \"14px\") // Larger font\n    .attr(\"font-weight\", \"bold\") // Bold text\n    .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n    .text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) {\n      // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\").attr(\"x\", miniMapSize / 2).attr(\"y\", miniMapSize - 12).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"11px\").attr(\"font-weight\", \"medium\").attr(\"fill\", \"#4A5568\").text(\"Click to navigate\");\n\n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n\n    // Theme legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"theme\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 8).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Themes\");\n\n    // Feature legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 70).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"feature\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 78).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Features\");\n\n    // Persona legend item\n    miniMapContainer.append(\"circle\").attr(\"cx\", legendX + 140).attr(\"cy\", legendY).attr(\"r\", 4).attr(\"fill\", colorScale(\"persona\"));\n    miniMapContainer.append(\"text\").attr(\"x\", legendX + 148).attr(\"y\", legendY + 4).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4A5568\").text(\"Personas\");\n\n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    return miniMapSimulation;\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1504,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n\n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n\n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n\n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n\n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n\n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n\n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id).map(link => {\n          const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n          return connectedNodeId;\n        });\n        const connectedThemes = graphData.nodes.filter(n => n.type === \"theme\" && connectedThemeIds.includes(n.id));\n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => sum + (themeCounts[theme.name] || 0), 0);\n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      return node;\n    });\n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1664,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1669,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1701,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1705,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1706,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1700,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1691,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1689,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1727,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: () => {\n              if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                setGraphData(initialData);\n              }\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1717,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1766,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1786,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1795,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1775,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: () => {\n              if (selectedNode) {\n                initiateConnection(selectedNode);\n              }\n            },\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1807,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1824,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1832,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1837,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1843,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1849,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1855,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1835,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1804,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1872,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1865,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1885,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1893,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1904,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1907,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1903,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1919,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1927,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1928,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1929,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1922,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1918,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!newNodeName.trim()) {\n                alert(\"Please enter a name\");\n                return;\n              }\n              const newNode = {\n                id: `${modalType}-${Date.now()}`,\n                name: newNodeName,\n                type: modalType,\n                ...(modalType === 'theme' ? {\n                  feedbackCount: newNodeFeedbackCount\n                } : {}),\n                ...(modalType === 'feature' ? {\n                  priority: newNodePriority\n                } : {})\n              };\n              setGraphData({\n                nodes: [...graphData.nodes, newNode],\n                links: [...graphData.links]\n              });\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1946,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1934,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1884,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1883,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1984,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1992,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1988,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1998,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2006,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2008,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2001,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1997,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2016,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2019,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2015,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2031,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!connectionTarget) {\n                alert(\"Please select a target node\");\n                return;\n              }\n\n              // Check if connection already exists\n              const connectionExists = graphData.links.some(link => link.source === connectionSource.id && link.target === connectionTarget || link.source === connectionTarget && link.target === connectionSource.id);\n              if (connectionExists) {\n                alert(\"This connection already exists\");\n                return;\n              }\n              const newLink = {\n                source: connectionSource.id,\n                target: connectionTarget,\n                strength: connectionStrength\n              };\n              setGraphData({\n                nodes: [...graphData.nodes],\n                links: [...graphData.links, newLink]\n              });\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2042,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2030,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1983,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1982,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2089,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2094,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2097,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2093,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2137,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2136,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2119,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2145,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2088,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2087,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2164,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2163,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2201,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2200,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2213,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2211,\n            columnNumber: 19\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2222,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2229,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2230,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2225,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2223,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2221,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2246,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2249,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2247,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2245,\n            columnNumber: 21\n          }, this), aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"AI Feature Suggestions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2263,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: aiInsights.featureIdeas.map((idea, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-50 p-2 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium text-blue-800\",\n                  children: idea.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2267,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-blue-600 mt-1\",\n                  children: idea.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2268,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2266,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2264,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2262,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2282,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2283,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2281,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2292,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2293,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2291,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2280,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2303,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2310,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2311,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2306,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2304,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2302,\n            columnNumber: 21\n          }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Related Personas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2323,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                children: persona.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2326,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2324,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2322,\n            columnNumber: 21\n          }, this), aiInsights.implementationDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Implementation Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2340,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded text-sm\",\n              children: aiInsights.implementationDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2341,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2339,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2353,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2354,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2352,\n            columnNumber: 19\n          }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Common Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2363,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: theme.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2370,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-blue-600\",\n                  children: [theme.feedbackCount || 0, \" feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2371,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2366,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2364,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2362,\n            columnNumber: 21\n          }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"Relevant Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2383,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: feature.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2390,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: feature.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2391,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2386,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2384,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2382,\n            columnNumber: 21\n          }, this), aiInsights.personaInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: \"User Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2407,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 p-3 rounded text-sm text-orange-800\",\n              children: aiInsights.personaInsights\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2408,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2406,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2419,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: result.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2424,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2426,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2427,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2425,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2423,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2433,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2199,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1659,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"dygJmNUMwE2q5R3r35WBpLGwd7o=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","current","console","log","createMiniMap","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","miniMapSize","Math","min","viewportRect","empty","x","y","k","vpWidth","vpHeight","vpX","vpY","max","call","map","node","nodeMap","forEach","link","linkElements","data","enter","d","sourceNode","targetNode","sourceType","targetType","nodeGroup","drag","dragstarted","dragged","dragended","stopPropagation","handleNodeClick","text","simulation","forceSimulation","force","forceLink","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","padding","vx","random","vy","alpha","stop","restart","centerView","fitToScreen","active","alphaTarget","fx","fy","length","recalculateFeedbackCounts","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","file","files","reader","FileReader","onload","e","importedData","parse","result","err","readAsText","importSimplifiedData","feedback","Array","isArray","processFeedbackBatch","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","clearTimeout","addTheme","filter","n","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","find","l","push","targetId","suggestConnections","sameTypeNodes","currentConnections","potentialConnections","similarNode","includes","uniquePotentials","from","Set","zoomIn","currentTransform","zoomTransform","transition","duration","zoomIdentity","translate","scale","zoomOut","centerX","centerY","minX","Infinity","minY","maxX","maxY","contentWidth","contentHeight","toggleMiniMap","newShowMiniMap","miniMapSimulation","results","i","item","theme","feedbackIndex","user_role","updatedInsights","personaNode","personaId","Date","now","toString","substr","updatedNodes","prevData","r","themeNode","themeId","newLink","linkExists","some","connectedLinks","connectedNodeIds","connectedNodes","insights","connectedFeatures","connectedPersonas","then","ideas","prev","featureIdeas","catch","isFeatureView","connectedThemes","implementationDetails","persona","personaFeedback","index","_aiInsights$results","_aiInsights$results$f","focusOnNode","handleAddFeedback","feedbackId","newFeedbackItem","timestamp","toISOString","updatedFeedbackItems","miniMapMargin","miniMapContainer","miniMapNodes","miniX","miniY","miniNodes","baseColor","color","brighter","tick","style","pointer","legendY","legendX","legendSpacing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","togglePanelCollapse","initiateConnection","handleSearchResultClick","themeCounts","personaCounts","existingInsight","toLowerCase","connectedThemeIds","connectedNodeId","totalFeedbackCount","reduce","sum","placeholder","value","onChange","backgroundColor","accept","confirm","title","disabled","parseInt","ref","marginRight","trim","newNode","toFixed","step","parseFloat","connectionExists","rows","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","feature","idea","description","personaInsights","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  // Move this useEffect to be with the other useEffect hooks at the top of the component\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  // Add this useEffect right after the loading useEffect\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width) {\n      console.log(\"Creating mini-map from useEffect...\");\n      createMiniMap();\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n        \n        // Update the mini-map viewport to show the current view\n        if (showMiniMap) {\n          const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n          const viewportRect = svg.select(\".mini-map-viewport\");\n          \n          if (!viewportRect.empty()) {\n            const { x, y, k } = event.transform;\n            \n            // Calculate the viewport rectangle in the mini-map\n            const vpWidth = miniMapSize / k;\n            const vpHeight = miniMapSize / k;\n            const vpX = (-x / dimensions.width) * miniMapSize;\n            const vpY = (-y / dimensions.height) * miniMapSize;\n            \n            // Update the viewport rectangle\n            viewportRect\n              .attr(\"x\", Math.max(0, vpX))\n              .attr(\"y\", Math.max(0, vpY))\n              .attr(\"width\", Math.min(miniMapSize, vpWidth))\n              .attr(\"height\", Math.min(miniMapSize, vpHeight));\n          }\n        }\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Ensure all nodes are objects and all links reference nodes by ID\n    const nodes = graphData.nodes.map(node => ({...node}));\n    \n    // Create a map of node IDs to node objects for quick lookup\n    const nodeMap = {};\n    nodes.forEach(node => {\n      nodeMap[node.id] = node;\n    });\n    \n    // Process links to ensure they reference nodes by ID\n    const links = graphData.links.map(link => {\n      // Create a new link object to avoid modifying the original\n      return {\n        source: typeof link.source === 'object' ? link.source.id : link.source,\n        target: typeof link.target === 'object' ? link.target.id : link.target,\n        strength: link.strength\n      };\n    });\n    \n    // Create links\n    const linkElements = g.selectAll(\".link\")\n      .data(links)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"stroke\", d => {\n        // Determine color based on the types of nodes being connected\n        const sourceNode = nodeMap[d.source];\n        const targetNode = nodeMap[d.target];\n        \n        if (!sourceNode || !targetNode) return \"#CBD5E0\"; // Default gray if node not found\n        \n        const sourceType = sourceNode.type;\n        const targetType = targetNode.type;\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        \n        return \"#CBD5E0\"; // Default gray\n      })\n      .attr(\"stroke-width\", d => Math.max(1, d.strength * 5))\n      .attr(\"stroke-opacity\", 0.6);\n    \n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        setSelectedNode(d);\n        handleNodeClick(d);\n      });\n    \n    // Add circles to nodes\n    nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 0.8;\n        if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n        if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n        if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n        return 0.3;\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", d => {\n        if (d.type === \"theme\") return (20 + (d.feedbackCount / feedbackWeight)) + 15;\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22 + 15;\n          return 20 + 15;\n        }\n        return 22 + 15;\n      })\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#4A5568\")\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 1;\n        if (highlightMode === 'themes' && d.type === 'theme') return 1;\n        if (highlightMode === 'features' && d.type === 'feature') return 1;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1;\n        return 0.5;\n      });\n    \n    // Create a force simulation with the processed nodes and links\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05))\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n    \n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50;\n      nodes.forEach(node => {\n        // Add some random movement if simulation is running\n        if (isSimulationRunning) {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        }\n        \n        // Update positions\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n    \n    // Update the simulation on tick\n    simulation.on(\"tick\", () => {\n      // Apply the boundary force\n      simulation.force(\"boundary\")();\n      \n      // Update positions\n      linkElements\n        .attr(\"x1\", d => {\n          const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n          return source ? source.x : 0;\n        })\n        .attr(\"y1\", d => {\n          const source = typeof d.source === 'object' ? d.source : nodeMap[d.source];\n          return source ? source.y : 0;\n        })\n        .attr(\"x2\", d => {\n          const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n          return target ? target.x : 0;\n        })\n        .attr(\"y2\", d => {\n          const target = typeof d.target === 'object' ? d.target : nodeMap[d.target];\n          return target ? target.y : 0;\n        });\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Pause or resume the simulation based on state\n    if (!isSimulationRunning) {\n      simulation.alpha(0).stop();\n    } else {\n      simulation.alpha(0.3).restart();\n    }\n    \n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n    \n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n    \n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Add the feedbackItems useEffect here, with the other useEffect hooks\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Then define your functions\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to fit all nodes to screen\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Update the toggleMiniMap function\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    \n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        console.log(\"Creating mini-map...\");\n        const miniMapSimulation = createMiniMap();\n        console.log(\"Mini-map simulation created:\", miniMapSimulation);\n      }, 100);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        console.log(\"Removing mini-map...\");\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    if (!feedbackItems || feedbackItems.length === 0) return;\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    try {\n      // Process each feedback item\n      const results = [];\n      \n      for (let i = 0; i < feedbackItems.length; i++) {\n        const item = feedbackItems[i];\n        const result = await classifyFeedback(item.text);\n        \n        if (result && result.theme) {\n          results.push({\n            feedbackIndex: i,\n            text: item.text,\n            user_role: item.user_role,\n            theme: result.theme\n          });\n        }\n      }\n      \n      // Update AI insights\n      const updatedInsights = {\n        results\n      };\n      \n      setAIInsights(updatedInsights);\n      \n      // Update the graph with the new feedback\n      for (const item of feedbackItems) {\n        // Find or create persona node\n        let personaNode = graphData.nodes.find(node => \n          node.type === \"persona\" && node.name === item.user_role\n        );\n        \n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n          personaNode = {\n            id: personaId,\n            name: item.user_role,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n          \n          // Add the new persona node to the graph\n          const updatedNodes = [...graphData.nodes, personaNode];\n          \n          setGraphData(prevData => ({\n            nodes: updatedNodes,\n            links: [...prevData.links]\n          }));\n        } else {\n          // Update the existing persona's feedback count\n          setGraphData(prevData => ({\n            nodes: prevData.nodes.map(node => {\n              if (node.id === personaNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            }),\n            links: [...prevData.links]\n          }));\n        }\n        \n        // Find the result for this item\n        const result = results.find(r => \n          r.text === item.text && r.user_role === item.user_role\n        );\n        \n        if (result && result.theme) {\n          // Find or create theme node\n          let themeNode = graphData.nodes.find(node => \n            node.type === \"theme\" && node.name === result.theme\n          );\n          \n          if (!themeNode) {\n            // Create a new theme node\n            const themeId = `theme-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n            themeNode = {\n              id: themeId,\n              name: result.theme,\n              type: \"theme\",\n              feedbackCount: 1\n            };\n            \n            // Add the new theme node to the graph\n            const updatedNodes = [...graphData.nodes, themeNode];\n            \n            // Create a link between the persona and the theme\n            const newLink = {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            };\n            \n            setGraphData(prevData => ({\n              nodes: updatedNodes,\n              links: [...prevData.links, newLink]\n            }));\n          } else {\n            // Update the existing theme's feedback count\n            const updatedNodes = graphData.nodes.map(node => {\n              if (node.id === themeNode.id) {\n                return {\n                  ...node,\n                  feedbackCount: (node.feedbackCount || 0) + 1\n                };\n              }\n              return node;\n            });\n            \n            // Check if a link already exists between the persona and theme\n            const linkExists = graphData.links.some(link => \n              (link.source === personaNode.id && link.target === themeNode.id) ||\n              (link.source === themeNode.id && link.target === personaNode.id)\n            );\n            \n            if (!linkExists) {\n              // Create a new link\n              const newLink = {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              };\n              \n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links, newLink]\n              }));\n            } else {\n              // Just update the nodes\n              setGraphData(prevData => ({\n                nodes: updatedNodes,\n                links: [...prevData.links]\n              }));\n            }\n          }\n        }\n      }\n      \n      setIsAIProcessing(false);\n    } catch (error) {\n      console.error(\"Error processing feedback batch:\", error);\n      setAIError(\"Failed to process feedback batch. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Update the handleNodeClick function\n  const handleNodeClick = (node) => {\n    if (!node) return;\n    \n    // Set the selected node\n    setSelectedNode(node);\n    \n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => \n      link.source === node.id || link.target === node.id ||\n      (typeof link.source === 'object' && link.source.id === node.id) ||\n      (typeof link.target === 'object' && link.target.id === node.id)\n    );\n    \n    const connectedNodeIds = connectedLinks.map(link => {\n      if (typeof link.source === 'object') {\n        return link.source.id === node.id ? link.target : link.source.id;\n      } else {\n        return link.source === node.id ? link.target : link.source;\n      }\n    });\n    \n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n    \n    // Prepare insights based on node type\n    let insights = {\n      results: []\n    };\n    \n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Find feedback items related to this theme\n      if (aiInsights && aiInsights.results) {\n        insights.results = aiInsights.results.filter(result => \n          result.theme === node.name\n        );\n      }\n      \n      // Generate feature ideas if there are feedback items\n      if (insights.results.length > 0) {\n        generateFeatureIdeas(node.name, insights.results.map(r => r.text))\n          .then(ideas => {\n            if (ideas && ideas.length > 0) {\n              setAIInsights(prev => ({\n                ...prev,\n                featureIdeas: ideas\n              }));\n            }\n          })\n          .catch(error => {\n            console.error(\"Error generating feature ideas:\", error);\n          });\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n      \n      // Add implementation details if available\n      if (node.implementationDetails) {\n        insights.implementationDetails = node.implementationDetails;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n      \n      // Find connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n      \n      // Find connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n      \n      // Find feedback items from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => \n          item.user_role === node.name\n        );\n        \n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role,\n            theme: aiInsights?.results?.find(r => r.text === item.text)?.theme || \"Unknown\"\n          }));\n        }\n      }\n    }\n    \n    // Update AI insights and show the panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleAddFeedback = async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    // Create a new feedback item\n    const feedbackId = `feedback-${Date.now()}-${feedbackItems.length}`;\n    const newFeedbackItem = {\n      id: feedbackId,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Add to feedback items\n    const updatedFeedbackItems = [...feedbackItems, newFeedbackItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    // Check if the persona exists, if not create it\n    let personaNode = graphData.nodes.find(node => \n      node.type === \"persona\" && node.name === newFeedbackRole\n    );\n    \n    if (!personaNode) {\n      // Create a new persona node\n      const personaId = `persona-${Date.now()}-${graphData.nodes.length}`;\n      personaNode = {\n        id: personaId,\n        name: newFeedbackRole,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n      \n      // Add the new persona node to the graph\n      const updatedNodes = [...graphData.nodes, personaNode];\n      \n      // Update the graph data with the new node\n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    } else {\n      // Update the existing persona's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.id === personaNode.id) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n      \n      setGraphData({\n        nodes: updatedNodes,\n        links: [...graphData.links]\n      });\n    }\n    \n    // Reset form fields\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n    \n    // Process the feedback with AI\n    try {\n      setIsAIProcessing(true);\n      const result = await classifyFeedback(newFeedback);\n      setIsAIProcessing(false);\n      \n      if (result && result.theme) {\n        // Check if the theme exists, if not create it\n        let themeNode = graphData.nodes.find(node => \n          node.type === \"theme\" && node.name === result.theme\n        );\n        \n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}-${graphData.nodes.length}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n          \n          // Add the new theme node to the graph\n          const updatedNodes = [...graphData.nodes, themeNode];\n          \n          // Create a link between the persona and the theme\n          const newLink = {\n            source: personaNode.id, // Use ID reference instead of object\n            target: themeId, // Use ID reference instead of object\n            strength: 0.7\n          };\n          \n          // Update the graph data with the new node and link\n          setGraphData({\n            nodes: updatedNodes,\n            links: [...graphData.links, newLink]\n          });\n        } else {\n          // Update the existing theme's feedback count\n          const updatedNodes = graphData.nodes.map(node => {\n            if (node.id === themeNode.id) {\n              return {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              };\n            }\n            return node;\n          });\n          \n          // Check if a link already exists between the persona and theme\n          const linkExists = graphData.links.some(link => \n            (link.source === personaNode.id && link.target === themeNode.id) ||\n            (link.source === themeNode.id && link.target === personaNode.id)\n          );\n          \n          if (!linkExists) {\n            // Create a new link\n            const newLink = {\n              source: personaNode.id, // Use ID reference instead of object\n              target: themeNode.id, // Use ID reference instead of object\n              strength: 0.7\n            };\n            \n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links, newLink]\n            });\n          } else {\n            // Just update the nodes\n            setGraphData({\n              nodes: updatedNodes,\n              links: [...graphData.links]\n            });\n          }\n        }\n        \n        // Update AI insights with the new feedback\n        const updatedInsights = {\n          ...aiInsights,\n          results: [...(aiInsights?.results || []), {\n            feedbackIndex: updatedFeedbackItems.length - 1,\n            text: newFeedback,\n            user_role: newFeedbackRole,\n            theme: result.theme\n          }]\n        };\n        \n        setAIInsights(updatedInsights);\n      }\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25; // Increased size\n    const miniMapMargin = 20; // Margin from the edges\n    \n    // Create a container for the mini-map - position in top left instead of bottom right\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`); // Top left positioning\n    \n    // Add a background rectangle with a stronger border and semi-transparent background\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"fill-opacity\", 0.9) // Semi-transparent background\n      .attr(\"stroke\", \"#3182CE\") // Stronger border color (blue)\n      .attr(\"stroke-width\", 2) // Thicker border\n      .attr(\"rx\", 6); // Rounded corners\n    \n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"charge\", d3.forceManyBody().strength(-20)) // Even stronger repulsion\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(5)) // Larger collision radius\n      .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.3)) // Stronger centering\n      .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.3)); // Stronger centering\n    \n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 8; // Increased padding from the edges\n      \n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n    \n    // Add mini-map nodes with larger radius and stronger colors\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 4.5) // Even larger radius for better visibility\n      .attr(\"fill\", d => {\n        // Use the same color scale but with higher opacity\n        const baseColor = colorScale(d.type);\n        return d3.color(baseColor).brighter(0.3); // Brighter colors\n      })\n      .attr(\"stroke\", \"#fff\") // Add white stroke for better contrast\n      .attr(\"stroke-width\", 1.5); // Thicker stroke\n    \n    // Add a label with better visibility\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 10)\n      .attr(\"y\", 20)\n      .attr(\"font-size\", \"14px\") // Larger font\n      .attr(\"font-weight\", \"bold\") // Bold text\n      .attr(\"fill\", \"#2D3748\") // Darker text for better contrast\n      .text(\"Network Overview\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,4\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 500; i++) { // More ticks for better layout\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add a semi-transparent overlay to make the mini-map stand out\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .attr(\"stroke\", \"none\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Add a title to make it clear this is clickable\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", miniMapSize / 2)\n      .attr(\"y\", miniMapSize - 12)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"11px\")\n      .attr(\"font-weight\", \"medium\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Click to navigate\");\n    \n    // Add a legend for node types\n    const legendY = miniMapSize + 5;\n    const legendX = 10;\n    const legendSpacing = 20;\n    \n    // Theme legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"theme\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 8)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Themes\");\n    \n    // Feature legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 70)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"feature\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 78)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Features\");\n    \n    // Persona legend item\n    miniMapContainer.append(\"circle\")\n      .attr(\"cx\", legendX + 140)\n      .attr(\"cy\", legendY)\n      .attr(\"r\", 4)\n      .attr(\"fill\", colorScale(\"persona\"));\n    \n    miniMapContainer.append(\"text\")\n      .attr(\"x\", legendX + 148)\n      .attr(\"y\", legendY + 4)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4A5568\")\n      .text(\"Personas\");\n    \n    // Log that the mini-map was created\n    console.log(\"Mini-map created with size:\", miniMapSize, \"at position: top-left\");\n    \n    return miniMapSimulation;\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n    \n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n      \n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => \n          feedbackItems[result.feedbackIndex] && \n          feedbackItems[result.feedbackIndex].id === item.id\n        );\n        \n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n      \n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n      \n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    \n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      \n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n      \n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links\n          .filter(link => (link.source.id === node.id || link.target.id === node.id))\n          .map(link => {\n            const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n            return connectedNodeId;\n          });\n        \n        const connectedThemes = graphData.nodes.filter(n => \n          n.type === \"theme\" && connectedThemeIds.includes(n.id)\n        );\n        \n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => \n          sum + (themeCounts[theme.name] || 0), 0\n        );\n        \n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      \n      return node;\n    });\n    \n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                  setGraphData(initialData);\n                }\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={() => {\n                if (selectedNode) {\n                  initiateConnection(selectedNode);\n                }\n              }}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!newNodeName.trim()) {\n                    alert(\"Please enter a name\");\n                    return;\n                  }\n                  \n                  const newNode = {\n                    id: `${modalType}-${Date.now()}`,\n                    name: newNodeName,\n                    type: modalType,\n                    ...(modalType === 'theme' ? { feedbackCount: newNodeFeedbackCount } : {}),\n                    ...(modalType === 'feature' ? { priority: newNodePriority } : {})\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes, newNode],\n                    links: [...graphData.links]\n                  });\n                  \n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!connectionTarget) {\n                    alert(\"Please select a target node\");\n                    return;\n                  }\n                  \n                  // Check if connection already exists\n                  const connectionExists = graphData.links.some(link => \n                    (link.source === connectionSource.id && link.target === connectionTarget) ||\n                    (link.source === connectionTarget && link.target === connectionSource.id)\n                  );\n                  \n                  if (connectionExists) {\n                    alert(\"This connection already exists\");\n                    return;\n                  }\n                  \n                  const newLink = {\n                    source: connectionSource.id,\n                    target: connectionTarget,\n                    strength: connectionStrength\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes],\n                    links: [...graphData.links, newLink]\n                  });\n                  \n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleAddFeedback}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* AI Generated Feature Ideas */}\n                  {aiInsights.featureIdeas && aiInsights.featureIdeas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">AI Feature Suggestions</div>\n                      <div className=\"space-y-2\">\n                        {aiInsights.featureIdeas.map((idea, index) => (\n                          <div key={index} className=\"bg-blue-50 p-2 rounded\">\n                            <div className=\"font-medium text-blue-800\">{idea.name}</div>\n                            <div className=\"text-sm text-blue-600 mt-1\">{idea.description}</div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Implementation Details */}\n                  {aiInsights.implementationDetails && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Implementation Details</div>\n                      <div className=\"bg-gray-50 p-3 rounded text-sm\">\n                        {aiInsights.implementationDetails}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Common Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Relevant Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Persona Insights */}\n                  {aiInsights.personaInsights && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">User Insights</div>\n                      <div className=\"bg-orange-50 p-3 rounded text-sm text-orange-800\">\n                        {aiInsights.personaInsights}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                        <span>{result.user_role}</span>\n                        <span>{result.theme}</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}