{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserResearchNetwork = () => {\n  _s();\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n\n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n  // Initial data structure\n  const initialData = {\n    nodes: [\n    // Feedback themes (blue)\n    {\n      id: \"theme1\",\n      name: \"Slow Performance\",\n      type: \"theme\",\n      feedbackCount: 37\n    }, {\n      id: \"theme2\",\n      name: \"Confusing Navigation\",\n      type: \"theme\",\n      feedbackCount: 42\n    }, {\n      id: \"theme3\",\n      name: \"Missing Features\",\n      type: \"theme\",\n      feedbackCount: 28\n    }, {\n      id: \"theme4\",\n      name: \"Sync Issues\",\n      type: \"theme\",\n      feedbackCount: 15\n    }, {\n      id: \"theme5\",\n      name: \"Cluttered Interface\",\n      type: \"theme\",\n      feedbackCount: 31\n    }, {\n      id: \"theme6\",\n      name: \"Mobile Experience\",\n      type: \"theme\",\n      feedbackCount: 25\n    }, {\n      id: \"theme7\",\n      name: \"Data Visualization\",\n      type: \"theme\",\n      feedbackCount: 19\n    },\n    // Feature ideas (green)\n    {\n      id: \"feature1\",\n      name: \"Performance Optimization\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature2\",\n      name: \"Navigation Redesign\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature3\",\n      name: \"Bulk Actions\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature4\",\n      name: \"Offline Mode\",\n      type: \"feature\",\n      priority: \"Medium\"\n    }, {\n      id: \"feature5\",\n      name: \"Interface Simplification\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature6\",\n      name: \"Mobile App\",\n      type: \"feature\",\n      priority: \"High\"\n    }, {\n      id: \"feature7\",\n      name: \"Advanced Charts\",\n      type: \"feature\",\n      priority: \"Medium\"\n    },\n    // User personas (orange)\n    {\n      id: \"persona1\",\n      name: \"Power User\",\n      type: \"persona\"\n    }, {\n      id: \"persona2\",\n      name: \"Casual User\",\n      type: \"persona\"\n    }, {\n      id: \"persona3\",\n      name: \"Admin\",\n      type: \"persona\"\n    }, {\n      id: \"persona4\",\n      name: \"Mobile User\",\n      type: \"persona\"\n    }],\n    links: [\n    // Theme to Feature connections\n    {\n      source: \"theme1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"theme1\",\n      target: \"feature4\",\n      strength: 0.4\n    }, {\n      source: \"theme2\",\n      target: \"feature2\",\n      strength: 0.9\n    }, {\n      source: \"theme2\",\n      target: \"feature5\",\n      strength: 0.5\n    }, {\n      source: \"theme3\",\n      target: \"feature3\",\n      strength: 0.6\n    }, {\n      source: \"theme3\",\n      target: \"feature7\",\n      strength: 0.5\n    }, {\n      source: \"theme4\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"theme5\",\n      target: \"feature5\",\n      strength: 0.9\n    }, {\n      source: \"theme6\",\n      target: \"feature6\",\n      strength: 0.9\n    }, {\n      source: \"theme7\",\n      target: \"feature7\",\n      strength: 0.8\n    },\n    // Persona connections to themes\n    {\n      source: \"persona1\",\n      target: \"theme1\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"theme3\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"theme7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"theme2\",\n      strength: 0.8\n    }, {\n      source: \"persona2\",\n      target: \"theme5\",\n      strength: 0.7\n    }, {\n      source: \"persona3\",\n      target: \"theme1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"theme4\",\n      strength: 0.9\n    }, {\n      source: \"persona4\",\n      target: \"theme6\",\n      strength: 0.9\n    },\n    // Persona connections to features\n    {\n      source: \"persona1\",\n      target: \"feature1\",\n      strength: 0.8\n    }, {\n      source: \"persona1\",\n      target: \"feature3\",\n      strength: 0.7\n    }, {\n      source: \"persona1\",\n      target: \"feature7\",\n      strength: 0.9\n    }, {\n      source: \"persona2\",\n      target: \"feature2\",\n      strength: 0.7\n    }, {\n      source: \"persona2\",\n      target: \"feature5\",\n      strength: 0.8\n    }, {\n      source: \"persona3\",\n      target: \"feature1\",\n      strength: 0.6\n    }, {\n      source: \"persona3\",\n      target: \"feature4\",\n      strength: 0.8\n    }, {\n      source: \"persona4\",\n      target: \"feature6\",\n      strength: 0.9\n    }]\n  };\n  const [graphData, setGraphData] = useState(initialData);\n\n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n\n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const importData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  const importSimplifiedData = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n\n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n\n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const g = svg.append(\"g\");\n\n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n\n      // Update the mini-map viewport to show the current view\n      if (showMiniMap) {\n        const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n        const viewportRect = svg.select(\".mini-map-viewport\");\n        if (!viewportRect.empty()) {\n          const {\n            x,\n            y,\n            k\n          } = event.transform;\n\n          // Calculate the viewport rectangle in the mini-map\n          const vpWidth = miniMapSize / k;\n          const vpHeight = miniMapSize / k;\n          const vpX = -x / dimensions.width * miniMapSize;\n          const vpY = -y / dimensions.height * miniMapSize;\n\n          // Update the viewport rectangle\n          viewportRect.attr(\"x\", Math.max(0, vpX)).attr(\"y\", Math.max(0, vpY)).attr(\"width\", Math.min(miniMapSize, vpWidth)).attr(\"height\", Math.min(miniMapSize, vpHeight));\n        }\n      }\n    });\n\n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    svg.call(zoom);\n\n    // Create links\n    const link = g.selectAll(\".link\").data(graphData.links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"stroke\", d => {\n      var _graphData$nodes$find, _graphData$nodes$find2;\n      // Determine color based on the types of nodes being connected\n      const sourceType = ((_graphData$nodes$find = graphData.nodes.find(n => n.id === d.source)) === null || _graphData$nodes$find === void 0 ? void 0 : _graphData$nodes$find.type) || \"theme\";\n      const targetType = ((_graphData$nodes$find2 = graphData.nodes.find(n => n.id === d.target)) === null || _graphData$nodes$find2 === void 0 ? void 0 : _graphData$nodes$find2.type) || \"theme\";\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n\n      return \"#CBD5E0\"; // Default gray\n    }).attr(\"stroke-width\", d => Math.max(1, d.strength * 5)).attr(\"stroke-opacity\", 0.6);\n\n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\").data(graphData.nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      setSelectedNode(d);\n      handleNodeClick(d);\n    });\n\n    // Add circles to nodes\n    nodeGroup.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 0.8;\n      if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n      if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n      if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n      return 0.3;\n    });\n\n    // Add labels to nodes\n    nodeGroup.append(\"text\").text(d => d.name).attr(\"text-anchor\", \"middle\").attr(\"dy\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight + 15;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22 + 15;\n        return 20 + 15;\n      }\n      return 22 + 15;\n    }).attr(\"font-size\", \"12px\").attr(\"fill\", \"#4A5568\").attr(\"opacity\", d => {\n      if (highlightMode === 'none') return 1;\n      if (highlightMode === 'themes' && d.type === 'theme') return 1;\n      if (highlightMode === 'features' && d.type === 'feature') return 1;\n      if (highlightMode === 'personas' && d.type === 'persona') return 1;\n      return 0.5;\n    });\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes).force(\"link\", d3.forceLink(graphData.links).id(d => d.id).distance(d => 150 / (d.strength || 0.5))).force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide().radius(d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") {\n        if (d.priority === \"High\") return 22;\n        return 20;\n      }\n      return 22;\n    }).strength(0.8)).force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05)).force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n\n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n\n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n\n    // Simulation tick function\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n\n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n\n      // Update positions\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n\n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n\n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n\n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n\n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === connectionTarget || l.source === connectionTarget && l.target.id === connectionSource.id);\n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(l => l.source.id === connectionSource.id && l.target === targetId || l.source === targetId && l.target.id === connectionSource.id);\n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n\n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type === selectedNode.type);\n\n    // Get current connections of the selected node\n    const currentConnections = graphData.links.filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id || l.target.id === selectedNode.id || l.target === selectedNode.id).map(l => {\n      const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id ? l.target.id || l.target : l.source.id || l.source;\n      return targetId;\n    });\n\n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links.filter(l => l.source.id === similarNode.id || l.source === similarNode.id || l.target.id === similarNode.id || l.target === similarNode.id).forEach(l => {\n        const targetId = l.source.id === similarNode.id || l.source === similarNode.id ? l.target.id || l.target : l.source.id || l.source;\n\n        // If this is a new potential connection\n        if (!currentConnections.includes(targetId)) {\n          const targetNode = graphData.nodes.find(n => n.id === targetId);\n          if (targetNode && targetNode.type !== selectedNode.type) {\n            potentialConnections.push(targetNode);\n          }\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id))).map(id => potentialConnections.find(n => n.id === id));\n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n\n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  };\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n\n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n\n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = sourceNode => {\n    setConnectionSource(sourceNode);\n\n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => (node.type === \"feature\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"persona\") && node.id !== sourceNode.id);\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => (node.type === \"theme\" || node.type === \"feature\") && node.id !== sourceNode.id);\n    }\n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = node => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n\n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n\n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n\n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n\n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    console.log(\"Persona counts:\", personaCounts); // Debug log\n\n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n\n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id).map(link => {\n          const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n          return connectedNodeId;\n        });\n        const connectedThemes = graphData.nodes.filter(n => n.type === \"theme\" && connectedThemeIds.includes(n.id));\n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => sum + (themeCounts[theme.name] || 0), 0);\n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      return node;\n    });\n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async feedbackItems => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n\n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n\n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = node => {\n    setSelectedNode(node);\n\n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n\n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n\n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n\n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n\n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n\n      // Group feedback by theme\n      const feedbackByTheme = {};\n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n\n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => feedbackItems[result.feedbackIndex] && feedbackItems[result.feedbackIndex].id === item.id);\n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        feedbackByTheme[theme].push(item);\n      });\n\n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => link.source.id === node.id || link.target.id === node.id);\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n\n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => item.text.toLowerCase().includes(theme.name.toLowerCase()));\n        relatedFeedback.push(...themeFeedback);\n      });\n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n\n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = node => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1.5).translate(-node.x, -node.y);\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    setIsAIProcessing(true);\n    setAIError(null);\n\n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n\n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n\n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        return node;\n      });\n\n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n\n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n\n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n\n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n\n      // Extract simple keywords\n      const keywords = item.text.split(' ').filter(word => word.length > 3).map(word => word.toLowerCase().replace(/[^a-z0-9]/g, '')).slice(0, 3);\n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n\n    // Create a copy of the current graph data\n    const updatedGraphData = {\n      ...graphData\n    };\n\n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n\n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n\n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => node.type === \"persona\" && node.name === feedback.user_role);\n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n\n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => link.source === themeNode.id && link.target === personaNode.id || link.source === personaNode.id && link.target === themeNode.id);\n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n\n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n    const miniMapMargin = 10;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${dimensions.height - miniMapSize - miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"stroke\", \"#cbd5e0\").attr(\"stroke-width\", 1).attr(\"rx\", 4);\n\n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"charge\", d3.forceManyBody().strength(-10)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(3)).force(\"x\", d3.forceX(miniMapSize / 2).strength(0.1)).force(\"y\", d3.forceY(miniMapSize / 2).strength(0.1));\n\n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 3; // Padding from the edges\n\n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n\n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 2).attr(\"fill\", d => colorScale(d.type));\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 5).attr(\"y\", 12).attr(\"font-size\", \"10px\").attr(\"fill\", \"#4a5568\").text(\"Mini-Map\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 1).attr(\"stroke-dasharray\", \"3,3\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 100; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click handler to the mini-map to allow navigation\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Store the mini-map simulation for later reference\n    return miniMapSimulation;\n  };\n\n  // Add this function to toggle the mini-map\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        createMiniMap();\n      }, 50);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1508,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1517,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1541,\n            columnNumber: 13\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1573,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1577,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1578,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1572,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1563,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: () => {\n              if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                setGraphData(initialData);\n              }\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1606,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1618,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1647,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: () => {\n              if (selectedNode) {\n                setConnectionSource(selectedNode);\n\n                // Filter available targets based on the source node type\n                let targets = [];\n                if (selectedNode.type === \"theme\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"feature\" || node.type === \"persona\"));\n                } else if (selectedNode.type === \"feature\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"theme\" || node.type === \"persona\"));\n                } else if (selectedNode.type === \"persona\") {\n                  targets = graphData.nodes.filter(node => node.id !== selectedNode.id && (node.type === \"theme\" || node.type === \"feature\"));\n                }\n                setAvailableTargets(targets);\n                setShowConnectionModal(true);\n              }\n            },\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1737,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1749,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1729,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1676,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 bg-gray-50 p-4 transition-all duration-300`,\n      ref: containerRef,\n      style: {\n        marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n        onClick: () => setSelectedNode(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1766,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1759,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1779,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1784,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1787,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1783,\n          columnNumber: 13\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1798,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 15\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1813,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1821,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1823,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1816,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1829,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!newNodeName.trim()) {\n                alert(\"Please enter a name\");\n                return;\n              }\n              const newNode = {\n                id: `${modalType}-${Date.now()}`,\n                name: newNodeName,\n                type: modalType,\n                ...(modalType === 'theme' ? {\n                  feedbackCount: newNodeFeedbackCount\n                } : {}),\n                ...(modalType === 'feature' ? {\n                  priority: newNodePriority\n                } : {})\n              };\n              setGraphData({\n                nodes: [...graphData.nodes, newNode],\n                links: [...graphData.links]\n              });\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1840,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1828,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1777,\n      columnNumber: 9\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1878,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1886,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1882,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1892,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1900,\n              columnNumber: 17\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1902,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1895,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1891,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1910,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1913,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1925,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: () => {\n              if (!connectionTarget) {\n                alert(\"Please select a target node\");\n                return;\n              }\n\n              // Check if connection already exists\n              const connectionExists = graphData.links.some(link => link.source === connectionSource.id && link.target === connectionTarget || link.source === connectionTarget && link.target === connectionSource.id);\n              if (connectionExists) {\n                alert(\"This connection already exists\");\n                return;\n              }\n              const newLink = {\n                source: connectionSource.id,\n                target: connectionTarget,\n                strength: connectionStrength\n              };\n              setGraphData({\n                nodes: [...graphData.nodes],\n                links: [...graphData.links, newLink]\n              });\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1936,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1924,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1877,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 9\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1983,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1988,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1991,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1987,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2001,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2004,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2000,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2014,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleFeedbackSubmit,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2031,\n                columnNumber: 21\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2030,\n              columnNumber: 19\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2024,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2013,\n          columnNumber: 13\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2039,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1982,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1981,\n      columnNumber: 9\n    }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n      style: {\n        width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n        maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePanelCollapse,\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n          title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n              : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2064,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2063,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2058,\n          columnNumber: 13\n        }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n          children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2073,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIInsightsPanel(false),\n          className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n          title: \"Close panel\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2086,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2085,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2080,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2057,\n        columnNumber: 11\n      }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2095,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2094,\n          columnNumber: 15\n        }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2106,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2107,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2105,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2122,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                children: aiInsights.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2123,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2121,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2132,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-right\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2133,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2131,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2120,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Feedback Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2149,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2147,\n            columnNumber: 19\n          }, this)\n        }, void 0, false), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-sm text-gray-600 mb-2\",\n            children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2162,\n            columnNumber: 19\n          }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-2 rounded mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: result.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2167,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between mt-1 text-xs text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2169,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: result.theme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2170,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2168,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2166,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic\",\n          children: \"No feedback data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2176,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2093,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2049,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1531,\n    columnNumber: 5\n  }, this);\n};\n_s(UserResearchNetwork, \"+oQT8OObBONAZEvyWxQjmj1Olr4=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","UserResearchNetwork","_s","svgRef","containerRef","dimensions","setDimensions","width","height","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","showConnectionModal","setShowConnectionModal","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","showFeedbackModal","setShowFeedbackModal","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","name","type","feedbackCount","priority","links","source","target","strength","graphData","setGraphData","zoomRef","miniMapSizeRef","miniMapScaleRef","setTimeout","exportData","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importData","event","file","files","reader","FileReader","onload","e","importedData","parse","result","err","readAsText","importSimplifiedData","feedback","Array","isArray","processFeedbackBatch","current","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","attr","transform","miniMapSize","Math","min","viewportRect","empty","x","y","k","vpWidth","vpHeight","vpX","vpY","max","call","link","data","enter","d","_graphData$nodes$find","_graphData$nodes$find2","sourceType","find","n","targetType","nodeGroup","drag","dragstarted","dragged","dragended","stopPropagation","handleNodeClick","text","simulation","forceSimulation","force","forceLink","distance","forceManyBody","distanceMax","forceCenter","forceCollide","radius","forceX","forceY","padding","forEach","node","tick","vx","random","vy","createMiniMap","centerView","fitToScreen","active","alphaTarget","restart","fx","fy","stop","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","containerWidth","clientWidth","containerHeight","clientHeight","timer","clearTimeout","addTheme","filter","length","addFeature","handleModalSubmit","newId","newTheme","newFeature","connectNodes","targets","alert","resetVisualization","handleNodeSelection","randomIndex","floor","handleConnectionSubmit","newLinks","existingConnection","l","push","targetId","suggestConnections","sameTypeNodes","currentConnections","map","potentialConnections","similarNode","includes","targetNode","uniquePotentials","from","Set","zoomIn","currentTransform","zoomTransform","transition","duration","zoomIdentity","translate","scale","zoomOut","centerX","centerY","initiateConnection","sourceNode","handleSearchResultClick","recalculateFeedbackCounts","themeCounts","personaCounts","item","user_role","theme","results","existingInsight","feedbackIndex","toLowerCase","console","log","updatedNodes","connectedThemeIds","connectedNodeId","connectedThemes","totalFeedbackCount","reduce","sum","togglePanelCollapse","minX","Infinity","minY","maxX","maxY","contentWidth","contentHeight","existingThemes","classificationResult","mockClassifyFeedback","updateGraphWithClassification","relatedFeedback","connections","connectedNodes","connectedNode","themeInsights","connectedFeatures","connectedPersonas","index","sentiment","keywords","split","word","replace","slice","personaFeedback","actualFeedbackCount","feedbackByTheme","personaInsights","persona","themeBreakdown","Object","keys","count","themeFeedback","featureInsights","feature","description","t","join","isFeatureView","focusOnNode","handleFeedbackSubmit","trim","newItem","Date","now","timestamp","toISOString","updatedFeedbackItems","some","Promise","resolve","themeNode","newThemes","updatedGraphData","personaNode","existingLink","miniMapMargin","miniMapContainer","miniMapNodes","miniX","miniY","miniMapSimulation","miniNodes","i","style","pointer","toggleMiniMap","newShowMiniMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","backgroundColor","accept","confirm","title","disabled","parseInt","ref","marginRight","newNode","toFixed","step","parseFloat","connectionExists","newLink","rows","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\nconst UserResearchNetwork = () => {\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n  const [showMiniMap, setShowMiniMap] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320); // Default width\n  \n  // Add this constant at the top of your component, right after your state declarations\n  const colorScale = d3.scaleOrdinal()\n    .domain([\"theme\", \"feature\", \"persona\"])\n    .range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n  \n  // Initial data structure\n  const initialData = {\n    nodes: [\n      // Feedback themes (blue)\n      { id: \"theme1\", name: \"Slow Performance\", type: \"theme\", feedbackCount: 37 },\n      { id: \"theme2\", name: \"Confusing Navigation\", type: \"theme\", feedbackCount: 42 },\n      { id: \"theme3\", name: \"Missing Features\", type: \"theme\", feedbackCount: 28 },\n      { id: \"theme4\", name: \"Sync Issues\", type: \"theme\", feedbackCount: 15 },\n      { id: \"theme5\", name: \"Cluttered Interface\", type: \"theme\", feedbackCount: 31 },\n      { id: \"theme6\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 25 },\n      { id: \"theme7\", name: \"Data Visualization\", type: \"theme\", feedbackCount: 19 },\n      \n      // Feature ideas (green)\n      { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" },\n      { id: \"feature2\", name: \"Navigation Redesign\", type: \"feature\", priority: \"High\" },\n      { id: \"feature3\", name: \"Bulk Actions\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature4\", name: \"Offline Mode\", type: \"feature\", priority: \"Medium\" },\n      { id: \"feature5\", name: \"Interface Simplification\", type: \"feature\", priority: \"High\" },\n      { id: \"feature6\", name: \"Mobile App\", type: \"feature\", priority: \"High\" },\n      { id: \"feature7\", name: \"Advanced Charts\", type: \"feature\", priority: \"Medium\" },\n      \n      // User personas (orange)\n      { id: \"persona1\", name: \"Power User\", type: \"persona\" },\n      { id: \"persona2\", name: \"Casual User\", type: \"persona\" },\n      { id: \"persona3\", name: \"Admin\", type: \"persona\" },\n      { id: \"persona4\", name: \"Mobile User\", type: \"persona\" }\n    ],\n    links: [\n      // Theme to Feature connections\n      { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n      { source: \"theme1\", target: \"feature4\", strength: 0.4 },\n      { source: \"theme2\", target: \"feature2\", strength: 0.9 },\n      { source: \"theme2\", target: \"feature5\", strength: 0.5 },\n      { source: \"theme3\", target: \"feature3\", strength: 0.6 },\n      { source: \"theme3\", target: \"feature7\", strength: 0.5 },\n      { source: \"theme4\", target: \"feature4\", strength: 0.8 },\n      { source: \"theme5\", target: \"feature5\", strength: 0.9 },\n      { source: \"theme6\", target: \"feature6\", strength: 0.9 },\n      { source: \"theme7\", target: \"feature7\", strength: 0.8 },\n      \n      // Persona connections to themes\n      { source: \"persona1\", target: \"theme1\", strength: 0.7 },\n      { source: \"persona1\", target: \"theme3\", strength: 0.8 },\n      { source: \"persona1\", target: \"theme7\", strength: 0.9 },\n      { source: \"persona2\", target: \"theme2\", strength: 0.8 },\n      { source: \"persona2\", target: \"theme5\", strength: 0.7 },\n      { source: \"persona3\", target: \"theme1\", strength: 0.6 },\n      { source: \"persona3\", target: \"theme4\", strength: 0.9 },\n      { source: \"persona4\", target: \"theme6\", strength: 0.9 },\n      \n      // Persona connections to features\n      { source: \"persona1\", target: \"feature1\", strength: 0.8 },\n      { source: \"persona1\", target: \"feature3\", strength: 0.7 },\n      { source: \"persona1\", target: \"feature7\", strength: 0.9 },\n      { source: \"persona2\", target: \"feature2\", strength: 0.7 },\n      { source: \"persona2\", target: \"feature5\", strength: 0.8 },\n      { source: \"persona3\", target: \"feature1\", strength: 0.6 },\n      { source: \"persona3\", target: \"feature4\", strength: 0.8 },\n      { source: \"persona4\", target: \"feature6\", strength: 0.9 }\n    ]\n  };\n  \n  const [graphData, setGraphData] = useState(initialData);\n  \n  // Add this at the component level (outside any useEffect)\n  const zoomRef = useRef(null);\n  \n  // Add these refs at the component level, near your other refs\n  const miniMapSizeRef = useRef(0);\n  const miniMapScaleRef = useRef(0);\n  \n  useEffect(() => {\n    // Simulate loading data\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, []);\n  \n  const exportData = () => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n    \n    const exportFileDefaultName = 'feedback-insights-data.json';\n    \n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  \n  const importData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate the data structure\n        if (importedData.nodes && importedData.links) {\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain 'nodes' and 'links' arrays.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const importSimplifiedData = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        \n        // Check if it has the simplified format\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          setLoading(true);\n          setFeedbackItems(importedData.feedback);\n          \n          // Process with AI instead of the simple grouping\n          await processFeedbackBatch(importedData.feedback);\n          \n          setLoading(false);\n        } else if (importedData.nodes && importedData.links) {\n          // Handle the original format\n          setGraphData(importedData);\n        } else {\n          setError(\"Invalid data format. The file must contain either 'nodes' and 'links' arrays or a 'feedback' array.\");\n        }\n      } catch (err) {\n        setError(\"Error parsing the file. Please make sure it's a valid JSON file.\");\n        setLoading(false);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width) return;\n    \n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    \n    const g = svg.append(\"g\");\n    \n    // Create a zoom behavior and store it in the ref\n    const zoom = d3.zoom()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n        \n        // Update the mini-map viewport to show the current view\n        if (showMiniMap) {\n          const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n          const viewportRect = svg.select(\".mini-map-viewport\");\n          \n          if (!viewportRect.empty()) {\n            const { x, y, k } = event.transform;\n            \n            // Calculate the viewport rectangle in the mini-map\n            const vpWidth = miniMapSize / k;\n            const vpHeight = miniMapSize / k;\n            const vpX = (-x / dimensions.width) * miniMapSize;\n            const vpY = (-y / dimensions.height) * miniMapSize;\n            \n            // Update the viewport rectangle\n            viewportRect\n              .attr(\"x\", Math.max(0, vpX))\n              .attr(\"y\", Math.max(0, vpY))\n              .attr(\"width\", Math.min(miniMapSize, vpWidth))\n              .attr(\"height\", Math.min(miniMapSize, vpHeight));\n          }\n        }\n      });\n    \n    // Store the zoom behavior in the ref\n    zoomRef.current = zoom;\n    \n    svg.call(zoom);\n    \n    // Create links\n    const link = g.selectAll(\".link\")\n      .data(graphData.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"stroke\", d => {\n        // Determine color based on the types of nodes being connected\n        const sourceType = graphData.nodes.find(n => n.id === d.source)?.type || \"theme\";\n        const targetType = graphData.nodes.find(n => n.id === d.target)?.type || \"theme\";\n        \n        if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n        if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n        if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n        if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n        \n        return \"#CBD5E0\"; // Default gray\n      })\n      .attr(\"stroke-width\", d => Math.max(1, d.strength * 5))\n      .attr(\"stroke-opacity\", 0.6);\n    \n    // Create node groups\n    const nodeGroup = g.selectAll(\".node\")\n      .data(graphData.nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n      )\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        setSelectedNode(d);\n        handleNodeClick(d);\n      });\n    \n    // Add circles to nodes\n    nodeGroup.append(\"circle\")\n      .attr(\"r\", d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      })\n      .attr(\"fill\", d => colorScale(d.type))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 0.8;\n        if (highlightMode === 'themes' && d.type === 'theme') return 0.9;\n        if (highlightMode === 'features' && d.type === 'feature') return 0.9;\n        if (highlightMode === 'personas' && d.type === 'persona') return 0.9;\n        return 0.3;\n      });\n    \n    // Add labels to nodes\n    nodeGroup.append(\"text\")\n      .text(d => d.name)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", d => {\n        if (d.type === \"theme\") return (20 + (d.feedbackCount / feedbackWeight)) + 15;\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22 + 15;\n          return 20 + 15;\n        }\n        return 22 + 15;\n      })\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#4A5568\")\n      .attr(\"opacity\", d => {\n        if (highlightMode === 'none') return 1;\n        if (highlightMode === 'themes' && d.type === 'theme') return 1;\n        if (highlightMode === 'features' && d.type === 'feature') return 1;\n        if (highlightMode === 'personas' && d.type === 'persona') return 1;\n        return 0.5;\n      });\n    \n    // Create a force simulation\n    const simulation = d3.forceSimulation(graphData.nodes)\n      .force(\"link\", d3.forceLink(graphData.links)\n        .id(d => d.id)\n        .distance(d => 150 / (d.strength || 0.5))\n      )\n      .force(\"charge\", d3.forceManyBody().strength(-300).distanceMax(500))\n      .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n      .force(\"collide\", d3.forceCollide().radius(d => {\n        if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n        if (d.type === \"feature\") {\n          if (d.priority === \"High\") return 22;\n          return 20;\n        }\n        return 22;\n      }).strength(0.8))\n      .force(\"x\", d3.forceX(dimensions.width / 2).strength(0.05))\n      .force(\"y\", d3.forceY(dimensions.height / 2).strength(0.05));\n    \n    // Add a boundary force to keep nodes within the visible area\n    simulation.force(\"boundary\", () => {\n      const padding = 50; // Padding from the edges\n      \n      graphData.nodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.x < padding) node.x = padding;\n        if (node.x > dimensions.width - padding) node.x = dimensions.width - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.y < padding) node.y = padding;\n        if (node.y > dimensions.height - padding) node.y = dimensions.height - padding;\n      });\n    });\n    \n    // Simulation tick function\n    let tick = 0;\n    simulation.on(\"tick\", () => {\n      tick++;\n      \n      // Every 30 ticks, add a small random force\n      if (tick % 30 === 0 && isSimulationRunning) {\n        graphData.nodes.forEach(node => {\n          node.vx = (node.vx || 0) + (Math.random() - 0.5) * 2;\n          node.vy = (node.vy || 0) + (Math.random() - 0.5) * 2;\n        });\n      }\n      \n      // Update positions\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n      \n      nodeGroup.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n    \n    // Create the mini-map if it's enabled\n    if (showMiniMap) {\n      createMiniMap();\n    }\n    \n    // Center the view after the simulation has started\n    setTimeout(() => {\n      centerView();\n    }, 100);\n    \n    // Fit all nodes to screen after the simulation has started\n    setTimeout(() => {\n      fitToScreen();\n    }, 300);\n    \n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, showMiniMap, isSimulationRunning, highlightMode]);\n\n  // Update graph dimensions when window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n      }\n    };\n    \n    window.addEventListener('resize', updateDimensions);\n    updateDimensions();\n    \n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  // Add this useEffect to adjust the container dimensions when the panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n      \n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Add this useEffect to recenter the view when the panel state changes\n  useEffect(() => {\n    // Wait a moment for the dimensions to update\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    \n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Create a new theme with custom name\n  const addTheme = () => {\n    setModalType('theme');\n    setNewNodeName(`Feedback Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n    setNewNodeFeedbackCount(10);\n    setShowModal(true);\n  };\n\n  // Create a new feature with custom name\n  const addFeature = () => {\n    setModalType('feature');\n    setNewNodeName(`Feature Idea ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n    setNewNodePriority('Medium');\n    setShowModal(true);\n  };\n\n  // Add a function to handle form submission\n  const handleModalSubmit = () => {\n    if (modalType === 'theme') {\n      const newId = `theme${graphData.nodes.filter(n => n.type === 'theme').length + 1}`;\n      const newTheme = {\n        id: newId,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newTheme],\n        links: graphData.links\n      });\n    } else if (modalType === 'feature') {\n      const newId = `feature${graphData.nodes.filter(n => n.type === 'feature').length + 1}`;\n      const newFeature = {\n        id: newId,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n      \n      setGraphData({\n        nodes: [...graphData.nodes, newFeature],\n        links: graphData.links\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  // Create a connection between nodes\n  const connectNodes = () => {\n    if (!selectedNode) return;\n    \n    // Find suitable target nodes to connect to (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.type !== selectedNode.type);\n    \n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    \n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id); // Default to first available target\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Reset the visualization\n  const resetVisualization = () => {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  };\n\n  // Handle node selection\n  const handleNodeSelection = () => {\n    if (selectedNode) {\n      setSelectedNode(null);\n    } else {\n      // Select a random node if none is selected\n      const randomIndex = Math.floor(Math.random() * graphData.nodes.length);\n      setSelectedNode(graphData.nodes[randomIndex]);\n    }\n  };\n\n  // Handle connection modal submission\n  const handleConnectionSubmit = () => {\n    const newLinks = [];\n    \n    // If single connection mode\n    if (!multipleConnections.length) {\n      // Check if connection already exists\n      const existingConnection = graphData.links.find(\n        l => (l.source.id === connectionSource.id && l.target === connectionTarget) ||\n             (l.source === connectionTarget && l.target.id === connectionSource.id)\n      );\n      \n      if (!existingConnection) {\n        newLinks.push({\n          source: connectionSource.id,\n          target: connectionTarget,\n          strength: connectionStrength\n        });\n      }\n    } else {\n      // Multiple connections mode\n      multipleConnections.forEach(targetId => {\n        const existingConnection = graphData.links.find(\n          l => (l.source.id === connectionSource.id && l.target === targetId) ||\n               (l.source === targetId && l.target.id === connectionSource.id)\n        );\n        \n        if (!existingConnection) {\n          newLinks.push({\n            source: connectionSource.id,\n            target: targetId,\n            strength: connectionStrength\n          });\n        }\n      });\n    }\n    \n    if (newLinks.length > 0) {\n      setGraphData({\n        nodes: graphData.nodes,\n        links: [...graphData.links, ...newLinks]\n      });\n    }\n    \n    setShowConnectionModal(false);\n    setMultipleConnections([]);\n  };\n\n  const suggestConnections = () => {\n    if (!selectedNode) return;\n    \n    // Find nodes of the same type that have similar connections\n    const sameTypeNodes = graphData.nodes.filter(n => \n      n.id !== selectedNode.id && n.type === selectedNode.type\n    );\n    \n    // Get current connections of the selected node\n    const currentConnections = graphData.links\n      .filter(l => l.source.id === selectedNode.id || l.source === selectedNode.id \n              || l.target.id === selectedNode.id || l.target === selectedNode.id)\n      .map(l => {\n        const targetId = l.source.id === selectedNode.id || l.source === selectedNode.id \n          ? (l.target.id || l.target) \n          : (l.source.id || l.source);\n        return targetId;\n      });\n    \n    // Find potential new connections based on what similar nodes are connected to\n    const potentialConnections = [];\n    \n    sameTypeNodes.forEach(similarNode => {\n      // Find connections of this similar node\n      graphData.links\n        .filter(l => l.source.id === similarNode.id || l.source === similarNode.id \n                || l.target.id === similarNode.id || l.target === similarNode.id)\n        .forEach(l => {\n          const targetId = l.source.id === similarNode.id || l.source === similarNode.id \n            ? (l.target.id || l.target) \n            : (l.source.id || l.source);\n          \n          // If this is a new potential connection\n          if (!currentConnections.includes(targetId)) {\n            const targetNode = graphData.nodes.find(n => n.id === targetId);\n            if (targetNode && targetNode.type !== selectedNode.type) {\n              potentialConnections.push(targetNode);\n            }\n          }\n        });\n    });\n    \n    // Remove duplicates\n    const uniquePotentials = Array.from(new Set(potentialConnections.map(n => n.id)))\n      .map(id => potentialConnections.find(n => n.id === id));\n    \n    if (uniquePotentials.length === 0) {\n      alert(\"No suggested connections found.\");\n      return;\n    }\n    \n    // Set up the connection modal with suggested connections\n    setConnectionSource(selectedNode);\n    setAvailableTargets(uniquePotentials);\n    setConnectionTarget(uniquePotentials[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  };\n\n  // Add these functions after your other functions but before the return statement\n  const zoomIn = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k * 1.3)\n      );\n  };\n\n  const zoomOut = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    \n    svg.transition()\n      .duration(300)\n      .call(\n        zoomRef.current.transform,\n        d3.zoomIdentity\n          .translate(currentTransform.x, currentTransform.y)\n          .scale(currentTransform.k / 1.3)\n      );\n  };\n\n  // Update the centerView function\n  const centerView = () => {\n    if (!svgRef.current || !zoomRef.current) return;\n    \n    // If we have nodes, use fitToScreen for better results\n    if (graphData.nodes.length > 0) {\n      fitToScreen();\n      return;\n    }\n    \n    // Fallback to simple centering if no nodes\n    const svg = d3.select(svgRef.current);\n    \n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n    \n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity\n      .translate(centerX, centerY)\n      .scale(1)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add these functions to your component before the return statement\n\n  // Function to initiate a connection from a selected node\n  const initiateConnection = (sourceNode) => {\n    setConnectionSource(sourceNode);\n    \n    // Filter available targets based on the source node type\n    let targets = [];\n    if (sourceNode.type === \"theme\") {\n      // Themes can connect to features and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"feature\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"feature\") {\n      // Features can connect to themes and personas\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"persona\") && \n        node.id !== sourceNode.id\n      );\n    } else if (sourceNode.type === \"persona\") {\n      // Personas can connect to themes and features\n      targets = graphData.nodes.filter(node => \n        (node.type === \"theme\" || node.type === \"feature\") && \n        node.id !== sourceNode.id\n      );\n    }\n    \n    setAvailableTargets(targets);\n    setShowConnectionModal(true);\n  };\n\n  // Function to handle search result clicks\n  const handleSearchResultClick = (node) => {\n    setSelectedNode(node);\n    setShowSearchResults(false);\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to recalculate all feedback counts\n  const recalculateFeedbackCounts = () => {\n    // Create a map to count feedback by theme and persona\n    const themeCounts = {};\n    const personaCounts = {};\n    \n    // Count feedback for each theme and persona\n    feedbackItems.forEach(item => {\n      // Count by persona (user_role)\n      if (item.user_role) {\n        personaCounts[item.user_role] = (personaCounts[item.user_role] || 0) + 1;\n      }\n      \n      // Try to find theme classification for this feedback\n      let theme = null;\n      if (aiInsights && aiInsights.results) {\n        const existingInsight = aiInsights.results.find(result => \n          feedbackItems[result.feedbackIndex] && \n          feedbackItems[result.feedbackIndex].id === item.id\n        );\n        \n        if (existingInsight) {\n          theme = existingInsight.theme;\n        }\n      }\n      \n      // If we found a theme, count it\n      if (theme) {\n        themeCounts[theme] = (themeCounts[theme] || 0) + 1;\n      }\n      \n      // Also check if the feedback text contains any theme names\n      graphData.nodes.forEach(node => {\n        if (node.type === \"theme\" && item.text.toLowerCase().includes(node.name.toLowerCase())) {\n          themeCounts[node.name] = (themeCounts[node.name] || 0) + 1;\n        }\n      });\n    });\n    \n    console.log(\"Persona counts:\", personaCounts); // Debug log\n    \n    // Update the graph nodes with the new counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && themeCounts[node.name]) {\n        return {\n          ...node,\n          feedbackCount: themeCounts[node.name]\n        };\n      }\n      \n      if (node.type === \"persona\" && personaCounts[node.name]) {\n        console.log(`Updating persona ${node.name} with count ${personaCounts[node.name]}`); // Debug log\n        return {\n          ...node,\n          feedbackCount: personaCounts[node.name]\n        };\n      }\n      \n      // For feature nodes, calculate based on connected themes\n      if (node.type === \"feature\") {\n        const connectedThemeIds = graphData.links\n          .filter(link => (link.source.id === node.id || link.target.id === node.id))\n          .map(link => {\n            const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n            return connectedNodeId;\n          });\n        \n        const connectedThemes = graphData.nodes.filter(n => \n          n.type === \"theme\" && connectedThemeIds.includes(n.id)\n        );\n        \n        const totalFeedbackCount = connectedThemes.reduce((sum, theme) => \n          sum + (themeCounts[theme.name] || 0), 0\n        );\n        \n        return {\n          ...node,\n          feedbackCount: totalFeedbackCount\n        };\n      }\n      \n      return node;\n    });\n    \n    setGraphData({\n      ...graphData,\n      nodes: updatedNodes\n    });\n  };\n\n  // Add this useEffect to recalculate feedback counts when feedbackItems change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Add this function to toggle panel collapse state\n  const togglePanelCollapse = () => {\n    setIsPanelCollapsed(!isPanelCollapsed);\n  };\n\n  // Add this function to fit all nodes within the visible area\n  const fitToScreen = () => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Find the bounds of all nodes\n    let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n    \n    graphData.nodes.forEach(node => {\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n    \n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n    \n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n    \n    // Calculate scale to fit the content\n    const scale = Math.min(\n      dimensions.width / contentWidth,\n      dimensions.height / contentHeight,\n      2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n    \n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n    \n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(scale)\n      .translate(-centerX, -centerY);\n    \n    // Apply the transform with a smooth transition\n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to process feedback with AI\n  const processFeedbackBatch = async (feedbackItems) => {\n    try {\n      setIsAIProcessing(true);\n      setAIError(null);\n      \n      // Get existing themes from the graph\n      const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n      \n      // Mock AI classification for now\n      const classificationResult = await mockClassifyFeedback(feedbackItems, existingThemes);\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, feedbackItems);\n      \n      setIsAIProcessing(false);\n      return classificationResult;\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n      throw error;\n    }\n  };\n\n  // Add this function to handle node clicks\n  const handleNodeClick = (node) => {\n    setSelectedNode(node);\n    \n    // If it's a theme node, show related feedback insights\n    if (node.type === \"theme\") {\n      // Find all feedback related to this theme\n      const relatedFeedback = feedbackItems.filter(item => {\n        // This is a simplified check - in a real app, you'd have a more robust way to link feedback to themes\n        return item.text.toLowerCase().includes(node.name.toLowerCase());\n      });\n      \n      // Find all connections to this theme\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Create insights object\n      const themeInsights = {\n        theme: node.name,\n        feedbackCount: node.feedbackCount || relatedFeedback.length,\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        connectedPersonas: connectedNodes.filter(n => n.type === \"persona\"),\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme: node.name,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(themeInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a persona node, show related feedback from this persona\n    if (node.type === \"persona\") {\n      // Find all feedback from this persona\n      const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n      \n      // Find all connections to this persona\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      // Get connected nodes\n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      // Calculate actual feedback count - use the node's count if available, otherwise use personaFeedback length\n      const actualFeedbackCount = node.feedbackCount || personaFeedback.length;\n      \n      // Group feedback by theme\n      const feedbackByTheme = {};\n      \n      personaFeedback.forEach(item => {\n        let theme = \"General Feedback\";\n        \n        // Try to find theme classification for this feedback\n        if (aiInsights && aiInsights.results) {\n          const existingInsight = aiInsights.results.find(result => \n            feedbackItems[result.feedbackIndex] && \n            feedbackItems[result.feedbackIndex].id === item.id\n          );\n          \n          if (existingInsight) {\n            theme = existingInsight.theme;\n          }\n        }\n        \n        if (!feedbackByTheme[theme]) {\n          feedbackByTheme[theme] = [];\n        }\n        \n        feedbackByTheme[theme].push(item);\n      });\n      \n      // Create insights object for this persona\n      const personaInsights = {\n        persona: node.name,\n        feedbackCount: actualFeedbackCount > 0 ? actualFeedbackCount : personaFeedback.length,\n        connectedThemes: connectedNodes.filter(n => n.type === \"theme\"),\n        connectedFeatures: connectedNodes.filter(n => n.type === \"feature\"),\n        themeBreakdown: Object.keys(feedbackByTheme).map(theme => ({\n          theme,\n          count: feedbackByTheme[theme].length\n        })),\n        results: personaFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(personaInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // If it's a feature node, show related themes and personas\n    if (node.type === \"feature\") {\n      // Find connected themes and personas\n      const connections = graphData.links.filter(link => \n        (link.source.id === node.id || link.target.id === node.id)\n      );\n      \n      const connectedNodes = connections.map(link => {\n        const connectedNodeId = link.source.id === node.id ? link.target.id : link.source.id;\n        const connectedNode = graphData.nodes.find(n => n.id === connectedNodeId);\n        return {\n          ...connectedNode,\n          connectionStrength: link.strength\n        };\n      });\n      \n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      \n      // Get related feedback through connected themes\n      const relatedFeedback = [];\n      connectedThemes.forEach(theme => {\n        const themeFeedback = feedbackItems.filter(item => \n          item.text.toLowerCase().includes(theme.name.toLowerCase())\n        );\n        relatedFeedback.push(...themeFeedback);\n      });\n      \n      const featureInsights = {\n        feature: node.name,\n        priority: node.priority || \"Medium\",\n        description: node.description || `Feature addressing user needs related to ${connectedThemes.map(t => t.name).join(\", \")}`,\n        // Calculate feedback count from related feedback and connected themes\n        feedbackCount: relatedFeedback.length + connectedThemes.reduce((sum, theme) => sum + (theme.feedbackCount || 0), 0),\n        connectedThemes,\n        connectedPersonas,\n        isFeatureView: true,\n        results: relatedFeedback.map((item, index) => {\n          // Try to find existing classification for this feedback\n          let sentiment = \"neutral\";\n          let priority = 5;\n          let theme = connectedThemes.length > 0 ? connectedThemes[0].name : \"General Feedback\";\n          let keywords = item.text.split(' ')\n            .filter(word => word.length > 3)\n            .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n            .slice(0, 3);\n          \n          return {\n            feedbackIndex: index,\n            theme,\n            text: item.text,\n            user_role: item.user_role,\n            sentiment,\n            priority,\n            keywords\n          };\n        })\n      };\n      \n      setAIInsights(featureInsights);\n      setShowAIInsightsPanel(true);\n    }\n    \n    // Focus on the selected node\n    if (node && node.x && node.y && zoomRef.current) {\n      const svg = d3.select(svgRef.current);\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1.5)\n        .translate(-node.x, -node.y);\n      \n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    }\n  };\n\n  // Add this function to focus on a specific node\n  const focusOnNode = (node) => {\n    if (!node || !node.x || !node.y || !zoomRef.current || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    const transform = d3.zoomIdentity\n      .translate(dimensions.width / 2, dimensions.height / 2)\n      .scale(1.5)\n      .translate(-node.x, -node.y);\n    \n    svg.transition()\n      .duration(750)\n      .call(zoomRef.current.transform, transform);\n  };\n\n  // Add this function to handle feedback submission\n  const handleFeedbackSubmit = async () => {\n    if (!newFeedback.trim() || !newFeedbackRole.trim()) {\n      alert(\"Please provide both feedback text and user role\");\n      return;\n    }\n    \n    const newItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n    \n    setIsAIProcessing(true);\n    setAIError(null);\n    \n    // Get existing themes from the graph\n    const existingThemes = graphData.nodes.filter(node => node.type === \"theme\");\n    \n    const updatedFeedbackItems = [...feedbackItems, newItem];\n    setFeedbackItems(updatedFeedbackItems);\n    \n    try {\n      // Classify the new feedback\n      const classificationResult = await mockClassifyFeedback([newItem], existingThemes);\n      console.log(\"Classification result:\", classificationResult); // Debug log\n      \n      // Update the theme's feedback count\n      const updatedNodes = graphData.nodes.map(node => {\n        if (node.type === \"theme\" && classificationResult.results.some(result => result.theme === node.name)) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        // Also update persona feedback count\n        if (node.type === \"persona\" && node.name === newItem.user_role) {\n          return {\n            ...node,\n            feedbackCount: (node.feedbackCount || 0) + 1\n          };\n        }\n        \n        return node;\n      });\n      \n      // Update the graph with the updated nodes\n      setGraphData({\n        ...graphData,\n        nodes: updatedNodes\n      });\n      \n      // Update the graph based on classification\n      updateGraphWithClassification(classificationResult, [newItem]);\n      \n      // Explicitly set the insights and show the panel\n      setAIInsights(classificationResult);\n      setShowAIInsightsPanel(true);\n      \n      setIsAIProcessing(false);\n      setShowFeedbackModal(false);\n      setNewFeedback('');\n      setNewFeedbackRole('');\n    } catch (error) {\n      console.error(\"Error processing feedback with AI:\", error);\n      setAIError(\"Failed to process feedback with AI. Please try again.\");\n      setIsAIProcessing(false);\n    }\n  };\n\n  // Add this mock function for AI classification\n  const mockClassifyFeedback = async (feedbackItems, existingThemes) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Simple mock classification logic\n    const results = feedbackItems.map((item, index) => {\n      // Determine theme based on keywords in the text\n      let theme = \"General Feedback\";\n      let sentiment = Math.random() > 0.5 ? \"positive\" : \"negative\";\n      let priority = Math.floor(Math.random() * 10) + 1;\n      \n      // Check if the feedback text contains any existing theme names\n      existingThemes.forEach(themeNode => {\n        if (item.text.toLowerCase().includes(themeNode.name.toLowerCase())) {\n          theme = themeNode.name;\n        }\n      });\n      \n      // Extract simple keywords\n      const keywords = item.text.split(' ')\n        .filter(word => word.length > 3)\n        .map(word => word.toLowerCase().replace(/[^a-z0-9]/g, ''))\n        .slice(0, 3);\n      \n      return {\n        feedbackIndex: index,\n        theme,\n        sentiment,\n        priority,\n        keywords\n      };\n    });\n    \n    return {\n      results,\n      newThemes: []\n    };\n  };\n\n  // Add this function to update the graph with classification results\n  const updateGraphWithClassification = (classificationResult, feedbackItems) => {\n    if (!classificationResult || !classificationResult.results) return;\n    \n    // Create a copy of the current graph data\n    const updatedGraphData = { ...graphData };\n    \n    // Process each feedback item's classification\n    classificationResult.results.forEach((result, index) => {\n      const feedback = feedbackItems[result.feedbackIndex];\n      if (!feedback) return;\n      \n      // Find or create the theme node\n      let themeNode = updatedGraphData.nodes.find(node => \n        node.type === \"theme\" && node.name === result.theme\n      );\n      \n      if (!themeNode) {\n        // Create a new theme node\n        themeNode = {\n          id: `theme-${Date.now()}-${index}`,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(themeNode);\n      } else {\n        // Update existing theme node's feedback count\n        themeNode.feedbackCount = (themeNode.feedbackCount || 0) + 1;\n      }\n      \n      // Find or create the persona node\n      let personaNode = updatedGraphData.nodes.find(node => \n        node.type === \"persona\" && node.name === feedback.user_role\n      );\n      \n      if (!personaNode) {\n        // Create a new persona node\n        personaNode = {\n          id: `persona-${Date.now()}-${index}`,\n          name: feedback.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        updatedGraphData.nodes.push(personaNode);\n      } else {\n        // Update existing persona node's feedback count\n        personaNode.feedbackCount = (personaNode.feedbackCount || 0) + 1;\n      }\n      \n      // Create a link between the theme and persona if it doesn't exist\n      const existingLink = updatedGraphData.links.find(link => \n        (link.source === themeNode.id && link.target === personaNode.id) ||\n        (link.source === personaNode.id && link.target === themeNode.id)\n      );\n      \n      if (!existingLink) {\n        updatedGraphData.links.push({\n          source: themeNode.id,\n          target: personaNode.id,\n          strength: 0.5\n        });\n      }\n    });\n    \n    // Update the graph data\n    setGraphData(updatedGraphData);\n  };\n\n  // Replace the createMiniMap function with this improved version\n  const createMiniMap = () => {\n    if (!showMiniMap || !svgRef.current) return;\n    \n    const svg = d3.select(svgRef.current);\n    \n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n    \n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.2;\n    const miniMapMargin = 10;\n    \n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\")\n      .attr(\"class\", \"mini-map-container\")\n      .attr(\"transform\", `translate(${dimensions.width - miniMapSize - miniMapMargin}, ${dimensions.height - miniMapSize - miniMapMargin})`);\n    \n    // Add a background rectangle\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"#f0f4f8\")\n      .attr(\"stroke\", \"#cbd5e0\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"rx\", 4);\n    \n    // Create a separate mini-map simulation that's independent of the main simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      // Create new x and y properties for the mini-map\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    \n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n      .force(\"charge\", d3.forceManyBody().strength(-10))\n      .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n      .force(\"collide\", d3.forceCollide().radius(3))\n      .force(\"x\", d3.forceX(miniMapSize / 2).strength(0.1))\n      .force(\"y\", d3.forceY(miniMapSize / 2).strength(0.1));\n    \n    // Add a boundary force to keep mini-map nodes within the mini-map\n    miniMapSimulation.force(\"boundary\", () => {\n      const padding = 3; // Padding from the edges\n      \n      miniMapNodes.forEach(node => {\n        // Keep nodes within horizontal bounds\n        if (node.miniX < padding) node.miniX = padding;\n        if (node.miniX > miniMapSize - padding) node.miniX = miniMapSize - padding;\n        \n        // Keep nodes within vertical bounds\n        if (node.miniY < padding) node.miniY = padding;\n        if (node.miniY > miniMapSize - padding) node.miniY = miniMapSize - padding;\n      });\n    });\n    \n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n      .data(miniMapNodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"mini-node\")\n      .attr(\"r\", 2)\n      .attr(\"fill\", d => colorScale(d.type));\n    \n    // Add a label\n    miniMapContainer.append(\"text\")\n      .attr(\"x\", 5)\n      .attr(\"y\", 12)\n      .attr(\"font-size\", \"10px\")\n      .attr(\"fill\", \"#4a5568\")\n      .text(\"Mini-Map\");\n    \n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\")\n      .attr(\"class\", \"mini-map-viewport\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#3182ce\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke-dasharray\", \"3,3\");\n    \n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 100; i++) {\n      miniMapSimulation.tick();\n    }\n    \n    // Update the mini-map nodes with their final positions\n    miniNodes\n      .attr(\"cx\", d => d.miniX)\n      .attr(\"cy\", d => d.miniY);\n    \n    // Add click handler to the mini-map to allow navigation\n    miniMapContainer.append(\"rect\")\n      .attr(\"width\", miniMapSize)\n      .attr(\"height\", miniMapSize)\n      .attr(\"fill\", \"transparent\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event) => {\n        if (!zoomRef.current) return;\n        \n        // Get click position relative to mini-map\n        const [x, y] = d3.pointer(event);\n        \n        // Calculate the center point in the main view\n        const centerX = (x / miniMapSize) * dimensions.width;\n        const centerY = (y / miniMapSize) * dimensions.height;\n        \n        // Create a transform that centers on the clicked point\n        const transform = d3.zoomIdentity\n          .translate(dimensions.width / 2, dimensions.height / 2)\n          .scale(1)\n          .translate(-centerX, -centerY);\n        \n        // Apply the transform with a smooth transition\n        svg.transition()\n          .duration(750)\n          .call(zoomRef.current.transform, transform);\n      });\n    \n    // Store the mini-map simulation for later reference\n    return miniMapSimulation;\n  };\n\n  // Add this function to toggle the mini-map\n  const toggleMiniMap = () => {\n    const newShowMiniMap = !showMiniMap;\n    setShowMiniMap(newShowMiniMap);\n    \n    if (newShowMiniMap) {\n      // Create the mini-map with a slight delay to ensure state is updated\n      setTimeout(() => {\n        createMiniMap();\n      }, 50);\n    } else {\n      // Remove the mini-map\n      if (svgRef.current) {\n        d3.select(svgRef.current).selectAll(\".mini-map-container\").remove();\n      }\n    }\n  };\n\n  // Replace the loading section with this code\n  if (loading) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n        <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n        <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n        <div className=\"text-gray-600\">{error}</div>\n        <button \n          className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          onClick={() => window.location.reload()}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"bg-white p-4 shadow-md\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n            <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative w-64\">\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                if (e.target.value.length >= 2) {\n                  const results = graphData.nodes.filter(node => \n                    node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                  );\n                  setSearchResults(results);\n                  setShowSearchResults(true);\n                } else {\n                  setShowSearchResults(false);\n                  setSearchResults([]);\n                }\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {showSearchResults && searchResults.length > 0 && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n                {searchResults.map((result, index) => (\n                  <div \n                    key={index}\n                    className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                    onClick={() => {\n                      setSelectedNode(result);\n                      handleNodeClick(result);\n                      setShowSearchResults(false);\n                    }}\n                  >\n                    <div className=\"flex items-center\">\n                      <div \n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: colorScale(result.type) }}\n                      ></div>\n                      <span>{result.name}</span>\n                      <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Controls */}\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Data:</span>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={exportData}\n            >\n              Export\n            </button>\n            <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n              Import\n              <input \n                type=\"file\" \n                accept=\".json\" \n                className=\"hidden\" \n                onChange={importData}\n              />\n            </label>\n            <button \n              className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n              onClick={() => {\n                if (window.confirm(\"Are you sure you want to reset the graph? This will remove all custom nodes and connections.\")) {\n                  setGraphData(initialData);\n                }\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">View:</span>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n            >\n              {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={centerView}\n            >\n              Center View\n            </button>\n            <button \n              className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n              onClick={toggleMiniMap}\n            >\n              {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n            </button>\n            <button \n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              onClick={fitToScreen}\n              title=\"Fit all nodes to screen\"\n            >\n              Fit to Screen\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Add:</span>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('theme');\n                setShowModal(true);\n              }}\n            >\n              Add Theme\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => {\n                setModalType('feature');\n                setShowModal(true);\n              }}\n            >\n              Add Feature\n            </button>\n            <button \n              className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n              onClick={() => setShowFeedbackModal(true)}\n            >\n              Add Feedback\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Connect:</span>\n            <button \n              className={`px-3 py-1 rounded text-sm ${\n                selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n              }`}\n              onClick={() => {\n                if (selectedNode) {\n                  setConnectionSource(selectedNode);\n                  \n                  // Filter available targets based on the source node type\n                  let targets = [];\n                  if (selectedNode.type === \"theme\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"feature\" || node.type === \"persona\")\n                    );\n                  } else if (selectedNode.type === \"feature\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"theme\" || node.type === \"persona\")\n                    );\n                  } else if (selectedNode.type === \"persona\") {\n                    targets = graphData.nodes.filter(node => \n                      node.id !== selectedNode.id && \n                      (node.type === \"theme\" || node.type === \"feature\")\n                    );\n                  }\n                  \n                  setAvailableTargets(targets);\n                  setShowConnectionModal(true);\n                }\n              }}\n              disabled={!selectedNode}\n            >\n              Connect Nodes\n            </button>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n            <input \n              type=\"range\" \n              min=\"1\" \n              max=\"10\" \n              value={feedbackWeight}\n              onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n              className=\"w-32\"\n            />\n            <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">Highlight:</span>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('none')}\n            >\n              None\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('themes')}\n            >\n              Themes\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('features')}\n            >\n              Features\n            </button>\n            <button \n              className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n              onClick={() => setHighlightMode('personas')}\n            >\n              Personas\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div \n        className={`flex-1 bg-gray-50 p-4 transition-all duration-300`}\n        ref={containerRef}\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width={dimensions.width} \n          height={dimensions.height}\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          onClick={() => setSelectedNode(null)}\n        />\n      </div>\n      \n      {/* Add Node Modal */}\n      {showModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Name\n              </label>\n              <input \n                type=\"text\" \n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder={`Enter ${modalType} name`}\n              />\n            </div>\n            \n            {modalType === 'theme' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Feedback Count\n                </label>\n                <input \n                  type=\"number\" \n                  value={newNodeFeedbackCount}\n                  onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"0\"\n                />\n              </div>\n            )}\n            \n            {modalType === 'feature' && (\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                  Priority\n                </label>\n                <select \n                  value={newNodePriority}\n                  onChange={(e) => setNewNodePriority(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"Low\">Low</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                </select>\n              </div>\n            )}\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!newNodeName.trim()) {\n                    alert(\"Please enter a name\");\n                    return;\n                  }\n                  \n                  const newNode = {\n                    id: `${modalType}-${Date.now()}`,\n                    name: newNodeName,\n                    type: modalType,\n                    ...(modalType === 'theme' ? { feedbackCount: newNodeFeedbackCount } : {}),\n                    ...(modalType === 'feature' ? { priority: newNodePriority } : {})\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes, newNode],\n                    links: [...graphData.links]\n                  });\n                  \n                  setShowModal(false);\n                  setNewNodeName('');\n                  setNewNodeFeedbackCount(10);\n                  setNewNodePriority('Medium');\n                }}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Connection Modal */}\n      {showConnectionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Connect Nodes\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                From\n              </label>\n              <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n                {connectionSource?.name} ({connectionSource?.type})\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                To\n              </label>\n              <select \n                value={connectionTarget}\n                onChange={(e) => setConnectionTarget(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"\">Select a target node</option>\n                {availableTargets.map((target) => (\n                  <option key={target.id} value={target.id}>\n                    {target.name} ({target.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Connection Strength: {connectionStrength.toFixed(1)}\n              </label>\n              <input \n                type=\"range\" \n                min=\"0.1\" \n                max=\"1\" \n                step=\"0.1\"\n                value={connectionStrength}\n                onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={() => {\n                  if (!connectionTarget) {\n                    alert(\"Please select a target node\");\n                    return;\n                  }\n                  \n                  // Check if connection already exists\n                  const connectionExists = graphData.links.some(link => \n                    (link.source === connectionSource.id && link.target === connectionTarget) ||\n                    (link.source === connectionTarget && link.target === connectionSource.id)\n                  );\n                  \n                  if (connectionExists) {\n                    alert(\"This connection already exists\");\n                    return;\n                  }\n                  \n                  const newLink = {\n                    source: connectionSource.id,\n                    target: connectionTarget,\n                    strength: connectionStrength\n                  };\n                  \n                  setGraphData({\n                    nodes: [...graphData.nodes],\n                    links: [...graphData.links, newLink]\n                  });\n                  \n                  setShowConnectionModal(false);\n                  setConnectionSource(null);\n                  setConnectionTarget('');\n                  setConnectionStrength(0.5);\n                }}\n              >\n                Connect\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Add Feedback Modal */}\n      {showFeedbackModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              Add New Feedback\n            </h2>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Text\n              </label>\n              <textarea \n                value={newFeedback}\n                onChange={(e) => setNewFeedback(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Enter user feedback\"\n                rows={4}\n              />\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                User Role\n              </label>\n              <input \n                type=\"text\" \n                value={newFeedbackRole}\n                onChange={(e) => setNewFeedbackRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"e.g. Mobile User, Admin, Power User\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end space-x-2\">\n              <button \n                className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n                onClick={() => {\n                  setShowFeedbackModal(false);\n                  setNewFeedback('');\n                  setNewFeedbackRole('');\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                onClick={handleFeedbackSubmit}\n                disabled={isAIProcessing}\n              >\n                {isAIProcessing ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Processing...\n                  </div>\n                ) : 'Submit'}\n              </button>\n            </div>\n            \n            {aiError && (\n              <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n                {aiError}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%' // Limit maximum width to prevent excessive overlap\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={togglePanelCollapse}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Rest of theme view content */}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                      <div className=\"text-lg font-semibold text-right\">\n                        {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                         (aiInsights.results && aiInsights.results.length) || 0}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Rest of feature view content */}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Rest of persona view content */}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"flex justify-between mt-1 text-xs text-gray-500\">\n                        <span>{result.user_role}</span>\n                        <span>{result.theme}</span>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UserResearchNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}