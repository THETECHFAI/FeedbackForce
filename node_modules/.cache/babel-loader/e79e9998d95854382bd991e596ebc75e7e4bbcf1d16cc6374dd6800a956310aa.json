{"ast":null,"code":"var _jsxFileName = \"/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js\",\n  _s = $RefreshSig$();\n// Mock AI service for consistent behavior when testing\nconst mockClassifyFeedback = text => {\n  // Simple keyword-based classification as fallback\n  const lowerText = text.toLowerCase();\n  if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n    return {\n      theme: 'Stability Issues'\n    };\n  } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n    return {\n      theme: 'Performance'\n    };\n  } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n    return {\n      theme: 'Mobile Experience'\n    };\n  } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || lowerText.includes('layout') || lowerText.includes('look') || lowerText.includes('dark mode')) {\n    return {\n      theme: 'User Interface'\n    };\n  } else if (lowerText.includes('report') || lowerText.includes('dashboard') || lowerText.includes('visualization')) {\n    return {\n      theme: 'Reporting & Analytics'\n    };\n  } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf') || lowerText.includes('data')) {\n    return {\n      theme: 'Data Export & Import'\n    };\n  } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n    return {\n      theme: 'Search & Navigation'\n    };\n  } else if (lowerText.includes('permission') || lowerText.includes('security') || lowerText.includes('privacy')) {\n    return {\n      theme: 'Security & Permissions'\n    };\n  }\n  return {\n    theme: 'General Feedback'\n  };\n};\n\n// Mock feature ideas generation\nconst mockGenerateFeatureIdeas = (theme, feedbackTexts) => {\n  const ideas = [];\n  switch (theme) {\n    case 'Stability Issues':\n      ideas.push({\n        name: 'Crash Prevention & Recovery',\n        description: 'Implement robust error handling and automatic recovery mechanisms',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Error Reporting System',\n        description: 'Add detailed error logging and user-friendly error messages',\n        priority: 'Medium'\n      });\n      break;\n    case 'Performance':\n      ideas.push({\n        name: 'Performance Optimization',\n        description: 'Improve loading times and response speed across the application',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Resource Usage Monitoring',\n        description: 'Add tools to track and optimize resource consumption',\n        priority: 'Medium'\n      });\n      break;\n    case 'Mobile Experience':\n      ideas.push({\n        name: 'Responsive Design Overhaul',\n        description: 'Rebuild interface with mobile-first approach',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Mobile Feature Parity',\n        description: 'Ensure all critical features work on mobile devices',\n        priority: 'Medium'\n      });\n      break;\n    case 'User Interface':\n      ideas.push({\n        name: 'UI Modernization',\n        description: 'Update interface with contemporary design principles',\n        priority: 'Medium'\n      });\n      ideas.push({\n        name: 'Dark Mode Support',\n        description: 'Add light/dark theme options for all screens',\n        priority: 'Low'\n      });\n      break;\n    case 'Reporting & Analytics':\n      ideas.push({\n        name: 'Custom Report Builder',\n        description: 'Allow users to build and save custom report templates',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Advanced Visualization Options',\n        description: 'Add more chart types and data visualization tools',\n        priority: 'Medium'\n      });\n      break;\n    case 'Data Export & Import':\n      ideas.push({\n        name: 'Enhanced Export Options',\n        description: 'Support multiple export formats (Excel, PDF, CSV)',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Bulk Data Operations',\n        description: 'Improve handling of large datasets',\n        priority: 'Medium'\n      });\n      break;\n    case 'Search & Navigation':\n      ideas.push({\n        name: 'Advanced Search Capabilities',\n        description: 'Add filters, operators, and saved searches',\n        priority: 'Medium'\n      });\n      ideas.push({\n        name: 'Navigation Redesign',\n        description: 'Simplify menus and improve information architecture',\n        priority: 'Medium'\n      });\n      break;\n    case 'Security & Permissions':\n      ideas.push({\n        name: 'Granular Permission System',\n        description: 'Allow fine-grained control over user access',\n        priority: 'High'\n      });\n      ideas.push({\n        name: 'Security Enhancements',\n        description: 'Improve data encryption and privacy controls',\n        priority: 'High'\n      });\n      break;\n    default:\n      ideas.push({\n        name: 'User Experience Improvements',\n        description: 'General enhancements based on user feedback',\n        priority: 'Medium'\n      });\n  }\n  return ideas;\n}; // UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\n// Color scale for node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colorScale = d3.scaleOrdinal().domain([\"theme\", \"feature\", \"persona\"]).range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n// Initial data structure\nconst initialData = {\n  nodes: [{\n    id: \"theme1\",\n    name: \"Performance\",\n    type: \"theme\",\n    feedbackCount: 10\n  }, {\n    id: \"theme2\",\n    name: \"User Interface\",\n    type: \"theme\",\n    feedbackCount: 8\n  }, {\n    id: \"theme3\",\n    name: \"Mobile Experience\",\n    type: \"theme\",\n    feedbackCount: 6\n  }, {\n    id: \"persona1\",\n    name: \"Data Analyst\",\n    type: \"persona\"\n  }, {\n    id: \"persona2\",\n    name: \"Marketing Manager\",\n    type: \"persona\"\n  }, {\n    id: \"feature1\",\n    name: \"Performance Optimization\",\n    type: \"feature\",\n    priority: \"High\"\n  }],\n  links: [{\n    source: \"theme1\",\n    target: \"persona1\",\n    strength: 0.7\n  }, {\n    source: \"theme2\",\n    target: \"persona1\",\n    strength: 0.5\n  }, {\n    source: \"theme1\",\n    target: \"feature1\",\n    strength: 0.8\n  }, {\n    source: \"persona1\",\n    target: \"feature1\",\n    strength: 0.6\n  }]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n  _s();\n  // Refs\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const zoomRef = useRef(null);\n  const simulationRef = useRef(null);\n\n  // State\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [graphData, setGraphData] = useState(initialData);\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightMode, setHighlightMode] = useState('none');\n  const [feedbackWeight, setFeedbackWeight] = useState(5);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Modal states\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(''); // 'theme' or 'feature'\n  const [showConnectionModal, setShowConnectionModal] = useState(false);\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n  // Node form state\n  const [newNodeName, setNewNodeName] = useState('');\n  const [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\n  const [newNodePriority, setNewNodePriority] = useState('Medium');\n\n  // Connection state\n  const [connectionSource, setConnectionSource] = useState(null);\n  const [connectionTarget, setConnectionTarget] = useState('');\n  const [connectionStrength, setConnectionStrength] = useState(0.5);\n  const [availableTargets, setAvailableTargets] = useState([]);\n  const [multipleConnections, setMultipleConnections] = useState([]);\n\n  // Minimap state\n  const [showMiniMap, setShowMiniMap] = useState(true);\n\n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n\n  // AI state\n  const [isAIProcessing, setIsAIProcessing] = useState(false);\n  const [aiError, setAIError] = useState(null);\n  const [feedbackItems, setFeedbackItems] = useState([]);\n  const [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\n  const [aiInsights, setAIInsights] = useState(null);\n  const [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(320);\n\n  // New feedback state\n  const [newFeedback, setNewFeedback] = useState('');\n  const [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n  // Simulate loading data on initial render\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Update dimensions when window resizes\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n      }\n    };\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        setDimensions({\n          width,\n          height\n        });\n      }\n    });\n    resizeObserver.observe(containerRef.current);\n    updateDimensions();\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Adjust container dimensions when panel is open\n  useEffect(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const containerHeight = containerRef.current.clientHeight;\n\n      // Adjust dimensions based on panel state\n      if (showAIInsightsPanel && !isPanelCollapsed) {\n        // Reduce width to make room for the panel\n        setDimensions({\n          width: containerWidth - panelWidth,\n          height: containerHeight\n        });\n      } else {\n        // Use full width\n        setDimensions({\n          width: containerWidth,\n          height: containerHeight\n        });\n      }\n    }\n  }, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n  // Recenter view when panel state changes\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      centerView();\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [showAIInsightsPanel, isPanelCollapsed]);\n\n  // Recalculate feedback counts when feedback items change\n  useEffect(() => {\n    if (feedbackItems.length > 0) {\n      recalculateFeedbackCounts();\n    }\n  }, [feedbackItems]);\n\n  // Create a minimap when needed\n  useEffect(() => {\n    if (showMiniMap && svgRef.current && dimensions.width > 0) {\n      const cleanupMiniMap = createMiniMap();\n      return cleanupMiniMap;\n    }\n  }, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n  // Main visualization rendering effect\n  useEffect(() => {\n    if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n    console.log(\"Rendering with data:\", graphData);\n\n    // Clear the SVG\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    // Create a container group for all elements\n    const g = svg.append(\"g\");\n\n    // Set up zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    zoomRef.current = zoom;\n\n    // Verify we have valid data\n    if (!graphData.nodes || !graphData.links || !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) || graphData.nodes.length === 0) {\n      console.error(\"Invalid or empty graph data:\", graphData);\n      return;\n    }\n\n    // Create working copies of the data with proper link references\n    const nodes = graphData.nodes.map(node => ({\n      ...node\n    }));\n\n    // Normalize links to ensure proper format for D3\n    const normalizedLinks = graphData.links.map(link => {\n      // Extract source and target IDs consistently\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n      // Return a new link object with just IDs (D3 will convert to objects)\n      return {\n        source: sourceId,\n        target: targetId,\n        strength: link.strength || 0.5\n      };\n    });\n\n    // Verify all links have valid source and target nodes\n    const validLinks = normalizedLinks.filter(link => {\n      const sourceExists = nodes.some(node => node.id === link.source);\n      const targetExists = nodes.some(node => node.id === link.target);\n      if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n      if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n      return sourceExists && targetExists;\n    });\n    console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n\n    // Create the force simulation with strong link forces\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(validLinks).id(d => d.id).distance(100).strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(30));\n    simulationRef.current = simulation;\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    // Create the links\n    const link = g.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(validLinks).enter().append(\"line\").attr(\"stroke\", d => {\n      // Get the source and target nodes\n      const source = nodes.find(n => n.id === d.source);\n      const target = nodes.find(n => n.id === d.target);\n      if (!source || !target) return \"#999\";\n      const sourceType = source.type;\n      const targetType = target.type;\n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n\n      return \"#999\"; // Default gray\n    }).attr(\"stroke-opacity\", 0.6).attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n\n    // Create the nodes\n    const node = g.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(nodes).enter().append(\"g\").call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended)).on(\"click\", (event, d) => {\n      event.stopPropagation();\n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n\n    // Add circles to nodes\n    node.append(\"circle\").attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") return d.priority === \"High\" ? 22 : 20;\n      return 18;\n    }).attr(\"fill\", d => colorScale(d.type)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2);\n\n    // Add labels to nodes\n    node.append(\"text\").text(d => d.name).attr(\"x\", 0).attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + d.feedbackCount / feedbackWeight;\n      if (d.type === \"feature\") return d.priority === \"High\" ? 32 : 30;\n      return 28;\n    }).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#333\");\n\n    // Add title for hover effect\n    node.append(\"title\").text(d => d.name);\n\n    // Run a few ticks before adding listener to get nodes in better positions\n    for (let i = 0; i < 20; i++) {\n      simulation.tick();\n    }\n\n    // Update link positions immediately with node positions from simulation ticks\n    link.attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    }).attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    }).attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    }).attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n\n    // Now add the tick listener for ongoing updates\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      }).attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      }).attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      }).attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n      node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n    });\n\n    // Drag functions\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n\n      // Only release the node if it's not the selected node\n      if (!selectedNode || selectedNode.id !== d.id) {\n        d.fx = null;\n        d.fy = null;\n      }\n    }\n\n    // Center the view\n    svg.call(zoom.transform, d3.zoomIdentity.translate(dimensions.width / 2 - dimensions.width * 0.5, dimensions.height / 2 - dimensions.height * 0.5).scale(0.8));\n\n    // Clean up on unmount\n    return () => {\n      simulation.stop();\n    };\n  }, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n  // MiniMap implementation\n  const createMiniMap = useCallback(() => {\n    if (!svgRef.current) return () => {};\n    const svg = d3.select(svgRef.current);\n\n    // Remove any existing mini-map\n    svg.selectAll(\".mini-map-container\").remove();\n\n    // Calculate mini-map size based on the main SVG dimensions\n    const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n    const miniMapMargin = 20;\n\n    // Create a container for the mini-map\n    const miniMapContainer = svg.append(\"g\").attr(\"class\", \"mini-map-container\").attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n\n    // Add a background rectangle\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"#f0f4f8\").attr(\"fill-opacity\", 0.9).attr(\"stroke\", \"#3182CE\").attr(\"stroke-width\", 2).attr(\"rx\", 6);\n\n    // Create a separate mini-map simulation\n    const miniMapNodes = graphData.nodes.map(node => ({\n      ...node,\n      miniX: Math.random() * miniMapSize,\n      miniY: Math.random() * miniMapSize\n    }));\n    const miniMapLinks = graphData.links.map(link => ({\n      source: typeof link.source === 'object' ? link.source.id : link.source,\n      target: typeof link.target === 'object' ? link.target.id : link.target\n    }));\n\n    // Create a separate force simulation just for the mini-map\n    const miniMapSimulation = d3.forceSimulation(miniMapNodes).force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5)).force(\"charge\", d3.forceManyBody().strength(-20)).force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2)).force(\"collide\", d3.forceCollide().radius(4));\n\n    // Add mini-map links\n    miniMapContainer.selectAll(\".mini-link\").data(miniMapLinks).enter().append(\"line\").attr(\"class\", \"mini-link\").attr(\"stroke\", \"#ccc\").attr(\"stroke-width\", 0.5);\n\n    // Add mini-map nodes\n    const miniNodes = miniMapContainer.selectAll(\".mini-node\").data(miniMapNodes).enter().append(\"circle\").attr(\"class\", \"mini-node\").attr(\"r\", 3).attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    }).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 1);\n\n    // Add a label\n    miniMapContainer.append(\"text\").attr(\"x\", 10).attr(\"y\", 15).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"fill\", \"#2D3748\").text(\"Network Overview\");\n\n    // Add a border to show the current viewport\n    const viewportRect = miniMapContainer.append(\"rect\").attr(\"class\", \"mini-map-viewport\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"none\").attr(\"stroke\", \"#3182ce\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,4\");\n\n    // Run the mini-map simulation for a fixed number of ticks\n    miniMapSimulation.stop();\n    for (let i = 0; i < 300; i++) {\n      miniMapSimulation.tick();\n    }\n\n    // Update the mini-map nodes with their final positions\n    miniMapContainer.selectAll(\".mini-link\").attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    }).attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    }).attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    }).attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n    miniNodes.attr(\"cx\", d => d.miniX).attr(\"cy\", d => d.miniY);\n\n    // Add click behavior\n    miniMapContainer.append(\"rect\").attr(\"width\", miniMapSize).attr(\"height\", miniMapSize).attr(\"fill\", \"transparent\").attr(\"stroke\", \"none\").style(\"cursor\", \"pointer\").on(\"click\", event => {\n      if (!zoomRef.current) return;\n\n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n\n      // Calculate the center point in the main view\n      const centerX = x / miniMapSize * dimensions.width;\n      const centerY = y / miniMapSize * dimensions.height;\n\n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(1).translate(-centerX, -centerY);\n\n      // Apply the transform with a smooth transition\n      svg.transition().duration(750).call(zoomRef.current.transform, transform);\n    });\n\n    // Return cleanup function\n    return () => {\n      svg.selectAll(\".mini-map-container\").remove();\n      if (miniMapSimulation) miniMapSimulation.stop();\n    };\n  }, [dimensions, graphData]);\n\n  // Recalculate feedback counts based on graph connections\n  const recalculateFeedbackCounts = useCallback(() => {\n    // Create a map to track feedback counts\n    const feedbackCounts = {\n      themes: {},\n      personas: {},\n      features: {}\n    };\n\n    // Count feedback for each node type based on connections\n    graphData.links.forEach(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n      const targetNode = graphData.nodes.find(n => n.id === targetId);\n      if (!sourceNode || !targetNode) return;\n\n      // Count theme connections\n      if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n        feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n      }\n\n      // Count persona connections\n      if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n        feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n      } else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n        feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n      }\n    });\n\n    // Update node feedback counts\n    const updatedNodes = graphData.nodes.map(node => {\n      if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.themes[node.id]\n        };\n      }\n      if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n        return {\n          ...node,\n          feedbackCount: feedbackCounts.personas[node.id]\n        };\n      }\n      return node;\n    });\n\n    // Update the graph data\n    setGraphData(prevData => ({\n      ...prevData,\n      nodes: updatedNodes\n    }));\n  }, [graphData]);\n\n  // Import data from file with more robust processing\n  const importData = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Starting import from file:\", file.name);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const fileContent = e.target.result;\n        console.log(\"File content loaded, parsing JSON...\");\n        const importedData = JSON.parse(fileContent);\n        console.log(\"Successfully parsed JSON:\", importedData);\n\n        // Check if it's the simple feedback format (array of feedback items)\n        if (importedData.feedback && Array.isArray(importedData.feedback)) {\n          console.log(`Found feedback array with ${importedData.feedback.length} items`);\n\n          // Store the feedback items\n          setFeedbackItems(importedData.feedback);\n\n          // Process the feedback to create a graph\n          console.log(\"Transforming feedback to graph...\");\n          processImportedFeedback(importedData.feedback);\n        }\n        // Check if it's the direct graph format (nodes and links)\n        else if (importedData.nodes && importedData.links) {\n          console.log(`Found direct graph data: ${importedData.nodes.length} nodes, ${importedData.links.length} links`);\n\n          // Normalize the links and nodes\n          const validNodes = importedData.nodes.map(node => ({\n            id: node.id || `node-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n            name: node.name || 'Unnamed Node',\n            type: node.type || 'theme',\n            feedbackCount: node.feedbackCount || 0,\n            priority: node.priority || 'Medium',\n            ...node // preserve other properties\n          }));\n\n          // Create a map of node IDs for quick lookups\n          const nodeMap = {};\n          validNodes.forEach(node => {\n            nodeMap[node.id] = true;\n          });\n\n          // Normalize and validate links\n          const validLinks = importedData.links.map(link => {\n            // Extract source and target consistently\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n\n            // Validate source and target\n            if (!sourceId || !targetId) {\n              console.warn('Link missing source or target:', link);\n              return null;\n            }\n            return {\n              source: sourceId,\n              target: targetId,\n              strength: link.strength || 0.5\n            };\n          }).filter(link => link !== null && nodeMap[link.source] && nodeMap[link.target]);\n          console.log(`Validated ${validLinks.length} links out of ${importedData.links.length}`);\n\n          // Set the graph data\n          setGraphData({\n            nodes: validNodes,\n            links: validLinks\n          });\n          setLoading(false);\n        }\n        // Invalid format\n        else {\n          console.error(\"Unrecognized data format:\", Object.keys(importedData));\n          setError(\"Invalid data format. The file should contain either:\" + \"\\n1. A 'feedback' array with user feedback items, or\" + \"\\n2. 'nodes' and 'links' arrays for direct graph data\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error(\"Error parsing or processing the file:\", err);\n        setError(`Error importing file: ${err.message || \"Unknown error\"}`);\n        setLoading(false);\n      }\n    };\n    reader.onerror = err => {\n      console.error(\"FileReader error:\", err);\n      setError(\"Error reading the file. Please try again.\");\n      setLoading(false);\n    };\n    console.log(\"Starting file read...\");\n    reader.readAsText(file);\n  }, []);\n\n  // Process imported feedback with enhanced reliability\n  const processImportedFeedback = useCallback(feedbackItems => {\n    if (!feedbackItems || feedbackItems.length === 0) {\n      setLoading(false);\n      return;\n    }\n    console.log(`Processing ${feedbackItems.length} feedback items...`);\n    setIsAIProcessing(true);\n\n    // Create a new graph structure\n    const newGraph = {\n      nodes: [],\n      links: []\n    };\n\n    // Track created nodes to avoid duplicates\n    const nodeMap = {\n      personas: {},\n      themes: {},\n      features: {}\n    };\n\n    // Step 1: First create all persona nodes from feedback\n    console.log(\"Creating persona nodes...\");\n    feedbackItems.forEach(item => {\n      if (!item.user_role) return;\n      if (!nodeMap.personas[item.user_role]) {\n        const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n        const personaNode = {\n          id: personaId,\n          name: item.user_role,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        newGraph.nodes.push(personaNode);\n        nodeMap.personas[item.user_role] = personaNode;\n        console.log(`Created persona node: ${item.user_role}`);\n      } else {\n        // Increment feedback count for existing persona\n        nodeMap.personas[item.user_role].feedbackCount += 1;\n      }\n    });\n\n    // Step 2: Process each feedback to identify themes\n    // Use chunks to avoid overwhelming the system\n    console.log(\"Processing feedback to identify themes...\");\n    const processChunks = async () => {\n      const chunkSize = 5; // Process 5 at a time\n      const chunks = [];\n\n      // Split feedback into chunks\n      for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n        chunks.push(feedbackItems.slice(i, i + chunkSize));\n      }\n\n      // Process each chunk\n      for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        console.log(`Processing chunk ${i + 1} of ${chunks.length}...`);\n\n        // Process items in this chunk\n        for (const item of chunk) {\n          if (!item.text || !item.user_role) continue;\n          try {\n            // Attempt to use the AI classification service\n            console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n            let result;\n            try {\n              // Try AI service first\n              result = await classifyFeedback(item.text);\n              console.log(\"AI classification result:\", result);\n            } catch (aiError) {\n              // If AI fails, use fallback classification\n              console.warn(\"AI classification failed, using fallback:\", aiError);\n              result = mockClassifyFeedback(item.text);\n              console.log(\"Fallback classification result:\", result);\n            }\n            if (result && result.theme) {\n              // Create or update theme node\n              if (!nodeMap.themes[result.theme]) {\n                const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n                const themeNode = {\n                  id: themeId,\n                  name: result.theme,\n                  type: \"theme\",\n                  feedbackCount: 1\n                };\n                newGraph.nodes.push(themeNode);\n                nodeMap.themes[result.theme] = themeNode;\n                console.log(`Created theme node: ${result.theme}`);\n              } else {\n                // Increment existing theme's feedback count\n                nodeMap.themes[result.theme].feedbackCount += 1;\n              }\n\n              // Connect persona to theme\n              const personaNode = nodeMap.personas[item.user_role];\n              const themeNode = nodeMap.themes[result.theme];\n              if (personaNode && themeNode) {\n                // Check if link already exists\n                const linkExists = newGraph.links.some(link => link.source === personaNode.id && link.target === themeNode.id || link.source === themeNode.id && link.target === personaNode.id);\n                if (!linkExists) {\n                  newGraph.links.push({\n                    source: personaNode.id,\n                    target: themeNode.id,\n                    strength: 0.7\n                  });\n                  console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error processing feedback item:\", err);\n          }\n        }\n\n        // Update graph data every chunk to show progress\n        if (i < chunks.length - 1) {\n          setGraphData({\n            ...newGraph\n          });\n          // Small delay to allow UI to update\n          await new Promise(resolve => setTimeout(resolve, 100));\n        }\n      }\n\n      // Step 3: Generate feature suggestions for top themes\n      console.log(\"Generating feature suggestions...\");\n      const significantThemes = Object.values(nodeMap.themes).filter(theme => theme.feedbackCount >= 2).sort((a, b) => b.feedbackCount - a.feedbackCount).slice(0, 5); // Top 5 themes\n\n      console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n      for (const theme of significantThemes) {\n        try {\n          // Get feedback related to this theme\n          const relatedFeedback = feedbackItems.filter(item => {\n            const text = item.text.toLowerCase();\n            return text.includes(theme.name.toLowerCase());\n          }).map(item => item.text);\n\n          // Generate feature ideas\n          console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n          let featureIdeas;\n          try {\n            // Try AI service first\n            featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"AI generated feature ideas:\", featureIdeas);\n          } catch (aiError) {\n            // If AI fails, use mock generation\n            console.warn(\"AI feature generation failed, using fallback:\", aiError);\n            featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n            console.log(\"Fallback feature ideas:\", featureIdeas);\n          }\n          if (featureIdeas && featureIdeas.length > 0) {\n            // Create feature nodes\n            for (const idea of featureIdeas) {\n              const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n              const featureNode = {\n                id: featureId,\n                name: idea.name,\n                description: idea.description || \"\",\n                type: \"feature\",\n                priority: idea.priority || \"Medium\"\n              };\n              newGraph.nodes.push(featureNode);\n              nodeMap.features[featureNode.name] = featureNode;\n              console.log(`Created feature: ${featureNode.name}`);\n\n              // Link feature to theme\n              newGraph.links.push({\n                source: theme.id,\n                target: featureId,\n                strength: 0.8\n              });\n\n              // Find personas connected to this theme\n              newGraph.links.forEach(link => {\n                const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n                const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n                if (sourceId === theme.id || targetId === theme.id) {\n                  const personaId = sourceId === theme.id ? targetId : sourceId;\n                  const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                  if (personaNode) {\n                    // Link persona to feature\n                    const existingLink = newGraph.links.some(l => l.source === personaId && l.target === featureId || l.source === featureId && l.target === personaId);\n                    if (!existingLink) {\n                      newGraph.links.push({\n                        source: personaId,\n                        target: featureId,\n                        strength: 0.6\n                      });\n                      console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                    }\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          console.error(`Error generating features for theme \"${theme.name}\":`, err);\n        }\n      }\n\n      // Ensure we have at least some features if none were generated\n      if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n        console.log(\"No features were generated - creating fallback features\");\n\n        // Create a fallback feature for each major theme\n        for (const theme of significantThemes.slice(0, 3)) {\n          const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          const featureNode = {\n            id: featureId,\n            name: `${theme.name} Improvement`,\n            type: \"feature\",\n            priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n            fallback: true\n          };\n          newGraph.nodes.push(featureNode);\n          console.log(`Created fallback feature: ${featureNode.name}`);\n\n          // Link to theme\n          newGraph.links.push({\n            source: theme.id,\n            target: featureId,\n            strength: 0.8\n          });\n        }\n      }\n\n      // Final graph update\n      console.log(\"Finalizing graph...\");\n      console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n      console.log(\"Nodes by type:\", {\n        personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n        themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n        features: newGraph.nodes.filter(n => n.type === 'feature').length\n      });\n      setGraphData(newGraph);\n\n      // Pre-compute positions for better visualization\n      setTimeout(() => {\n        if (simulationRef.current) {\n          simulationRef.current.stop();\n\n          // Create a temporary simulation to calculate positions\n          const tempSimulation = d3.forceSimulation(newGraph.nodes).force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2)).force(\"collide\", d3.forceCollide(40));\n\n          // Run several ticks to get a good initial layout\n          for (let i = 0; i < 100; i++) {\n            tempSimulation.tick();\n          }\n          tempSimulation.stop();\n        }\n        setIsAIProcessing(false);\n        setLoading(false);\n        console.log(\"Import processing complete\");\n      }, 100);\n    };\n\n    // Start the processing\n    processChunks().catch(err => {\n      console.error(\"Error in processChunks:\", err);\n      setError(\"Error processing feedback. Please try again.\");\n      setIsAIProcessing(false);\n      setLoading(false);\n    });\n  }, [dimensions]);\n\n  // Add a new node (theme or feature)\n  const handleAddNode = useCallback(() => {\n    if (!newNodeName.trim()) {\n      alert(\"Please enter a node name\");\n      return;\n    }\n    let newNode;\n    if (modalType === 'theme') {\n      newNode = {\n        id: `theme-${Date.now()}`,\n        name: newNodeName,\n        type: \"theme\",\n        feedbackCount: newNodeFeedbackCount\n      };\n    } else if (modalType === 'feature') {\n      newNode = {\n        id: `feature-${Date.now()}`,\n        name: newNodeName,\n        type: \"feature\",\n        priority: newNodePriority\n      };\n    }\n    if (newNode) {\n      setGraphData(prevData => ({\n        nodes: [...prevData.nodes, newNode],\n        links: [...prevData.links]\n      }));\n      setShowModal(false);\n      setNewNodeName('');\n      setNewNodeFeedbackCount(10);\n      setNewNodePriority('Medium');\n    }\n  }, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n  // Handle node selection and display node details\n  const handleNodeClick = useCallback(node => {\n    if (!node) return;\n\n    // Find connected nodes\n    const connectedLinks = graphData.links.filter(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id || targetId === node.id;\n    });\n    const connectedNodeIds = connectedLinks.map(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === node.id ? targetId : sourceId;\n    });\n    const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n\n    // Prepare insights\n    let insights = {\n      results: []\n    };\n    if (node.type === \"theme\") {\n      // Theme view\n      insights.theme = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"feature\") {\n      // Feature view\n      insights.isFeatureView = true;\n      insights.name = node.name;\n      insights.priority = node.priority || \"Medium\";\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected personas\n      const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n      if (connectedPersonas.length > 0) {\n        insights.connectedPersonas = connectedPersonas;\n      }\n    } else if (node.type === \"persona\") {\n      // Persona view\n      insights.persona = node.name;\n      insights.feedbackCount = node.feedbackCount || 0;\n\n      // Connected themes\n      const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n      if (connectedThemes.length > 0) {\n        insights.connectedThemes = connectedThemes;\n      }\n\n      // Connected features\n      const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n      if (connectedFeatures.length > 0) {\n        insights.connectedFeatures = connectedFeatures;\n      }\n\n      // Find feedback from this persona\n      if (feedbackItems.length > 0) {\n        const personaFeedback = feedbackItems.filter(item => item.user_role === node.name);\n        if (personaFeedback.length > 0) {\n          insights.results = personaFeedback.map((item, index) => ({\n            feedbackIndex: index,\n            text: item.text,\n            user_role: item.user_role\n          }));\n        }\n      }\n    }\n\n    // Update insights and show panel\n    setAIInsights(insights);\n    setShowAIInsightsPanel(true);\n  }, [graphData, feedbackItems]);\n\n  // Create a connection between nodes\n  const handleConnectionSubmit = useCallback(() => {\n    if (!connectionSource || !connectionTarget) return;\n\n    // Check if connection already exists\n    const existingConnection = graphData.links.some(link => {\n      const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n      const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n      return sourceId === connectionSource.id && targetId === connectionTarget || sourceId === connectionTarget && targetId === connectionSource.id;\n    });\n    if (!existingConnection) {\n      const newLink = {\n        source: connectionSource.id,\n        target: connectionTarget,\n        strength: connectionStrength\n      };\n      setGraphData(prevData => ({\n        ...prevData,\n        links: [...prevData.links, newLink]\n      }));\n    }\n    setShowConnectionModal(false);\n    setConnectionSource(null);\n    setConnectionTarget('');\n    setConnectionStrength(0.5);\n  }, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n  // Initialize connection creation\n  const connectNodes = useCallback(() => {\n    if (!selectedNode) return;\n\n    // Find suitable targets (different type than selected node)\n    const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n    if (targets.length === 0) {\n      alert(\"No compatible nodes found to connect with.\");\n      return;\n    }\n    setConnectionSource(selectedNode);\n    setAvailableTargets(targets);\n    setConnectionTarget(targets[0].id);\n    setConnectionStrength(0.5);\n    setShowConnectionModal(true);\n  }, [selectedNode, graphData]);\n\n  // Export the current graph data\n  const exportData = useCallback(() => {\n    const dataStr = JSON.stringify(graphData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'feedback-insights-data.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }, [graphData]);\n\n  // Reset to initial data\n  const resetVisualization = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n      setGraphData(initialData);\n      setSelectedNode(null);\n      setHighlightMode('none');\n    }\n  }, []);\n\n  // Handle new feedback submission\n  const handleAddFeedback = useCallback(async () => {\n    if (!newFeedback || !newFeedbackRole) {\n      setError(\"Please provide both feedback text and user role\");\n      return;\n    }\n\n    // Create a new feedback item\n    const newFeedbackItem = {\n      id: `feedback-${Date.now()}`,\n      text: newFeedback,\n      user_role: newFeedbackRole,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add to feedback items\n    setFeedbackItems(prev => [...prev, newFeedbackItem]);\n\n    // Process with AI\n    setIsAIProcessing(true);\n    try {\n      const result = await classifyFeedback(newFeedback);\n      if (result && result.theme) {\n        // Process the feedback and update the graph\n\n        // Check if the persona exists\n        let personaNode = graphData.nodes.find(node => node.type === \"persona\" && node.name === newFeedbackRole);\n        if (!personaNode) {\n          // Create a new persona node\n          const personaId = `persona-${Date.now()}`;\n          personaNode = {\n            id: personaId,\n            name: newFeedbackRole,\n            type: \"persona\",\n            feedbackCount: 1\n          };\n\n          // Add persona to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, personaNode],\n            links: [...prev.links]\n          }));\n        } else {\n          // Update persona feedback count\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => node.id === personaNode.id ? {\n              ...node,\n              feedbackCount: (node.feedbackCount || 0) + 1\n            } : node),\n            links: [...prev.links]\n          }));\n        }\n\n        // Check if theme exists\n        let themeNode = graphData.nodes.find(node => node.type === \"theme\" && node.name === result.theme);\n        if (!themeNode) {\n          // Create a new theme node\n          const themeId = `theme-${Date.now()}`;\n          themeNode = {\n            id: themeId,\n            name: result.theme,\n            type: \"theme\",\n            feedbackCount: 1\n          };\n\n          // Add theme to graph\n          setGraphData(prev => ({\n            nodes: [...prev.nodes, themeNode],\n            links: [...prev.links,\n            // Add link between persona and theme\n            {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            }]\n          }));\n        } else {\n          // Update theme and check for link\n          const link = graphData.links.find(link => {\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            return sourceId === personaNode.id && targetId === themeNode.id || sourceId === themeNode.id && targetId === personaNode.id;\n          });\n          if (!link) {\n            // Create link if it doesn't exist\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links, {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              }]\n            }));\n          } else {\n            // Just update the theme\n            setGraphData(prev => ({\n              nodes: prev.nodes.map(node => node.id === themeNode.id ? {\n                ...node,\n                feedbackCount: (node.feedbackCount || 0) + 1\n              } : node),\n              links: [...prev.links]\n            }));\n          }\n        }\n      }\n\n      // Reset form\n      setNewFeedback('');\n      setNewFeedbackRole('');\n      setShowFeedbackModal(false);\n    } catch (error) {\n      console.error(\"Error processing feedback:\", error);\n      setAIError(\"Failed to process feedback. Please try again.\");\n    } finally {\n      setIsAIProcessing(false);\n    }\n  }, [newFeedback, newFeedbackRole, graphData]);\n\n  // Zoom control functions\n  const zoomIn = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k * 1.3));\n  }, []);\n  const zoomOut = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n    const currentTransform = d3.zoomTransform(svg.node());\n    svg.transition().duration(300).call(zoomRef.current.transform, d3.zoomIdentity.translate(currentTransform.x, currentTransform.y).scale(currentTransform.k / 1.3));\n  }, []);\n  const centerView = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current) return;\n    const svg = d3.select(svgRef.current);\n\n    // Calculate the center point\n    const centerX = dimensions.width / 2;\n    const centerY = dimensions.height / 2;\n\n    // Create a transform that centers the view\n    const transform = d3.zoomIdentity.translate(centerX, centerY).scale(1).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions]);\n  const fitToScreen = useCallback(() => {\n    if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n    const svg = d3.select(svgRef.current);\n\n    // Find the bounds of all nodes\n    let minX = Infinity,\n      minY = Infinity,\n      maxX = -Infinity,\n      maxY = -Infinity;\n    graphData.nodes.forEach(node => {\n      if (!node.x || !node.y) return;\n      if (node.x < minX) minX = node.x;\n      if (node.y < minY) minY = node.y;\n      if (node.x > maxX) maxX = node.x;\n      if (node.y > maxY) maxY = node.y;\n    });\n\n    // If we don't have valid bounds, center view instead\n    if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n      centerView();\n      return;\n    }\n\n    // Add padding\n    const padding = 50;\n    minX -= padding;\n    minY -= padding;\n    maxX += padding;\n    maxY += padding;\n\n    // Calculate width and height of the content\n    const contentWidth = maxX - minX;\n    const contentHeight = maxY - minY;\n\n    // Calculate scale to fit the content\n    const scale = Math.min(dimensions.width / contentWidth, dimensions.height / contentHeight, 2 // Maximum scale factor\n    ) * 0.9; // 90% to add some margin\n\n    // Calculate the center of the content\n    const centerX = (minX + maxX) / 2;\n    const centerY = (minY + maxY) / 2;\n\n    // Create a transform that centers and scales the content\n    const transform = d3.zoomIdentity.translate(dimensions.width / 2, dimensions.height / 2).scale(scale).translate(-centerX, -centerY);\n\n    // Apply the transform with a smooth transition\n    svg.transition().duration(750).call(zoomRef.current.transform, transform);\n  }, [dimensions, graphData.nodes, centerView]);\n\n  // Toggle mini-map visibility\n  const toggleMiniMap = useCallback(() => {\n    setShowMiniMap(!showMiniMap);\n  }, [showMiniMap]);\n\n  // Loading screen\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-blue-800 mb-4\",\n        children: \"Loading Insights Network...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 5\n    }, this);\n  }\n\n  // Error screen\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-full items-center justify-center bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl text-red-800 mb-4\",\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1644,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1641,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-800\",\n            children: \"User Research Insights Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Visualizing connections between user feedback, features, and personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1661,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1659,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-64\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search nodes...\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => node.name.toLowerCase().includes(e.target.value.toLowerCase()));\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            },\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 11\n          }, this), showSearchResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\",\n            children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 py-2 hover:bg-gray-100 cursor-pointer\",\n              onClick: () => {\n                setSelectedNode(result);\n                handleNodeClick(result);\n                setShowSearchResults(false);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-3 h-3 rounded-full mr-2\",\n                  style: {\n                    backgroundColor: colorScale(result.type)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1698,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1702,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs text-gray-500\",\n                  children: [\"(\", result.type, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1703,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1697,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1688,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1686,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1715,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: exportData,\n            children: \"Export\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1716,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\",\n            children: [\"Import\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".json\",\n              className: \"hidden\",\n              onChange: importData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1724,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1722,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\",\n            onClick: resetVisualization,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1731,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1740,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: () => setIsSimulationRunning(!isSimulationRunning),\n            children: isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1741,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: centerView,\n            children: \"Center View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1747,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\",\n            onClick: toggleMiniMap,\n            children: showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1753,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n            onClick: fitToScreen,\n            title: \"Fit all nodes to screen\",\n            children: \"Fit to Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1739,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Add:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1769,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('theme');\n              setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1770,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => {\n              setModalType('feature');\n              setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n              setShowModal(true);\n            },\n            children: \"Add Feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1780,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\",\n            onClick: () => setShowFeedbackModal(true),\n            children: \"Add Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1790,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1768,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1713,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Connect:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1801,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-3 py-1 rounded text-sm ${selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n            onClick: connectNodes,\n            disabled: !selectedNode,\n            children: \"Connect Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1802,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1800,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Feedback Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1814,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: feedbackWeight,\n            onChange: e => setFeedbackWeight(parseInt(e.target.value)),\n            className: \"w-32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: feedbackWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1823,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1813,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Highlight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1827,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('none'),\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1828,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('themes'),\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1834,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('features'),\n            children: \"Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1840,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`,\n            onClick: () => setHighlightMode('personas'),\n            children: \"Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1826,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1799,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1657,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: \"flex-1 bg-gray-50 p-4 transition-all duration-300\",\n        style: {\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n          minHeight: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          className: \"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\",\n          style: {\n            minHeight: '500px'\n          },\n          onClick: () => setSelectedNode(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1866,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomIn,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1881,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: zoomOut,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1887,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1883,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\",\n            onClick: fitToScreen,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl\",\n              children: \"\\u22A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1893,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1889,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1876,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1858,\n        columnNumber: 7\n      }, this), showAIInsightsPanel && aiInsights && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`,\n        style: {\n          width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n          maxWidth: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsPanelCollapsed(!isPanelCollapsed),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\",\n            title: isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: isPanelCollapsed ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1915,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1914,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1909,\n            columnNumber: 13\n          }, this), isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\",\n            children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona}` : aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1924,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAIInsightsPanel(false),\n            className: \"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\",\n            title: \"Close panel\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1937,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1936,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1931,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1908,\n          columnNumber: 11\n        }, this), !isPanelCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 p-4 overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: aiInsights.isFeatureView ? 'Feature Details' : aiInsights.persona ? `${aiInsights.persona} Feedback` : aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1946,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1945,\n            columnNumber: 15\n          }, this), aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1957,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1958,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1956,\n              columnNumber: 19\n            }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1967,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: feature.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1974,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: feature.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1975,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1970,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1968,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1966,\n              columnNumber: 21\n            }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Personas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1991,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                  children: persona.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1994,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1992,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1990,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), aiInsights.isFeatureView && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 flex justify-between\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2012,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `inline-block px-2 py-1 rounded text-xs font-medium ${aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' : aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                  children: aiInsights.priority\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2013,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2011,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2010,\n              columnNumber: 19\n            }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2026,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: theme.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2033,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-600\",\n                    children: [theme.feedbackCount || 0, \" feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2034,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2029,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2027,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2025,\n              columnNumber: 21\n            }, this), aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Related Personas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2046,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedPersonas.map((persona, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\",\n                  children: persona.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2049,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2047,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2045,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), aiInsights.persona && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Feedback Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2066,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : aiInsights.results && aiInsights.results.length || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2067,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2065,\n              columnNumber: 19\n            }, this), aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Common Themes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2076,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedThemes.map((theme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: theme.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2083,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-600\",\n                    children: [theme.feedbackCount || 0, \" feedback\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2084,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2079,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2077,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2075,\n              columnNumber: 21\n            }, this), aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Relevant Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2096,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: aiInsights.connectedFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: feature.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2103,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs px-1.5 py-0.5 rounded ${feature.priority === 'High' ? 'bg-red-100 text-red-800' : feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: feature.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2104,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2099,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2097,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2095,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), aiInsights.results && aiInsights.results.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-sm text-gray-600 mb-2\",\n              children: aiInsights.persona ? 'User Feedback' : 'Feedback Classification'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2122,\n              columnNumber: 19\n            }, this), aiInsights.results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-2 rounded mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: result.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2127,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1 text-xs text-gray-500\",\n                children: result.user_role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2128,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2126,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 italic\",\n            children: \"No feedback data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1944,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1900,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1857,\n      columnNumber: 5\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Add New \", modalType === 'theme' ? 'Theme' : 'Feature']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newNodeName,\n            onChange: e => setNewNodeName(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: `Enter ${modalType} name`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2151,\n          columnNumber: 11\n        }, this), modalType === 'theme' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: newNodeFeedbackCount,\n            onChange: e => setNewNodeFeedbackCount(parseInt(e.target.value)),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2165,\n          columnNumber: 13\n        }, this), modalType === 'feature' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newNodePriority,\n            onChange: e => setNewNodePriority(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowModal(false);\n              setNewNodeName('');\n              setNewNodeFeedbackCount(10);\n              setNewNodePriority('Medium');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddNode,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2145,\n      columnNumber: 7\n    }, this), showConnectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Connect Nodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\",\n            children: [connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.name, \" (\", connectionSource === null || connectionSource === void 0 ? void 0 : connectionSource.type, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: connectionTarget,\n            onChange: e => setConnectionTarget(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a target node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2245,\n              columnNumber: 15\n            }, this), availableTargets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: target.id,\n              children: [target.name, \" (\", target.type, \")\"]\n            }, target.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2247,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: [\"Connection Strength: \", connectionStrength.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"1\",\n            step: \"0.1\",\n            value: connectionStrength,\n            onChange: e => setConnectionStrength(parseFloat(e.target.value)),\n            className: \"w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowConnectionModal(false);\n              setConnectionSource(null);\n              setConnectionTarget('');\n              setConnectionStrength(0.5);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleConnectionSubmit,\n            disabled: !connectionTarget,\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2221,\n      columnNumber: 7\n    }, this), showFeedbackModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Add New Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Feedback Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newFeedback,\n            onChange: e => setNewFeedback(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter user feedback\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"User Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFeedbackRole,\n            onChange: e => setNewFeedbackRole(e.target.value),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"e.g. Mobile User, Admin, Power User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",\n            onClick: () => {\n              setShowFeedbackModal(false);\n              setNewFeedback('');\n              setNewFeedbackRole('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            onClick: handleAddFeedback,\n            disabled: isAIProcessing,\n            children: isAIProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2345,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2344,\n              columnNumber: 17\n            }, this) : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2327,\n          columnNumber: 11\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1655,\n    columnNumber: 3\n  }, this);\n};\n_s(UserResearchNetwork, \"1ocLJLpiV6s/ERdMImEaJyo6kOo=\");\n_c = UserResearchNetwork;\nexport default UserResearchNetwork;\nvar _c;\n$RefreshReg$(_c, \"UserResearchNetwork\");","map":{"version":3,"names":["mockClassifyFeedback","text","lowerText","toLowerCase","includes","theme","mockGenerateFeatureIdeas","feedbackTexts","ideas","push","name","description","priority","React","useState","useEffect","useRef","useCallback","useMemo","d3","classifyFeedback","generateFeatureIdeas","jsxDEV","_jsxDEV","Fragment","_Fragment","colorScale","scaleOrdinal","domain","range","initialData","nodes","id","type","feedbackCount","links","source","target","strength","UserResearchNetwork","_s","svgRef","containerRef","zoomRef","simulationRef","dimensions","setDimensions","width","height","graphData","setGraphData","isSimulationRunning","setIsSimulationRunning","selectedNode","setSelectedNode","highlightMode","setHighlightMode","feedbackWeight","setFeedbackWeight","loading","setLoading","error","setError","showModal","setShowModal","modalType","setModalType","showConnectionModal","setShowConnectionModal","showFeedbackModal","setShowFeedbackModal","newNodeName","setNewNodeName","newNodeFeedbackCount","setNewNodeFeedbackCount","newNodePriority","setNewNodePriority","connectionSource","setConnectionSource","connectionTarget","setConnectionTarget","connectionStrength","setConnectionStrength","availableTargets","setAvailableTargets","multipleConnections","setMultipleConnections","showMiniMap","setShowMiniMap","searchTerm","setSearchTerm","searchResults","setSearchResults","showSearchResults","setShowSearchResults","isAIProcessing","setIsAIProcessing","aiError","setAIError","feedbackItems","setFeedbackItems","showAIInsightsPanel","setShowAIInsightsPanel","aiInsights","setAIInsights","isPanelCollapsed","setIsPanelCollapsed","panelWidth","setPanelWidth","newFeedback","setNewFeedback","newFeedbackRole","setNewFeedbackRole","timer","setTimeout","clearTimeout","current","updateDimensions","getBoundingClientRect","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","window","removeEventListener","disconnect","containerWidth","clientWidth","containerHeight","clientHeight","centerView","length","recalculateFeedbackCounts","cleanupMiniMap","createMiniMap","console","log","svg","select","selectAll","remove","g","append","zoom","scaleExtent","on","event","attr","transform","call","Array","isArray","map","node","normalizedLinks","link","sourceId","targetId","validLinks","filter","sourceExists","some","targetExists","warn","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","forceCenter","forceCollide","stop","data","enter","find","n","sourceType","targetType","Math","max","drag","dragstarted","dragged","dragended","stopPropagation","fx","fy","x","y","handleNodeClick","i","tick","active","alphaTarget","restart","zoomIdentity","translate","scale","miniMapSize","min","miniMapMargin","miniMapContainer","miniMapNodes","miniX","random","miniY","miniMapLinks","miniMapSimulation","radius","miniNodes","baseColor","color","brighter","viewportRect","style","pointer","centerX","centerY","transition","duration","feedbackCounts","themes","personas","features","forEach","sourceNode","targetNode","updatedNodes","prevData","importData","file","files","reader","FileReader","onload","e","fileContent","result","importedData","JSON","parse","feedback","processImportedFeedback","validNodes","Date","now","toString","substring","nodeMap","Object","keys","err","message","onerror","readAsText","newGraph","item","user_role","personaId","personaNode","processChunks","chunkSize","chunks","slice","chunk","themeId","themeNode","linkExists","Promise","resolve","significantThemes","values","sort","a","b","relatedFeedback","featureIdeas","idea","featureId","featureNode","existingLink","l","fallback","tempSimulation","catch","handleAddNode","trim","alert","newNode","connectedLinks","connectedNodeIds","connectedNodes","insights","results","connectedFeatures","connectedPersonas","isFeatureView","connectedThemes","persona","personaFeedback","index","feedbackIndex","handleConnectionSubmit","existingConnection","newLink","connectNodes","targets","exportData","dataStr","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","resetVisualization","confirm","handleAddFeedback","newFeedbackItem","timestamp","toISOString","prev","zoomIn","currentTransform","zoomTransform","k","zoomOut","fitToScreen","minX","Infinity","minY","maxX","maxY","isFinite","padding","contentWidth","contentHeight","toggleMiniMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","placeholder","value","onChange","backgroundColor","accept","title","disabled","parseInt","ref","marginRight","minHeight","maxWidth","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","feature","toFixed","step","parseFloat","rows","_c","$RefreshReg$"],"sources":["/Users/faisalshariff/Feedback Force/src/components/UserResearchNetwork.js"],"sourcesContent":["// Mock AI service for consistent behavior when testing\nconst mockClassifyFeedback = (text) => {\n  // Simple keyword-based classification as fallback\n  const lowerText = text.toLowerCase();\n  \n  if (lowerText.includes('crash') || lowerText.includes('error') || lowerText.includes('bug')) {\n    return { theme: 'Stability Issues' };\n  } else if (lowerText.includes('slow') || lowerText.includes('performance') || lowerText.includes('timeout')) {\n    return { theme: 'Performance' };\n  } else if (lowerText.includes('mobile') || lowerText.includes('app') || lowerText.includes('phone')) {\n    return { theme: 'Mobile Experience' };\n  } else if (lowerText.includes('ui') || lowerText.includes('interface') || lowerText.includes('design') || \n            lowerText.includes('layout') || lowerText.includes('look') || lowerText.includes('dark mode')) {\n    return { theme: 'User Interface' };\n  } else if (lowerText.includes('report') || lowerText.includes('dashboard') || lowerText.includes('visualization')) {\n    return { theme: 'Reporting & Analytics' };\n  } else if (lowerText.includes('export') || lowerText.includes('excel') || lowerText.includes('pdf') || \n            lowerText.includes('data')) {\n    return { theme: 'Data Export & Import' };\n  } else if (lowerText.includes('search') || lowerText.includes('filter') || lowerText.includes('find')) {\n    return { theme: 'Search & Navigation' };\n  } else if (lowerText.includes('permission') || lowerText.includes('security') || lowerText.includes('privacy')) {\n    return { theme: 'Security & Permissions' };\n  }\n  \n  return { theme: 'General Feedback' };\n};\n\n// Mock feature ideas generation\nconst mockGenerateFeatureIdeas = (theme, feedbackTexts) => {\n  const ideas = [];\n  \n  switch (theme) {\n    case 'Stability Issues':\n      ideas.push({ \n        name: 'Crash Prevention & Recovery', \n        description: 'Implement robust error handling and automatic recovery mechanisms',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Error Reporting System', \n        description: 'Add detailed error logging and user-friendly error messages',\n        priority: 'Medium'\n      });\n      break;\n    case 'Performance':\n      ideas.push({ \n        name: 'Performance Optimization', \n        description: 'Improve loading times and response speed across the application',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Resource Usage Monitoring', \n        description: 'Add tools to track and optimize resource consumption',\n        priority: 'Medium'\n      });\n      break;\n    case 'Mobile Experience':\n      ideas.push({ \n        name: 'Responsive Design Overhaul', \n        description: 'Rebuild interface with mobile-first approach',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Mobile Feature Parity', \n        description: 'Ensure all critical features work on mobile devices',\n        priority: 'Medium'\n      });\n      break;\n    case 'User Interface':\n      ideas.push({ \n        name: 'UI Modernization', \n        description: 'Update interface with contemporary design principles',\n        priority: 'Medium'\n      });\n      ideas.push({ \n        name: 'Dark Mode Support', \n        description: 'Add light/dark theme options for all screens',\n        priority: 'Low'\n      });\n      break;\n    case 'Reporting & Analytics':\n      ideas.push({ \n        name: 'Custom Report Builder', \n        description: 'Allow users to build and save custom report templates',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Advanced Visualization Options', \n        description: 'Add more chart types and data visualization tools',\n        priority: 'Medium'\n      });\n      break;\n    case 'Data Export & Import':\n      ideas.push({ \n        name: 'Enhanced Export Options', \n        description: 'Support multiple export formats (Excel, PDF, CSV)',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Bulk Data Operations', \n        description: 'Improve handling of large datasets',\n        priority: 'Medium'\n      });\n      break;\n    case 'Search & Navigation':\n      ideas.push({ \n        name: 'Advanced Search Capabilities', \n        description: 'Add filters, operators, and saved searches',\n        priority: 'Medium'\n      });\n      ideas.push({ \n        name: 'Navigation Redesign', \n        description: 'Simplify menus and improve information architecture',\n        priority: 'Medium'\n      });\n      break;\n    case 'Security & Permissions':\n      ideas.push({ \n        name: 'Granular Permission System', \n        description: 'Allow fine-grained control over user access',\n        priority: 'High'\n      });\n      ideas.push({ \n        name: 'Security Enhancements', \n        description: 'Improve data encryption and privacy controls',\n        priority: 'High'\n      });\n      break;\n    default:\n      ideas.push({ \n        name: 'User Experience Improvements', \n        description: 'General enhancements based on user feedback',\n        priority: 'Medium'\n      });\n  }\n  \n  return ideas;\n};// UserResearchNetwork.js\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport { classifyFeedback, generateFeatureIdeas } from '../services/openaiService';\n\n// Color scale for node types\nconst colorScale = d3.scaleOrdinal()\n.domain([\"theme\", \"feature\", \"persona\"])\n.range([\"#3182CE\", \"#38A169\", \"#DD6B20\"]);\n\n// Initial data structure\nconst initialData = {\nnodes: [\n  { id: \"theme1\", name: \"Performance\", type: \"theme\", feedbackCount: 10 },\n  { id: \"theme2\", name: \"User Interface\", type: \"theme\", feedbackCount: 8 },\n  { id: \"theme3\", name: \"Mobile Experience\", type: \"theme\", feedbackCount: 6 },\n  { id: \"persona1\", name: \"Data Analyst\", type: \"persona\" },\n  { id: \"persona2\", name: \"Marketing Manager\", type: \"persona\" },\n  { id: \"feature1\", name: \"Performance Optimization\", type: \"feature\", priority: \"High\" }\n],\nlinks: [\n  { source: \"theme1\", target: \"persona1\", strength: 0.7 },\n  { source: \"theme2\", target: \"persona1\", strength: 0.5 },\n  { source: \"theme1\", target: \"feature1\", strength: 0.8 },\n  { source: \"persona1\", target: \"feature1\", strength: 0.6 }\n]\n};\n\n// Main component\nconst UserResearchNetwork = () => {\n// Refs\nconst svgRef = useRef(null);\nconst containerRef = useRef(null);\nconst zoomRef = useRef(null);\nconst simulationRef = useRef(null);\n\n// State\nconst [dimensions, setDimensions] = useState({ width: 800, height: 600 });\nconst [graphData, setGraphData] = useState(initialData);\nconst [isSimulationRunning, setIsSimulationRunning] = useState(true);\nconst [selectedNode, setSelectedNode] = useState(null);\nconst [highlightMode, setHighlightMode] = useState('none');\nconst [feedbackWeight, setFeedbackWeight] = useState(5);\nconst [loading, setLoading] = useState(true);\nconst [error, setError] = useState(null);\n\n// Modal states\nconst [showModal, setShowModal] = useState(false);\nconst [modalType, setModalType] = useState(''); // 'theme' or 'feature'\nconst [showConnectionModal, setShowConnectionModal] = useState(false);\nconst [showFeedbackModal, setShowFeedbackModal] = useState(false);\n\n// Node form state\nconst [newNodeName, setNewNodeName] = useState('');\nconst [newNodeFeedbackCount, setNewNodeFeedbackCount] = useState(10);\nconst [newNodePriority, setNewNodePriority] = useState('Medium');\n\n// Connection state\nconst [connectionSource, setConnectionSource] = useState(null);\nconst [connectionTarget, setConnectionTarget] = useState('');\nconst [connectionStrength, setConnectionStrength] = useState(0.5);\nconst [availableTargets, setAvailableTargets] = useState([]);\nconst [multipleConnections, setMultipleConnections] = useState([]);\n\n// Minimap state\nconst [showMiniMap, setShowMiniMap] = useState(true);\n\n// Search state\nconst [searchTerm, setSearchTerm] = useState('');\nconst [searchResults, setSearchResults] = useState([]);\nconst [showSearchResults, setShowSearchResults] = useState(false);\n\n// AI state\nconst [isAIProcessing, setIsAIProcessing] = useState(false);\nconst [aiError, setAIError] = useState(null);\nconst [feedbackItems, setFeedbackItems] = useState([]);\nconst [showAIInsightsPanel, setShowAIInsightsPanel] = useState(false);\nconst [aiInsights, setAIInsights] = useState(null);\nconst [isPanelCollapsed, setIsPanelCollapsed] = useState(false);\nconst [panelWidth, setPanelWidth] = useState(320);\n\n// New feedback state\nconst [newFeedback, setNewFeedback] = useState('');\nconst [newFeedbackRole, setNewFeedbackRole] = useState('');\n\n// Simulate loading data on initial render\nuseEffect(() => {\n  const timer = setTimeout(() => {\n    setLoading(false);\n  }, 1000);\n  return () => clearTimeout(timer);\n}, []);\n\n// Update dimensions when window resizes\nuseEffect(() => {\n  if (!containerRef.current) return;\n  \n  const updateDimensions = () => {\n    if (containerRef.current) {\n      const { width, height } = containerRef.current.getBoundingClientRect();\n      setDimensions({ width, height });\n    }\n  };\n  \n  const resizeObserver = new ResizeObserver(entries => {\n    for (let entry of entries) {\n      const { width, height } = entry.contentRect;\n      setDimensions({ width, height });\n    }\n  });\n  \n  resizeObserver.observe(containerRef.current);\n  updateDimensions();\n  \n  return () => {\n    window.removeEventListener('resize', updateDimensions);\n    resizeObserver.disconnect();\n  };\n}, []);\n\n// Adjust container dimensions when panel is open\nuseEffect(() => {\n  if (containerRef.current) {\n    const containerWidth = containerRef.current.clientWidth;\n    const containerHeight = containerRef.current.clientHeight;\n    \n    // Adjust dimensions based on panel state\n    if (showAIInsightsPanel && !isPanelCollapsed) {\n      // Reduce width to make room for the panel\n      setDimensions({\n        width: containerWidth - panelWidth,\n        height: containerHeight\n      });\n    } else {\n      // Use full width\n      setDimensions({\n        width: containerWidth,\n        height: containerHeight\n      });\n    }\n  }\n}, [showAIInsightsPanel, isPanelCollapsed, panelWidth]);\n\n// Recenter view when panel state changes\nuseEffect(() => {\n  const timer = setTimeout(() => {\n    centerView();\n  }, 300);\n  \n  return () => clearTimeout(timer);\n}, [showAIInsightsPanel, isPanelCollapsed]);\n\n// Recalculate feedback counts when feedback items change\nuseEffect(() => {\n  if (feedbackItems.length > 0) {\n    recalculateFeedbackCounts();\n  }\n}, [feedbackItems]);\n\n// Create a minimap when needed\nuseEffect(() => {\n  if (showMiniMap && svgRef.current && dimensions.width > 0) {\n    const cleanupMiniMap = createMiniMap();\n    return cleanupMiniMap;\n  }\n}, [showMiniMap, graphData, dimensions.width, dimensions.height]);\n\n// Main visualization rendering effect\nuseEffect(() => {\n  if (!svgRef.current || !dimensions.width || !dimensions.height) return;\n  \n  console.log(\"Rendering with data:\", graphData);\n  \n  // Clear the SVG\n  const svg = d3.select(svgRef.current);\n  svg.selectAll(\"*\").remove();\n  \n  // Create a container group for all elements\n  const g = svg.append(\"g\");\n  \n  // Set up zoom behavior\n  const zoom = d3.zoom()\n    .scaleExtent([0.1, 4])\n    .on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n    });\n  \n  svg.call(zoom);\n  zoomRef.current = zoom;\n  \n  // Verify we have valid data\n  if (!graphData.nodes || !graphData.links || \n      !Array.isArray(graphData.nodes) || !Array.isArray(graphData.links) ||\n      graphData.nodes.length === 0) {\n    console.error(\"Invalid or empty graph data:\", graphData);\n    return;\n  }\n  \n  // Create working copies of the data with proper link references\n  const nodes = graphData.nodes.map(node => ({...node}));\n  \n  // Normalize links to ensure proper format for D3\n  const normalizedLinks = graphData.links.map(link => {\n    // Extract source and target IDs consistently\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    \n    // Return a new link object with just IDs (D3 will convert to objects)\n    return {\n      source: sourceId,\n      target: targetId,\n      strength: link.strength || 0.5\n    };\n  });\n  \n  // Verify all links have valid source and target nodes\n  const validLinks = normalizedLinks.filter(link => {\n    const sourceExists = nodes.some(node => node.id === link.source);\n    const targetExists = nodes.some(node => node.id === link.target);\n    if (!sourceExists) console.warn(`Link has invalid source: ${link.source}`);\n    if (!targetExists) console.warn(`Link has invalid target: ${link.target}`);\n    return sourceExists && targetExists;\n  });\n  \n  console.log(`Found ${validLinks.length} valid links out of ${normalizedLinks.length}`);\n  \n  // Create the force simulation with strong link forces\n  const simulation = d3.forceSimulation(nodes)\n    .force(\"link\", d3.forceLink(validLinks)\n      .id(d => d.id)\n      .distance(100)\n      .strength(1)) // Stronger link force for better connections\n    .force(\"charge\", d3.forceManyBody().strength(-300))\n    .force(\"center\", d3.forceCenter(dimensions.width / 2, dimensions.height / 2))\n    .force(\"collide\", d3.forceCollide(30));\n  \n  simulationRef.current = simulation;\n  \n  if (!isSimulationRunning) {\n    simulation.stop();\n  }\n  \n  // Create the links\n  const link = g.append(\"g\")\n    .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(validLinks)\n    .enter()\n    .append(\"line\")\n    .attr(\"stroke\", d => {\n      // Get the source and target nodes\n      const source = nodes.find(n => n.id === d.source);\n      const target = nodes.find(n => n.id === d.target);\n      \n      if (!source || !target) return \"#999\";\n      \n      const sourceType = source.type;\n      const targetType = target.type;\n      \n      if (sourceType === \"theme\" && targetType === \"feature\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"feature\" && targetType === \"theme\") return \"#90CDF4\"; // Light blue\n      if (sourceType === \"theme\" && targetType === \"persona\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"theme\") return \"#FBD38D\"; // Light orange\n      if (sourceType === \"persona\" && targetType === \"feature\") return \"#9AE6B4\"; // Light green\n      if (sourceType === \"feature\" && targetType === \"persona\") return \"#9AE6B4\"; // Light green\n      \n      return \"#999\"; // Default gray\n    })\n    .attr(\"stroke-opacity\", 0.6)\n    .attr(\"stroke-width\", d => Math.max(2, d.strength * 6)); // Thicker lines for visibility\n  \n  // Create the nodes\n  const node = g.append(\"g\")\n    .attr(\"class\", \"nodes\")\n    .selectAll(\"g\")\n    .data(nodes)\n    .enter()\n    .append(\"g\")\n    .call(d3.drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended))\n    .on(\"click\", (event, d) => {\n      event.stopPropagation();\n      \n      if (selectedNode && selectedNode.id === d.id) {\n        // If clicking the same node again, release it\n        d.fx = null;\n        d.fy = null;\n        setSelectedNode(null);\n      } else {\n        // If clicking a new node, fix its position\n        d.fx = d.x;\n        d.fy = d.y;\n        setSelectedNode(d);\n        handleNodeClick(d);\n      }\n    });\n  \n  // Add circles to nodes\n  node.append(\"circle\")\n    .attr(\"r\", d => {\n      if (d.type === \"theme\") return 20 + (d.feedbackCount / feedbackWeight);\n      if (d.type === \"feature\") return d.priority === \"High\" ? 22 : 20;\n      return 18;\n    })\n    .attr(\"fill\", d => colorScale(d.type))\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 2);\n  \n  // Add labels to nodes\n  node.append(\"text\")\n    .text(d => d.name)\n    .attr(\"x\", 0)\n    .attr(\"y\", d => {\n      if (d.type === \"theme\") return 30 + (d.feedbackCount / feedbackWeight);\n      if (d.type === \"feature\") return d.priority === \"High\" ? 32 : 30;\n      return 28;\n    })\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"12px\")\n    .attr(\"fill\", \"#333\");\n  \n  // Add title for hover effect\n  node.append(\"title\")\n    .text(d => d.name);\n  \n  // Run a few ticks before adding listener to get nodes in better positions\n  for (let i = 0; i < 20; i++) {\n    simulation.tick();\n  }\n  \n  // Update link positions immediately with node positions from simulation ticks\n  link\n    .attr(\"x1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.x : 0;\n    })\n    .attr(\"y1\", d => {\n      const source = nodes.find(n => n.id === d.source);\n      return source ? source.y : 0;\n    })\n    .attr(\"x2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.x : 0;\n    })\n    .attr(\"y2\", d => {\n      const target = nodes.find(n => n.id === d.target);\n      return target ? target.y : 0;\n    });\n  \n  // Now add the tick listener for ongoing updates\n  simulation.on(\"tick\", () => {\n    link\n      .attr(\"x1\", d => {\n        // Handle both ID and object references\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.x : 0;\n      })\n      .attr(\"y1\", d => {\n        const sourceId = typeof d.source === 'object' ? d.source.id : d.source;\n        const source = nodes.find(n => n.id === sourceId);\n        return source ? source.y : 0;\n      })\n      .attr(\"x2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.x : 0;\n      })\n      .attr(\"y2\", d => {\n        const targetId = typeof d.target === 'object' ? d.target.id : d.target;\n        const target = nodes.find(n => n.id === targetId);\n        return target ? target.y : 0;\n      });\n    \n    node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`);\n  });\n  \n  // Drag functions\n  function dragstarted(event, d) {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  \n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n  \n  function dragended(event, d) {\n    if (!event.active) simulation.alphaTarget(0);\n    \n    // Only release the node if it's not the selected node\n    if (!selectedNode || selectedNode.id !== d.id) {\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n  \n  // Center the view\n  svg.call(zoom.transform, d3.zoomIdentity.translate(\n    dimensions.width / 2 - dimensions.width * 0.5,\n    dimensions.height / 2 - dimensions.height * 0.5\n  ).scale(0.8));\n  \n  // Clean up on unmount\n  return () => {\n    simulation.stop();\n  };\n}, [dimensions, graphData, feedbackWeight, highlightMode, selectedNode, isSimulationRunning]);\n\n// MiniMap implementation\nconst createMiniMap = useCallback(() => {\n  if (!svgRef.current) return () => {};\n  \n  const svg = d3.select(svgRef.current);\n  \n  // Remove any existing mini-map\n  svg.selectAll(\".mini-map-container\").remove();\n  \n  // Calculate mini-map size based on the main SVG dimensions\n  const miniMapSize = Math.min(dimensions.width, dimensions.height) * 0.25;\n  const miniMapMargin = 20;\n  \n  // Create a container for the mini-map\n  const miniMapContainer = svg.append(\"g\")\n    .attr(\"class\", \"mini-map-container\")\n    .attr(\"transform\", `translate(${miniMapMargin}, ${miniMapMargin})`);\n  \n  // Add a background rectangle\n  miniMapContainer.append(\"rect\")\n    .attr(\"width\", miniMapSize)\n    .attr(\"height\", miniMapSize)\n    .attr(\"fill\", \"#f0f4f8\")\n    .attr(\"fill-opacity\", 0.9)\n    .attr(\"stroke\", \"#3182CE\")\n    .attr(\"stroke-width\", 2)\n    .attr(\"rx\", 6);\n  \n  // Create a separate mini-map simulation\n  const miniMapNodes = graphData.nodes.map(node => ({\n    ...node,\n    miniX: Math.random() * miniMapSize,\n    miniY: Math.random() * miniMapSize\n  }));\n  \n  const miniMapLinks = graphData.links.map(link => ({\n    source: typeof link.source === 'object' ? link.source.id : link.source,\n    target: typeof link.target === 'object' ? link.target.id : link.target\n  }));\n  \n  // Create a separate force simulation just for the mini-map\n  const miniMapSimulation = d3.forceSimulation(miniMapNodes)\n    .force(\"link\", d3.forceLink(miniMapLinks).id(d => d.id).distance(5))\n    .force(\"charge\", d3.forceManyBody().strength(-20))\n    .force(\"center\", d3.forceCenter(miniMapSize / 2, miniMapSize / 2))\n    .force(\"collide\", d3.forceCollide().radius(4));\n  \n  // Add mini-map links\n  miniMapContainer.selectAll(\".mini-link\")\n    .data(miniMapLinks)\n    .enter()\n    .append(\"line\")\n    .attr(\"class\", \"mini-link\")\n    .attr(\"stroke\", \"#ccc\")\n    .attr(\"stroke-width\", 0.5);\n  \n  // Add mini-map nodes\n  const miniNodes = miniMapContainer.selectAll(\".mini-node\")\n    .data(miniMapNodes)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"mini-node\")\n    .attr(\"r\", 3)\n    .attr(\"fill\", d => {\n      // Use the same color scale but with higher opacity\n      const baseColor = colorScale(d.type);\n      return d3.color(baseColor).brighter(0.3);\n    })\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 1);\n  \n  // Add a label\n  miniMapContainer.append(\"text\")\n    .attr(\"x\", 10)\n    .attr(\"y\", 15)\n    .attr(\"font-size\", \"12px\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"#2D3748\")\n    .text(\"Network Overview\");\n  \n  // Add a border to show the current viewport\n  const viewportRect = miniMapContainer.append(\"rect\")\n    .attr(\"class\", \"mini-map-viewport\")\n    .attr(\"width\", miniMapSize)\n    .attr(\"height\", miniMapSize)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#3182ce\")\n    .attr(\"stroke-width\", 2)\n    .attr(\"stroke-dasharray\", \"4,4\");\n  \n  // Run the mini-map simulation for a fixed number of ticks\n  miniMapSimulation.stop();\n  for (let i = 0; i < 300; i++) {\n    miniMapSimulation.tick();\n  }\n  \n  // Update the mini-map nodes with their final positions\n  miniMapContainer.selectAll(\".mini-link\")\n    .attr(\"x1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniX : 0;\n    })\n    .attr(\"y1\", d => {\n      const source = miniMapNodes.find(n => n.id === d.source);\n      return source ? source.miniY : 0;\n    })\n    .attr(\"x2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniX : 0;\n    })\n    .attr(\"y2\", d => {\n      const target = miniMapNodes.find(n => n.id === d.target);\n      return target ? target.miniY : 0;\n    });\n  \n  miniNodes\n    .attr(\"cx\", d => d.miniX)\n    .attr(\"cy\", d => d.miniY);\n  \n  // Add click behavior\n  miniMapContainer.append(\"rect\")\n    .attr(\"width\", miniMapSize)\n    .attr(\"height\", miniMapSize)\n    .attr(\"fill\", \"transparent\")\n    .attr(\"stroke\", \"none\")\n    .style(\"cursor\", \"pointer\")\n    .on(\"click\", (event) => {\n      if (!zoomRef.current) return;\n      \n      // Get click position relative to mini-map\n      const [x, y] = d3.pointer(event);\n      \n      // Calculate the center point in the main view\n      const centerX = (x / miniMapSize) * dimensions.width;\n      const centerY = (y / miniMapSize) * dimensions.height;\n      \n      // Create a transform that centers on the clicked point\n      const transform = d3.zoomIdentity\n        .translate(dimensions.width / 2, dimensions.height / 2)\n        .scale(1)\n        .translate(-centerX, -centerY);\n      \n      // Apply the transform with a smooth transition\n      svg.transition()\n        .duration(750)\n        .call(zoomRef.current.transform, transform);\n    });\n  \n  // Return cleanup function\n  return () => {\n    svg.selectAll(\".mini-map-container\").remove();\n    if (miniMapSimulation) miniMapSimulation.stop();\n  };\n}, [dimensions, graphData]);\n\n// Recalculate feedback counts based on graph connections\nconst recalculateFeedbackCounts = useCallback(() => {\n  // Create a map to track feedback counts\n  const feedbackCounts = {\n    themes: {},\n    personas: {},\n    features: {}\n  };\n  \n  // Count feedback for each node type based on connections\n  graphData.links.forEach(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    \n    const sourceNode = graphData.nodes.find(n => n.id === sourceId);\n    const targetNode = graphData.nodes.find(n => n.id === targetId);\n    \n    if (!sourceNode || !targetNode) return;\n    \n    // Count theme connections\n    if (sourceNode.type === \"theme\" && targetNode.type === \"feedback\") {\n      feedbackCounts.themes[sourceNode.id] = (feedbackCounts.themes[sourceNode.id] || 0) + 1;\n    }\n    else if (targetNode.type === \"theme\" && sourceNode.type === \"feedback\") {\n      feedbackCounts.themes[targetNode.id] = (feedbackCounts.themes[targetNode.id] || 0) + 1;\n    }\n    \n    // Count persona connections\n    if (sourceNode.type === \"persona\" && targetNode.type === \"feedback\") {\n      feedbackCounts.personas[sourceNode.id] = (feedbackCounts.personas[sourceNode.id] || 0) + 1;\n    }\n    else if (targetNode.type === \"persona\" && sourceNode.type === \"feedback\") {\n      feedbackCounts.personas[targetNode.id] = (feedbackCounts.personas[targetNode.id] || 0) + 1;\n    }\n  });\n  \n  // Update node feedback counts\n  const updatedNodes = graphData.nodes.map(node => {\n    if (node.type === \"theme\" && feedbackCounts.themes[node.id]) {\n      return { ...node, feedbackCount: feedbackCounts.themes[node.id] };\n    }\n    if (node.type === \"persona\" && feedbackCounts.personas[node.id]) {\n      return { ...node, feedbackCount: feedbackCounts.personas[node.id] };\n    }\n    return node;\n  });\n  \n  // Update the graph data\n  setGraphData(prevData => ({\n    ...prevData,\n    nodes: updatedNodes\n  }));\n}, [graphData]);\n\n// Import data from file with more robust processing\nconst importData = useCallback((event) => {\n  const file = event.target.files[0];\n  if (!file) return;\n  \n  setLoading(true);\n  setError(null);\n  \n  console.log(\"Starting import from file:\", file.name);\n  \n  const reader = new FileReader();\n  reader.onload = (e) => {\n    try {\n      const fileContent = e.target.result;\n      console.log(\"File content loaded, parsing JSON...\");\n      const importedData = JSON.parse(fileContent);\n      console.log(\"Successfully parsed JSON:\", importedData);\n      \n      // Check if it's the simple feedback format (array of feedback items)\n      if (importedData.feedback && Array.isArray(importedData.feedback)) {\n        console.log(`Found feedback array with ${importedData.feedback.length} items`);\n        \n        // Store the feedback items\n        setFeedbackItems(importedData.feedback);\n        \n        // Process the feedback to create a graph\n        console.log(\"Transforming feedback to graph...\");\n        processImportedFeedback(importedData.feedback);\n      } \n      // Check if it's the direct graph format (nodes and links)\n      else if (importedData.nodes && importedData.links) {\n        console.log(`Found direct graph data: ${importedData.nodes.length} nodes, ${importedData.links.length} links`);\n        \n        // Normalize the links and nodes\n        const validNodes = importedData.nodes.map(node => ({\n          id: node.id || `node-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\n          name: node.name || 'Unnamed Node',\n          type: node.type || 'theme',\n          feedbackCount: node.feedbackCount || 0,\n          priority: node.priority || 'Medium',\n          ...node // preserve other properties\n        }));\n        \n        // Create a map of node IDs for quick lookups\n        const nodeMap = {};\n        validNodes.forEach(node => {\n          nodeMap[node.id] = true;\n        });\n        \n        // Normalize and validate links\n        const validLinks = importedData.links\n          .map(link => {\n            // Extract source and target consistently\n            const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n            const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n            \n            // Validate source and target\n            if (!sourceId || !targetId) {\n              console.warn('Link missing source or target:', link);\n              return null;\n            }\n            \n            return {\n              source: sourceId,\n              target: targetId,\n              strength: link.strength || 0.5\n            };\n          })\n          .filter(link => link !== null && nodeMap[link.source] && nodeMap[link.target]);\n        \n        console.log(`Validated ${validLinks.length} links out of ${importedData.links.length}`);\n        \n        // Set the graph data\n        setGraphData({\n          nodes: validNodes,\n          links: validLinks\n        });\n        \n        setLoading(false);\n      } \n      // Invalid format\n      else {\n        console.error(\"Unrecognized data format:\", Object.keys(importedData));\n        setError(\n          \"Invalid data format. The file should contain either:\" +\n          \"\\n1. A 'feedback' array with user feedback items, or\" +\n          \"\\n2. 'nodes' and 'links' arrays for direct graph data\"\n        );\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error(\"Error parsing or processing the file:\", err);\n      setError(`Error importing file: ${err.message || \"Unknown error\"}`);\n      setLoading(false);\n    }\n  };\n  \n  reader.onerror = (err) => {\n    console.error(\"FileReader error:\", err);\n    setError(\"Error reading the file. Please try again.\");\n    setLoading(false);\n  };\n  \n  console.log(\"Starting file read...\");\n  reader.readAsText(file);\n}, []);\n\n// Process imported feedback with enhanced reliability\nconst processImportedFeedback = useCallback((feedbackItems) => {\n  if (!feedbackItems || feedbackItems.length === 0) {\n    setLoading(false);\n    return;\n  }\n  \n  console.log(`Processing ${feedbackItems.length} feedback items...`);\n  setIsAIProcessing(true);\n  \n  // Create a new graph structure\n  const newGraph = {\n    nodes: [],\n    links: []\n  };\n  \n  // Track created nodes to avoid duplicates\n  const nodeMap = {\n    personas: {},\n    themes: {},\n    features: {}\n  };\n  \n  // Step 1: First create all persona nodes from feedback\n  console.log(\"Creating persona nodes...\");\n  feedbackItems.forEach(item => {\n    if (!item.user_role) return;\n    \n    if (!nodeMap.personas[item.user_role]) {\n      const personaId = `persona-${Date.now()}-${Object.keys(nodeMap.personas).length}`;\n      const personaNode = {\n        id: personaId,\n        name: item.user_role,\n        type: \"persona\",\n        feedbackCount: 1\n      };\n      \n      newGraph.nodes.push(personaNode);\n      nodeMap.personas[item.user_role] = personaNode;\n      console.log(`Created persona node: ${item.user_role}`);\n    } else {\n      // Increment feedback count for existing persona\n      nodeMap.personas[item.user_role].feedbackCount += 1;\n    }\n  });\n  \n  // Step 2: Process each feedback to identify themes\n  // Use chunks to avoid overwhelming the system\n  console.log(\"Processing feedback to identify themes...\");\n  const processChunks = async () => {\n    const chunkSize = 5; // Process 5 at a time\n    const chunks = [];\n    \n    // Split feedback into chunks\n    for (let i = 0; i < feedbackItems.length; i += chunkSize) {\n      chunks.push(feedbackItems.slice(i, i + chunkSize));\n    }\n    \n    // Process each chunk\n    for (let i = 0; i < chunks.length; i++) {\n      const chunk = chunks[i];\n      console.log(`Processing chunk ${i+1} of ${chunks.length}...`);\n      \n      // Process items in this chunk\n      for (const item of chunk) {\n        if (!item.text || !item.user_role) continue;\n        \n        try {\n          // Attempt to use the AI classification service\n          console.log(`Classifying: \"${item.text.substring(0, 30)}...\"`);\n          let result;\n          \n          try {\n            // Try AI service first\n            result = await classifyFeedback(item.text);\n            console.log(\"AI classification result:\", result);\n          } catch (aiError) {\n            // If AI fails, use fallback classification\n            console.warn(\"AI classification failed, using fallback:\", aiError);\n            result = mockClassifyFeedback(item.text);\n            console.log(\"Fallback classification result:\", result);\n          }\n          \n          if (result && result.theme) {\n            // Create or update theme node\n            if (!nodeMap.themes[result.theme]) {\n              const themeId = `theme-${Date.now()}-${Object.keys(nodeMap.themes).length}`;\n              const themeNode = {\n                id: themeId,\n                name: result.theme,\n                type: \"theme\",\n                feedbackCount: 1\n              };\n              \n              newGraph.nodes.push(themeNode);\n              nodeMap.themes[result.theme] = themeNode;\n              console.log(`Created theme node: ${result.theme}`);\n            } else {\n              // Increment existing theme's feedback count\n              nodeMap.themes[result.theme].feedbackCount += 1;\n            }\n            \n            // Connect persona to theme\n            const personaNode = nodeMap.personas[item.user_role];\n            const themeNode = nodeMap.themes[result.theme];\n            \n            if (personaNode && themeNode) {\n              // Check if link already exists\n              const linkExists = newGraph.links.some(link => \n                (link.source === personaNode.id && link.target === themeNode.id) ||\n                (link.source === themeNode.id && link.target === personaNode.id)\n              );\n              \n              if (!linkExists) {\n                newGraph.links.push({\n                  source: personaNode.id,\n                  target: themeNode.id,\n                  strength: 0.7\n                });\n                console.log(`Connected persona \"${personaNode.name}\" to theme \"${themeNode.name}\"`);\n              }\n            }\n          }\n        } catch (err) {\n          console.error(\"Error processing feedback item:\", err);\n        }\n      }\n      \n      // Update graph data every chunk to show progress\n      if (i < chunks.length - 1) {\n        setGraphData({...newGraph});\n        // Small delay to allow UI to update\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n    }\n    \n    // Step 3: Generate feature suggestions for top themes\n    console.log(\"Generating feature suggestions...\");\n    const significantThemes = Object.values(nodeMap.themes)\n      .filter(theme => theme.feedbackCount >= 2)\n      .sort((a, b) => b.feedbackCount - a.feedbackCount)\n      .slice(0, 5); // Top 5 themes\n    \n    console.log(`Found ${significantThemes.length} significant themes for feature generation`);\n    \n    for (const theme of significantThemes) {\n      try {\n        // Get feedback related to this theme\n        const relatedFeedback = feedbackItems.filter(item => {\n          const text = item.text.toLowerCase();\n          return text.includes(theme.name.toLowerCase());\n        }).map(item => item.text);\n        \n        // Generate feature ideas\n        console.log(`Generating features for theme \"${theme.name}\" with ${relatedFeedback.length} feedback items`);\n        let featureIdeas;\n        \n        try {\n          // Try AI service first\n          featureIdeas = await generateFeatureIdeas(theme.name, relatedFeedback);\n          console.log(\"AI generated feature ideas:\", featureIdeas);\n        } catch (aiError) {\n          // If AI fails, use mock generation\n          console.warn(\"AI feature generation failed, using fallback:\", aiError);\n          featureIdeas = mockGenerateFeatureIdeas(theme.name, relatedFeedback);\n          console.log(\"Fallback feature ideas:\", featureIdeas);\n        }\n        \n        if (featureIdeas && featureIdeas.length > 0) {\n          // Create feature nodes\n          for (const idea of featureIdeas) {\n            const featureId = `feature-${Date.now()}-${Object.keys(nodeMap.features).length}`;\n            const featureNode = {\n              id: featureId,\n              name: idea.name,\n              description: idea.description || \"\",\n              type: \"feature\",\n              priority: idea.priority || \"Medium\"\n            };\n            \n            newGraph.nodes.push(featureNode);\n            nodeMap.features[featureNode.name] = featureNode;\n            console.log(`Created feature: ${featureNode.name}`);\n            \n            // Link feature to theme\n            newGraph.links.push({\n              source: theme.id,\n              target: featureId,\n              strength: 0.8\n            });\n            \n            // Find personas connected to this theme\n            newGraph.links.forEach(link => {\n              const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n              const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n              \n              if ((sourceId === theme.id || targetId === theme.id)) {\n                const personaId = sourceId === theme.id ? targetId : sourceId;\n                const personaNode = newGraph.nodes.find(n => n.id === personaId && n.type === 'persona');\n                \n                if (personaNode) {\n                  // Link persona to feature\n                  const existingLink = newGraph.links.some(l => \n                    (l.source === personaId && l.target === featureId) ||\n                    (l.source === featureId && l.target === personaId)\n                  );\n                  \n                  if (!existingLink) {\n                    newGraph.links.push({\n                      source: personaId,\n                      target: featureId,\n                      strength: 0.6\n                    });\n                    console.log(`Connected persona \"${personaNode.name}\" to feature \"${featureNode.name}\"`);\n                  }\n                }\n              }\n            });\n          }\n        }\n      } catch (err) {\n        console.error(`Error generating features for theme \"${theme.name}\":`, err);\n      }\n    }\n    \n    // Ensure we have at least some features if none were generated\n    if (newGraph.nodes.filter(n => n.type === 'feature').length === 0) {\n      console.log(\"No features were generated - creating fallback features\");\n      \n      // Create a fallback feature for each major theme\n      for (const theme of significantThemes.slice(0, 3)) {\n        const featureId = `feature-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n        const featureNode = {\n          id: featureId,\n          name: `${theme.name} Improvement`,\n          type: \"feature\",\n          priority: theme.feedbackCount >= 5 ? \"High\" : \"Medium\",\n          fallback: true\n        };\n        \n        newGraph.nodes.push(featureNode);\n        console.log(`Created fallback feature: ${featureNode.name}`);\n        \n        // Link to theme\n        newGraph.links.push({\n          source: theme.id,\n          target: featureId,\n          strength: 0.8\n        });\n      }\n    }\n    \n    // Final graph update\n    console.log(\"Finalizing graph...\");\n    console.log(\"Final graph has:\", newGraph.nodes.length, \"nodes and\", newGraph.links.length, \"links\");\n    console.log(\"Nodes by type:\", {\n      personas: newGraph.nodes.filter(n => n.type === 'persona').length,\n      themes: newGraph.nodes.filter(n => n.type === 'theme').length,\n      features: newGraph.nodes.filter(n => n.type === 'feature').length\n    });\n    \n    setGraphData(newGraph);\n    \n    // Pre-compute positions for better visualization\n    setTimeout(() => {\n      if (simulationRef.current) {\n        simulationRef.current.stop();\n        \n        // Create a temporary simulation to calculate positions\n        const tempSimulation = d3.forceSimulation(newGraph.nodes)\n          .force(\"link\", d3.forceLink(newGraph.links).id(d => d.id).distance(100))\n          .force(\"charge\", d3.forceManyBody().strength(-300))\n          .force(\"center\", d3.forceCenter(dimensions.width/2, dimensions.height/2))\n          .force(\"collide\", d3.forceCollide(40));\n        \n        // Run several ticks to get a good initial layout\n        for (let i = 0; i < 100; i++) {\n          tempSimulation.tick();\n        }\n        \n        tempSimulation.stop();\n      }\n      \n      setIsAIProcessing(false);\n      setLoading(false);\n      console.log(\"Import processing complete\");\n    }, 100);\n  };\n  \n  // Start the processing\n  processChunks().catch(err => {\n    console.error(\"Error in processChunks:\", err);\n    setError(\"Error processing feedback. Please try again.\");\n    setIsAIProcessing(false);\n    setLoading(false);\n  });\n}, [dimensions]);\n\n// Add a new node (theme or feature)\nconst handleAddNode = useCallback(() => {\n  if (!newNodeName.trim()) {\n    alert(\"Please enter a node name\");\n    return;\n  }\n  \n  let newNode;\n  \n  if (modalType === 'theme') {\n    newNode = {\n      id: `theme-${Date.now()}`,\n      name: newNodeName,\n      type: \"theme\",\n      feedbackCount: newNodeFeedbackCount\n    };\n  } else if (modalType === 'feature') {\n    newNode = {\n      id: `feature-${Date.now()}`,\n      name: newNodeName,\n      type: \"feature\",\n      priority: newNodePriority\n    };\n  }\n  \n  if (newNode) {\n    setGraphData(prevData => ({\n      nodes: [...prevData.nodes, newNode],\n      links: [...prevData.links]\n    }));\n    \n    setShowModal(false);\n    setNewNodeName('');\n    setNewNodeFeedbackCount(10);\n    setNewNodePriority('Medium');\n  }\n}, [modalType, newNodeName, newNodeFeedbackCount, newNodePriority]);\n\n// Handle node selection and display node details\nconst handleNodeClick = useCallback((node) => {\n  if (!node) return;\n  \n  // Find connected nodes\n  const connectedLinks = graphData.links.filter(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    return sourceId === node.id || targetId === node.id;\n  });\n  \n  const connectedNodeIds = connectedLinks.map(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    return sourceId === node.id ? targetId : sourceId;\n  });\n  \n  const connectedNodes = graphData.nodes.filter(n => connectedNodeIds.includes(n.id));\n  \n  // Prepare insights\n  let insights = {\n    results: []\n  };\n  \n  if (node.type === \"theme\") {\n    // Theme view\n    insights.theme = node.name;\n    insights.feedbackCount = node.feedbackCount || 0;\n    \n    // Connected features\n    const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n    if (connectedFeatures.length > 0) {\n      insights.connectedFeatures = connectedFeatures;\n    }\n    \n    // Connected personas\n    const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n    if (connectedPersonas.length > 0) {\n      insights.connectedPersonas = connectedPersonas;\n    }\n  } else if (node.type === \"feature\") {\n    // Feature view\n    insights.isFeatureView = true;\n    insights.name = node.name;\n    insights.priority = node.priority || \"Medium\";\n    \n    // Connected themes\n    const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n    if (connectedThemes.length > 0) {\n      insights.connectedThemes = connectedThemes;\n    }\n    \n    // Connected personas\n    const connectedPersonas = connectedNodes.filter(n => n.type === \"persona\");\n    if (connectedPersonas.length > 0) {\n      insights.connectedPersonas = connectedPersonas;\n    }\n  } else if (node.type === \"persona\") {\n    // Persona view\n    insights.persona = node.name;\n    insights.feedbackCount = node.feedbackCount || 0;\n    \n    // Connected themes\n    const connectedThemes = connectedNodes.filter(n => n.type === \"theme\");\n    if (connectedThemes.length > 0) {\n      insights.connectedThemes = connectedThemes;\n    }\n    \n    // Connected features\n    const connectedFeatures = connectedNodes.filter(n => n.type === \"feature\");\n    if (connectedFeatures.length > 0) {\n      insights.connectedFeatures = connectedFeatures;\n    }\n    \n    // Find feedback from this persona\n    if (feedbackItems.length > 0) {\n      const personaFeedback = feedbackItems.filter(item => \n        item.user_role === node.name\n      );\n      \n      if (personaFeedback.length > 0) {\n        insights.results = personaFeedback.map((item, index) => ({\n          feedbackIndex: index,\n          text: item.text,\n          user_role: item.user_role\n        }));\n      }\n    }\n  }\n  \n  // Update insights and show panel\n  setAIInsights(insights);\n  setShowAIInsightsPanel(true);\n}, [graphData, feedbackItems]);\n\n// Create a connection between nodes\nconst handleConnectionSubmit = useCallback(() => {\n  if (!connectionSource || !connectionTarget) return;\n  \n  // Check if connection already exists\n  const existingConnection = graphData.links.some(link => {\n    const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n    const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n    \n    return (sourceId === connectionSource.id && targetId === connectionTarget) || \n           (sourceId === connectionTarget && targetId === connectionSource.id);\n  });\n  \n  if (!existingConnection) {\n    const newLink = {\n      source: connectionSource.id,\n      target: connectionTarget,\n      strength: connectionStrength\n    };\n    \n    setGraphData(prevData => ({\n      ...prevData,\n      links: [...prevData.links, newLink]\n    }));\n  }\n  \n  setShowConnectionModal(false);\n  setConnectionSource(null);\n  setConnectionTarget('');\n  setConnectionStrength(0.5);\n}, [connectionSource, connectionTarget, connectionStrength, graphData]);\n\n// Initialize connection creation\nconst connectNodes = useCallback(() => {\n  if (!selectedNode) return;\n  \n  // Find suitable targets (different type than selected node)\n  const targets = graphData.nodes.filter(n => n.id !== selectedNode.id && n.type !== selectedNode.type);\n  \n  if (targets.length === 0) {\n    alert(\"No compatible nodes found to connect with.\");\n    return;\n  }\n  \n  setConnectionSource(selectedNode);\n  setAvailableTargets(targets);\n  setConnectionTarget(targets[0].id);\n  setConnectionStrength(0.5);\n  setShowConnectionModal(true);\n}, [selectedNode, graphData]);\n\n// Export the current graph data\nconst exportData = useCallback(() => {\n  const dataStr = JSON.stringify(graphData, null, 2);\n  const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n  \n  const exportFileDefaultName = 'feedback-insights-data.json';\n  \n  const linkElement = document.createElement('a');\n  linkElement.setAttribute('href', dataUri);\n  linkElement.setAttribute('download', exportFileDefaultName);\n  linkElement.click();\n}, [graphData]);\n\n// Reset to initial data\nconst resetVisualization = useCallback(() => {\n  if (window.confirm(\"Are you sure you want to reset? This will remove all custom data.\")) {\n    setGraphData(initialData);\n    setSelectedNode(null);\n    setHighlightMode('none');\n  }\n}, []);\n\n// Handle new feedback submission\nconst handleAddFeedback = useCallback(async () => {\n  if (!newFeedback || !newFeedbackRole) {\n    setError(\"Please provide both feedback text and user role\");\n    return;\n  }\n  \n  // Create a new feedback item\n  const newFeedbackItem = {\n    id: `feedback-${Date.now()}`,\n    text: newFeedback,\n    user_role: newFeedbackRole,\n    timestamp: new Date().toISOString()\n  };\n  \n  // Add to feedback items\n  setFeedbackItems(prev => [...prev, newFeedbackItem]);\n  \n  // Process with AI\n  setIsAIProcessing(true);\n  try {\n    const result = await classifyFeedback(newFeedback);\n    \n    if (result && result.theme) {\n      // Process the feedback and update the graph\n      \n      // Check if the persona exists\n      let personaNode = graphData.nodes.find(node => \n        node.type === \"persona\" && node.name === newFeedbackRole\n      );\n      \n      if (!personaNode) {\n        // Create a new persona node\n        const personaId = `persona-${Date.now()}`;\n        personaNode = {\n          id: personaId,\n          name: newFeedbackRole,\n          type: \"persona\",\n          feedbackCount: 1\n        };\n        \n        // Add persona to graph\n        setGraphData(prev => ({\n          nodes: [...prev.nodes, personaNode],\n          links: [...prev.links]\n        }));\n      } else {\n        // Update persona feedback count\n        setGraphData(prev => ({\n          nodes: prev.nodes.map(node => \n            node.id === personaNode.id \n              ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n              : node\n          ),\n          links: [...prev.links]\n        }));\n      }\n      \n      // Check if theme exists\n      let themeNode = graphData.nodes.find(node => \n        node.type === \"theme\" && node.name === result.theme\n      );\n      \n      if (!themeNode) {\n        // Create a new theme node\n        const themeId = `theme-${Date.now()}`;\n        themeNode = {\n          id: themeId,\n          name: result.theme,\n          type: \"theme\",\n          feedbackCount: 1\n        };\n        \n        // Add theme to graph\n        setGraphData(prev => ({\n          nodes: [...prev.nodes, themeNode],\n          links: [\n            ...prev.links,\n            // Add link between persona and theme\n            {\n              source: personaNode.id,\n              target: themeId,\n              strength: 0.7\n            }\n          ]\n        }));\n      } else {\n        // Update theme and check for link\n        const link = graphData.links.find(link => {\n          const sourceId = typeof link.source === 'object' ? link.source.id : link.source;\n          const targetId = typeof link.target === 'object' ? link.target.id : link.target;\n          \n          return (sourceId === personaNode.id && targetId === themeNode.id) ||\n                 (sourceId === themeNode.id && targetId === personaNode.id);\n        });\n        \n        if (!link) {\n          // Create link if it doesn't exist\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => \n              node.id === themeNode.id \n                ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                : node\n            ),\n            links: [\n              ...prev.links,\n              {\n                source: personaNode.id,\n                target: themeNode.id,\n                strength: 0.7\n              }\n            ]\n          }));\n        } else {\n          // Just update the theme\n          setGraphData(prev => ({\n            nodes: prev.nodes.map(node => \n              node.id === themeNode.id \n                ? {...node, feedbackCount: (node.feedbackCount || 0) + 1}\n                : node\n            ),\n            links: [...prev.links]\n          }));\n        }\n      }\n    }\n    \n    // Reset form\n    setNewFeedback('');\n    setNewFeedbackRole('');\n    setShowFeedbackModal(false);\n    \n  } catch (error) {\n    console.error(\"Error processing feedback:\", error);\n    setAIError(\"Failed to process feedback. Please try again.\");\n  } finally {\n    setIsAIProcessing(false);\n  }\n}, [newFeedback, newFeedbackRole, graphData]);\n\n// Zoom control functions\nconst zoomIn = useCallback(() => {\n  if (!svgRef.current || !zoomRef.current) return;\n  \n  const svg = d3.select(svgRef.current);\n  const currentTransform = d3.zoomTransform(svg.node());\n  \n  svg.transition()\n    .duration(300)\n    .call(\n      zoomRef.current.transform,\n      d3.zoomIdentity\n        .translate(currentTransform.x, currentTransform.y)\n        .scale(currentTransform.k * 1.3)\n    );\n}, []);\n\nconst zoomOut = useCallback(() => {\n  if (!svgRef.current || !zoomRef.current) return;\n  \n  const svg = d3.select(svgRef.current);\n  const currentTransform = d3.zoomTransform(svg.node());\n  \n  svg.transition()\n    .duration(300)\n    .call(\n      zoomRef.current.transform,\n      d3.zoomIdentity\n        .translate(currentTransform.x, currentTransform.y)\n        .scale(currentTransform.k / 1.3)\n    );\n}, []);\n\nconst centerView = useCallback(() => {\n  if (!svgRef.current || !zoomRef.current) return;\n  \n  const svg = d3.select(svgRef.current);\n  \n  // Calculate the center point\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n  \n  // Create a transform that centers the view\n  const transform = d3.zoomIdentity\n    .translate(centerX, centerY)\n    .scale(1)\n    .translate(-centerX, -centerY);\n  \n  // Apply the transform with a smooth transition\n  svg.transition()\n    .duration(750)\n    .call(zoomRef.current.transform, transform);\n}, [dimensions]);\n\nconst fitToScreen = useCallback(() => {\n  if (!svgRef.current || !zoomRef.current || !graphData.nodes.length) return;\n  \n  const svg = d3.select(svgRef.current);\n  \n  // Find the bounds of all nodes\n  let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n  \n  graphData.nodes.forEach(node => {\n    if (!node.x || !node.y) return;\n    \n    if (node.x < minX) minX = node.x;\n    if (node.y < minY) minY = node.y;\n    if (node.x > maxX) maxX = node.x;\n    if (node.y > maxY) maxY = node.y;\n  });\n  \n  // If we don't have valid bounds, center view instead\n  if (!isFinite(minX) || !isFinite(minY) || !isFinite(maxX) || !isFinite(maxY)) {\n    centerView();\n    return;\n  }\n  \n  // Add padding\n  const padding = 50;\n  minX -= padding;\n  minY -= padding;\n  maxX += padding;\n  maxY += padding;\n  \n  // Calculate width and height of the content\n  const contentWidth = maxX - minX;\n  const contentHeight = maxY - minY;\n  \n  // Calculate scale to fit the content\n  const scale = Math.min(\n    dimensions.width / contentWidth,\n    dimensions.height / contentHeight,\n    2 // Maximum scale factor\n  ) * 0.9; // 90% to add some margin\n  \n  // Calculate the center of the content\n  const centerX = (minX + maxX) / 2;\n  const centerY = (minY + maxY) / 2;\n  \n  // Create a transform that centers and scales the content\n  const transform = d3.zoomIdentity\n    .translate(dimensions.width / 2, dimensions.height / 2)\n    .scale(scale)\n    .translate(-centerX, -centerY);\n  \n  // Apply the transform with a smooth transition\n  svg.transition()\n    .duration(750)\n    .call(zoomRef.current.transform, transform);\n}, [dimensions, graphData.nodes, centerView]);\n\n// Toggle mini-map visibility\nconst toggleMiniMap = useCallback(() => {\n  setShowMiniMap(!showMiniMap);\n}, [showMiniMap]);\n\n// Loading screen\nif (loading) {\n  return (\n    <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n      <div className=\"text-2xl text-blue-800 mb-4\">Loading Insights Network...</div>\n      <div className=\"w-16 h-16 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n    </div>\n  );\n}\n\n// Error screen\nif (error) {\n  return (\n    <div className=\"flex flex-col h-full items-center justify-center bg-gray-50\">\n      <div className=\"text-2xl text-red-800 mb-4\">Error Loading Data</div>\n      <div className=\"text-gray-600\">{error}</div>\n      <button \n        className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        onClick={() => window.location.reload()}\n      >\n        Retry\n      </button>\n    </div>\n  );\n}\n\nreturn (\n  <div className=\"flex flex-col h-full\">\n    {/* Header and controls */}\n    <div className=\"bg-white p-4 shadow-md\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-blue-800\">User Research Insights Network</h1>\n          <p className=\"text-gray-600\">Visualizing connections between user feedback, features, and personas</p>\n        </div>\n        \n        {/* Search bar */}\n        <div className=\"relative w-64\">\n          <input\n            type=\"text\"\n            placeholder=\"Search nodes...\"\n            value={searchTerm}\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n              if (e.target.value.length >= 2) {\n                const results = graphData.nodes.filter(node => \n                  node.name.toLowerCase().includes(e.target.value.toLowerCase())\n                );\n                setSearchResults(results);\n                setShowSearchResults(true);\n              } else {\n                setShowSearchResults(false);\n                setSearchResults([]);\n              }\n            }}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          {showSearchResults && searchResults.length > 0 && (\n            <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-300 rounded-md shadow-lg z-20 max-h-60 overflow-y-auto\">\n              {searchResults.map((result, index) => (\n                <div \n                  key={index}\n                  className=\"px-3 py-2 hover:bg-gray-100 cursor-pointer\"\n                  onClick={() => {\n                    setSelectedNode(result);\n                    handleNodeClick(result);\n                    setShowSearchResults(false);\n                  }}\n                >\n                  <div className=\"flex items-center\">\n                    <div \n                      className=\"w-3 h-3 rounded-full mr-2\"\n                      style={{ backgroundColor: colorScale(result.type) }}\n                    ></div>\n                    <span>{result.name}</span>\n                    <span className=\"ml-2 text-xs text-gray-500\">({result.type})</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Controls */}\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">Data:</span>\n          <button \n            className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n            onClick={exportData}\n          >\n            Export\n          </button>\n          <label className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm cursor-pointer\">\n            Import\n            <input \n              type=\"file\" \n              accept=\".json\" \n              className=\"hidden\" \n              onChange={importData}\n            />\n          </label>\n          <button \n            className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm\"\n            onClick={resetVisualization}\n          >\n            Reset\n          </button>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">View:</span>\n          <button \n            className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n            onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n          >\n            {isSimulationRunning ? 'Pause Simulation' : 'Resume Simulation'}\n          </button>\n          <button \n            className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n            onClick={centerView}\n          >\n            Center View\n          </button>\n          <button \n            className=\"px-3 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 text-sm\"\n            onClick={toggleMiniMap}\n          >\n            {showMiniMap ? 'Hide Mini-Map' : 'Show Mini-Map'}\n          </button>\n          <button \n            className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n            onClick={fitToScreen}\n            title=\"Fit all nodes to screen\"\n          >\n            Fit to Screen\n          </button>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">Add:</span>\n          <button \n            className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n            onClick={() => {\n              setModalType('theme');\n              setNewNodeName(`Theme ${graphData.nodes.filter(n => n.type === 'theme').length + 1}`);\n              setShowModal(true);\n            }}\n          >\n            Add Theme\n          </button>\n          <button \n            className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n            onClick={() => {\n              setModalType('feature');\n              setNewNodeName(`Feature ${graphData.nodes.filter(n => n.type === 'feature').length + 1}`);\n              setShowModal(true);\n            }}\n          >\n            Add Feature\n          </button>\n          <button \n            className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm\"\n            onClick={() => setShowFeedbackModal(true)}\n          >\n            Add Feedback\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"flex flex-wrap gap-4\">\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">Connect:</span>\n          <button \n            className={`px-3 py-1 rounded text-sm ${\n              selectedNode ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n            }`}\n            onClick={connectNodes}\n            disabled={!selectedNode}\n          >\n            Connect Nodes\n          </button>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">Feedback Weight:</span>\n          <input \n            type=\"range\" \n            min=\"1\" \n            max=\"10\" \n            value={feedbackWeight}\n            onChange={(e) => setFeedbackWeight(parseInt(e.target.value))}\n            className=\"w-32\"\n          />\n          <span className=\"text-sm text-gray-600\">{feedbackWeight}</span>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">Highlight:</span>\n          <button \n            className={`px-2 py-1 rounded text-xs ${highlightMode === 'none' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n            onClick={() => setHighlightMode('none')}\n          >\n            None\n          </button>\n          <button \n            className={`px-2 py-1 rounded text-xs ${highlightMode === 'themes' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n            onClick={() => setHighlightMode('themes')}\n          >\n            Themes\n          </button>\n          <button \n            className={`px-2 py-1 rounded text-xs ${highlightMode === 'features' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n            onClick={() => setHighlightMode('features')}\n          >\n            Features\n          </button>\n          <button \n            className={`px-2 py-1 rounded text-xs ${highlightMode === 'personas' ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-700'}`}\n            onClick={() => setHighlightMode('personas')}\n          >\n            Personas\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    {/* Main visualization container */}\n    <div className=\"flex flex-1 relative\">\n      <div \n        ref={containerRef} \n        className=\"flex-1 bg-gray-50 p-4 transition-all duration-300\"\n        style={{\n          marginRight: showAIInsightsPanel && !isPanelCollapsed ? `${panelWidth}px` : '0',\n          minHeight: '500px'\n        }}\n      >\n        <svg \n          ref={svgRef} \n          width=\"100%\" \n          height=\"100%\"\n          className=\"border border-gray-200 rounded-lg bg-white shadow-inner w-full h-full\"\n          style={{ minHeight: '500px' }}\n          onClick={() => setSelectedNode(null)}\n        />\n        \n        {/* Zoom controls */}\n        <div className=\"absolute bottom-8 right-8 flex flex-col bg-white rounded-lg shadow p-2 space-y-2 z-10\">\n          <button \n            className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n            onClick={zoomIn}\n          >\n            <span className=\"text-xl\">+</span>\n          </button>\n          <button \n            className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n            onClick={zoomOut}\n          >\n            <span className=\"text-xl\">-</span>\n          </button>\n          <button \n            className=\"w-8 h-8 flex items-center justify-center bg-gray-100 hover:bg-gray-200 rounded-full\"\n            onClick={fitToScreen}\n          >\n            <span className=\"text-xl\">⊡</span>\n          </button>\n        </div>\n      </div>\n      \n      {/* AI Insights Panel */}\n      {showAIInsightsPanel && aiInsights && (\n        <div \n          className={`fixed right-0 top-0 bottom-0 bg-white shadow-lg z-40 transition-all duration-300`}\n          style={{ \n            width: isPanelCollapsed ? '50px' : `${panelWidth}px`,\n            maxWidth: '40%'\n          }}\n        >\n          {/* Collapse/Expand Button */}\n          <div className=\"w-10 flex flex-col items-center pt-4 border-r border-gray-200 bg-gray-50\">\n            <button \n              onClick={() => setIsPanelCollapsed(!isPanelCollapsed)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 shadow-sm\"\n              title={isPanelCollapsed ? \"Expand panel\" : \"Collapse panel\"}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={\n                  isPanelCollapsed \n                    ? \"M13 5l7 7-7 7M5 5l7 7-7 7\" // Expand icon\n                    : \"M11 19l-7-7 7-7M19 19l-7-7 7-7\" // Collapse icon\n                } />\n              </svg>\n            </button>\n            \n            {isPanelCollapsed && (\n              <div className=\"mt-4 transform -rotate-90 whitespace-nowrap text-sm font-medium text-gray-600 origin-center\">\n                {aiInsights.isFeatureView ? 'Feature Details' : \n                 aiInsights.persona ? `${aiInsights.persona}` : \n                 aiInsights.theme ? `${aiInsights.theme}` : 'AI Insights'}\n              </div>\n            )}\n            \n            <button \n              onClick={() => setShowAIInsightsPanel(false)}\n              className=\"w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 text-gray-600 mt-4 shadow-sm\"\n              title=\"Close panel\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          \n          {/* Panel Content - Only shown when expanded */}\n          {!isPanelCollapsed && (\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-lg font-bold\">\n                  {aiInsights.isFeatureView ? 'Feature Details' : \n                   aiInsights.persona ? `${aiInsights.persona} Feedback` : \n                   aiInsights.theme ? `${aiInsights.theme} Feedback` : 'AI Insights'}\n                </h2>\n              </div>\n              \n              {/* Theme View */}\n              {aiInsights.theme && !aiInsights.isFeatureView && !aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feature View */}\n              {aiInsights.isFeatureView && (\n                <>\n                  <div className=\"mb-4 flex justify-between\">\n                    <div>\n                      <div className=\"text-sm text-gray-600\">Priority</div>\n                      <div className={`inline-block px-2 py-1 rounded text-xs font-medium ${\n                        aiInsights.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        aiInsights.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {aiInsights.priority}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Personas */}\n                  {aiInsights.connectedPersonas && aiInsights.connectedPersonas.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Related Personas</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedPersonas.map((persona, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-orange-50 text-orange-800 rounded text-sm\"\n                          >\n                            {persona.name}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Persona View */}\n              {aiInsights.persona && (\n                <>\n                  <div className=\"mb-4\">\n                    <div className=\"text-sm text-gray-600\">Feedback Count</div>\n                    <div className=\"text-lg font-semibold\">\n                      {aiInsights.feedbackCount > 0 ? aiInsights.feedbackCount : \n                       (aiInsights.results && aiInsights.results.length) || 0}\n                    </div>\n                  </div>\n                  \n                  {/* Connected Themes */}\n                  {aiInsights.connectedThemes && aiInsights.connectedThemes.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Common Themes</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedThemes.map((theme, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-blue-50 text-blue-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{theme.name}</span>\n                            <span className=\"text-xs text-blue-600\">\n                              {theme.feedbackCount || 0} feedback\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Connected Features */}\n                  {aiInsights.connectedFeatures && aiInsights.connectedFeatures.length > 0 && (\n                    <div className=\"mb-4\">\n                      <div className=\"text-sm text-gray-600 mb-1\">Relevant Features</div>\n                      <div className=\"space-y-1\">\n                        {aiInsights.connectedFeatures.map((feature, index) => (\n                          <div \n                            key={index} \n                            className=\"px-2 py-1 bg-green-50 text-green-800 rounded text-sm flex justify-between items-center\"\n                          >\n                            <span>{feature.name}</span>\n                            <span className={`text-xs px-1.5 py-0.5 rounded ${\n                              feature.priority === 'High' ? 'bg-red-100 text-red-800' :\n                              feature.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-green-100 text-green-800'\n                            }`}>\n                              {feature.priority}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n              \n              {/* Feedback Items */}\n              {aiInsights.results && aiInsights.results.length > 0 ? (\n                <>\n                  <h3 className=\"font-semibold text-sm text-gray-600 mb-2\">\n                    {aiInsights.persona ? 'User Feedback' : 'Feedback Classification'}\n                  </h3>\n                  {aiInsights.results.map((result, index) => (\n                    <div key={index} className=\"bg-gray-50 p-2 rounded mb-2\">\n                      <div className=\"text-sm\">{result.text}</div>\n                      <div className=\"mt-1 text-xs text-gray-500\">\n                        {result.user_role}\n                      </div>\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div className=\"text-gray-500 italic\">No feedback data available</div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n    \n    {/* Add Node Modal */}\n    {showModal && (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n          <h2 className=\"text-xl font-bold mb-4\">\n            Add New {modalType === 'theme' ? 'Theme' : 'Feature'}\n          </h2>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Name\n            </label>\n            <input \n              type=\"text\" \n              value={newNodeName}\n              onChange={(e) => setNewNodeName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder={`Enter ${modalType} name`}\n            />\n          </div>\n          \n          {modalType === 'theme' && (\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Feedback Count\n              </label>\n              <input \n                type=\"number\" \n                value={newNodeFeedbackCount}\n                onChange={(e) => setNewNodeFeedbackCount(parseInt(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"0\"\n              />\n            </div>\n          )}\n          \n          {modalType === 'feature' && (\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Priority\n              </label>\n              <select \n                value={newNodePriority}\n                onChange={(e) => setNewNodePriority(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n            </div>\n          )}\n          \n          <div className=\"flex justify-end space-x-2\">\n            <button \n              className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n              onClick={() => {\n                setShowModal(false);\n                setNewNodeName('');\n                setNewNodeFeedbackCount(10);\n                setNewNodePriority('Medium');\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              onClick={handleAddNode}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n    \n    {/* Connection Modal */}\n    {showConnectionModal && (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n          <h2 className=\"text-xl font-bold mb-4\">\n            Connect Nodes\n          </h2>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              From\n            </label>\n            <div className=\"px-3 py-2 border border-gray-300 rounded-md bg-gray-50\">\n              {connectionSource?.name} ({connectionSource?.type})\n            </div>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              To\n            </label>\n            <select \n              value={connectionTarget}\n              onChange={(e) => setConnectionTarget(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Select a target node</option>\n              {availableTargets.map((target) => (\n                <option key={target.id} value={target.id}>\n                  {target.name} ({target.type})\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Connection Strength: {connectionStrength.toFixed(1)}\n            </label>\n            <input \n              type=\"range\" \n              min=\"0.1\" \n              max=\"1\" \n              step=\"0.1\"\n              value={connectionStrength}\n              onChange={(e) => setConnectionStrength(parseFloat(e.target.value))}\n              className=\"w-full\"\n            />\n          </div>\n          \n          <div className=\"flex justify-end space-x-2\">\n            <button \n              className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n              onClick={() => {\n                setShowConnectionModal(false);\n                setConnectionSource(null);\n                setConnectionTarget('');\n                setConnectionStrength(0.5);\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              onClick={handleConnectionSubmit}\n              disabled={!connectionTarget}\n            >\n              Connect\n            </button>\n          </div>\n        </div>\n      </div>\n    )}\n    \n    {/* Add Feedback Modal */}\n    {showFeedbackModal && (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n        <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\n          <h2 className=\"text-xl font-bold mb-4\">\n            Add New Feedback\n          </h2>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              Feedback Text\n            </label>\n            <textarea \n              value={newFeedback}\n              onChange={(e) => setNewFeedback(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Enter user feedback\"\n              rows={4}\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n              User Role\n            </label>\n            <input \n              type=\"text\" \n              value={newFeedbackRole}\n              onChange={(e) => setNewFeedbackRole(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"e.g. Mobile User, Admin, Power User\"\n            />\n          </div>\n          \n          <div className=\"flex justify-end space-x-2\">\n            <button \n              className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\n              onClick={() => {\n                setShowFeedbackModal(false);\n                setNewFeedback('');\n                setNewFeedbackRole('');\n              }}\n            >\n              Cancel\n            </button>\n            <button \n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              onClick={handleAddFeedback}\n              disabled={isAIProcessing}\n            >\n              {isAIProcessing ? (\n                <div className=\"flex items-center\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                  Processing...\n                </div>\n              ) : 'Submit'}\n            </button>\n          </div>\n          \n          {aiError && (\n            <div className=\"mt-4 p-2 bg-red-100 text-red-700 rounded\">\n              {aiError}\n            </div>\n          )}\n        </div>\n      </div>\n    )}\n  </div>\n);\n};\n\nexport default UserResearchNetwork;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}